/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package movimientos.servicios;

import referenciales.*;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import menu.menu;

/**
 *
 * @author hpnotebook
 */
public class servicios extends javax.swing.JInternalFrame {

    conexion.conexion con = new conexion.conexion();
    javax.swing.table.DefaultTableModel t;
    int banPais, banDepartamento, banNuevo, baneditarnuevo = 0;
    String idPais = "", idDepartamento = "";
    static DecimalFormat num = new DecimalFormat("#,##0");
    SimpleDateFormat fec = new SimpleDateFormat("dd/MM/yyyy");

    JInternalFrame detalle;

    public servicios() {
        initComponents();
        ((BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        t = (javax.swing.table.DefaultTableModel) tabla_huesped.getModel();
        combos();
        visible(false);
        tabla_huesped.getTableHeader().setReorderingAllowed(false);
        Botones(false);
        t.setRowCount(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_huesped = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        combo_huespedes = new javax.swing.JComboBox<>();
        btn_agregar_huesped = new javax.swing.JButton();
        btn_quitar_huesped = new javax.swing.JButton();
        btn_huespedes = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btn_editar = new javax.swing.JButton();
        btn_borrar = new javax.swing.JButton();
        btn_grabar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();
        btn_salir = new javax.swing.JButton();
        btn_nuevo = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        combo_nombre = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txt_codigo = new javax.swing.JTextField();
        btn_servicios = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txt_descripcion = new javax.swing.JEditorPane();
        jPanel9 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txt_precio = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        combo_realizado = new javax.swing.JComboBox<>();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        combo_detalle = new javax.swing.JComboBox<>();
        btn_agregar_detalle = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(950, 577));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tabla_huesped.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Codigo", "Huesped"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_huesped.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabla_huespedMousePressed(evt);
            }
        });
        tabla_huesped.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabla_huespedKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tabla_huesped);

        jLabel19.setText("Huesped :");

        combo_huespedes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_huespedes.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_huespedesFocusGained(evt);
            }
        });
        combo_huespedes.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_huespedesPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_huespedes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_huespedesActionPerformed(evt);
            }
        });
        combo_huespedes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_huespedesKeyPressed(evt);
            }
        });

        btn_agregar_huesped.setBackground(new java.awt.Color(255, 255, 255));
        btn_agregar_huesped.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/mas2.png"))); // NOI18N
        btn_agregar_huesped.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregar_huespedActionPerformed(evt);
            }
        });

        btn_quitar_huesped.setBackground(new java.awt.Color(255, 255, 255));
        btn_quitar_huesped.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/menos.png"))); // NOI18N
        btn_quitar_huesped.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_quitar_huespedActionPerformed(evt);
            }
        });

        btn_huespedes.setBackground(new java.awt.Color(255, 255, 255));
        btn_huespedes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/buscar3.png"))); // NOI18N
        btn_huespedes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_huespedesesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo_huespedes, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_huespedes, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_agregar_huesped, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_quitar_huesped, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(combo_huespedes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_quitar_huesped, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_agregar_huesped, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_huespedes, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btn_editar.setBackground(new java.awt.Color(255, 255, 255));
        btn_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/editar.png"))); // NOI18N
        btn_editar.setText("Editar");
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });

        btn_borrar.setBackground(new java.awt.Color(255, 255, 255));
        btn_borrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/borrar.png"))); // NOI18N
        btn_borrar.setText("Borrar");
        btn_borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_borrarActionPerformed(evt);
            }
        });

        btn_grabar.setBackground(new java.awt.Color(255, 255, 255));
        btn_grabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/grabar.png"))); // NOI18N
        btn_grabar.setText("Grabar");
        btn_grabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_grabarActionPerformed(evt);
            }
        });

        btn_cancelar.setBackground(new java.awt.Color(255, 255, 255));
        btn_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/cancelar.png"))); // NOI18N
        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        btn_salir.setBackground(new java.awt.Color(255, 255, 255));
        btn_salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/atras5.png"))); // NOI18N
        btn_salir.setText("Salir");
        btn_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salirActionPerformed(evt);
            }
        });

        btn_nuevo.setBackground(new java.awt.Color(255, 255, 255));
        btn_nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/agregar.png"))); // NOI18N
        btn_nuevo.setText("Nuevo");
        btn_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_nuevo)
                .addGap(5, 5, 5)
                .addComponent(btn_editar)
                .addGap(5, 5, 5)
                .addComponent(btn_borrar)
                .addGap(5, 5, 5)
                .addComponent(btn_grabar)
                .addGap(5, 5, 5)
                .addComponent(btn_cancelar)
                .addGap(5, 5, 5)
                .addComponent(btn_salir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btn_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_borrar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_editar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_grabar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setPreferredSize(new java.awt.Dimension(100, 130));

        jLabel13.setText("Nombre :");

        combo_nombre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_nombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_nombreFocusGained(evt);
            }
        });
        combo_nombre.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_nombrePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_nombreActionPerformed(evt);
            }
        });
        combo_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_nombreKeyPressed(evt);
            }
        });

        jLabel2.setText("Codigo :");

        txt_codigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_codigoFocusGained(evt);
            }
        });
        txt_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_codigoActionPerformed(evt);
            }
        });
        txt_codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_codigoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_codigoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_codigoKeyTyped(evt);
            }
        });

        btn_servicios.setBackground(new java.awt.Color(255, 255, 255));
        btn_servicios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/buscar3.png"))); // NOI18N
        btn_servicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_serviciosesActionPerformed(evt);
            }
        });

        jLabel17.setText("Descripcion :");

        txt_descripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_descripcionKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_descripcionKeyTyped(evt);
            }
        });
        jScrollPane4.setViewportView(txt_descripcion);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel2)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(combo_nombre, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_codigo)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addComponent(btn_servicios, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(combo_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)))
                    .addComponent(btn_servicios, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setPreferredSize(new java.awt.Dimension(100, 130));

        jLabel15.setText("Precio :");

        jLabel16.setText("Realizado :");

        txt_precio.setEditable(false);
        txt_precio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_precioActionPerformed(evt);
            }
        });
        txt_precio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_precioKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_precioKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_precioKeyTyped(evt);
            }
        });

        jLabel21.setText("Fecha :");

        combo_realizado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_realizado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_realizadoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                combo_realizadoFocusLost(evt);
            }
        });
        combo_realizado.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_realizadoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_realizado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_realizadoKeyPressed(evt);
            }
        });

        jDateChooser1.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser1.setEnabled(false);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel15)
                    .addComponent(jLabel21))
                .addGap(30, 30, 30)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_precio)
                    .addComponent(combo_realizado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE)))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addGap(8, 8, 8)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(combo_realizado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txt_precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/atras.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(8, 175, 178));
        jLabel3.setText("Servicios");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.setPreferredSize(new java.awt.Dimension(337, 174));

        jLabel20.setText("Detalle :");

        combo_detalle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_detalle.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_detalleFocusGained(evt);
            }
        });
        combo_detalle.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_detallePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_detalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_detalleActionPerformed(evt);
            }
        });
        combo_detalle.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_detalleKeyPressed(evt);
            }
        });

        btn_agregar_detalle.setBackground(new java.awt.Color(255, 255, 255));
        btn_agregar_detalle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/edit.png"))); // NOI18N
        btn_agregar_detalle.setText("Editar");
        btn_agregar_detalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregar_detalleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(combo_detalle, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_agregar_detalle, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_agregar_detalle)
                    .addComponent(combo_detalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(74, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(108, 108, 108))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE)))
                .addGap(93, 93, 93))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 935, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 786, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        cerrar(detalle);
        dispose();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
        banNuevo = 2;
        Botones(true);
        visible(true);
        btn_servicios.setEnabled(false);
        btn_borrar.setEnabled(false);
        tabla_huesped.setEnabled(true);
        txt_codigo.setEnabled(false);
    }//GEN-LAST:event_btn_editarActionPerformed

    private void btn_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salirActionPerformed
        dispose();
    }//GEN-LAST:event_btn_salirActionPerformed

    private void btn_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nuevoActionPerformed
        banNuevo = 1;
        limpiaTxt();
        Botones(true);
        visible(true);
        btn_editar.setEnabled(false);
        btn_borrar.setEnabled(false);
        baneditarnuevo = 1;
        combo_nombre.requestFocus();
        btn_servicios.setEnabled(false);
        jDateChooser1.setDate(new java.util.Date());
        txt_precio.setText("0");
        tabla_huesped.setEnabled(true);
        txt_codigo.setEnabled(false);
    }//GEN-LAST:event_btn_nuevoActionPerformed

    private void tabla_huespedKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabla_huespedKeyReleased

    }//GEN-LAST:event_tabla_huespedKeyReleased

    private void btn_borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_borrarActionPerformed
        if(txt_codigo.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Debe seleccionar un servicio");
        }else{
        int mensaje = JOptionPane.showConfirmDialog(null, "Desea eliminar el registro", "Atencion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (mensaje == 0) {
            try {

                String sql = "";     
                
                if(combo_detalle.getSelectedItem().equals("CAMA EXTRA")){
               sql="delete from servicios_cama_extra where servicios_id =" + txt_codigo.getText() + "";
                    }else if(combo_detalle.getSelectedItem().equals("CONSUMICION")){
                        sql="delete from servicios_consumicion where servicio_id=" + txt_codigo.getText() + "";
                    }else if(combo_detalle.getSelectedItem().equals("EQUIPAJE")){
                        sql="delete from servicios_equipaje where servicios_id=" + txt_codigo.getText() + "";
                    }else if(combo_detalle.getSelectedItem().equals("ESTACIONAMIENTO")){
                        sql="delete from servicios_estacionamiento where servicio_id=" + txt_codigo.getText() + "";
                    }else if(combo_detalle.getSelectedItem().equals("LAVANDERIA")){
                        sql="delete from servicios_lavanderia where servicios_id=" + txt_codigo.getText() + "";
                    }else if(combo_detalle.getSelectedItem().equals("LLAMADAS DESPERTADOR")){
                        sql="delete from servicios_llamadas_despertador where servicio_id=" + txt_codigo.getText() + "";
                    }else if(combo_detalle.getSelectedItem().equals("MANTENIMIENTO")){
                        sql="delete from servicios_mantenimiento where servicios_id=" + txt_codigo.getText() + "";
                    }else if(combo_detalle.getSelectedItem().equals("MENSAJES")){
                        sql="delete from servicios_mensajes where servicios_id=" + txt_codigo.getText() + "";
                    }else if(combo_detalle.getSelectedItem().equals("SPA Y SAUNA")){
                        sql="delete from servicios_spa_sauna where servicios_id=" + txt_codigo.getText() + "";
                    }else if(combo_detalle.getSelectedItem().equals("SUPERVICION Y LIMPIEZA")){
                        sql="delete from servicios_supervision_limpieza where servicios_id=" + txt_codigo.getText() + "";
                    }else if(combo_detalle.getSelectedItem().equals("TRASLADO")){
                        sql="delete from servicios_traslado where servicios_id=" + txt_codigo.getText() + "";
                    }else if(combo_detalle.getSelectedItem().equals("TURISMO")){
                        sql="delete from servicios_turismo where servicios_id=" + txt_codigo.getText() + "";
                    }
                
                con.actualiza2(sql);
                
                sql = "DELETE FROM servicios_detalle WHERE id_servicios =" + txt_codigo.getText() + "";
                con.actualiza2(sql);
                sql = "DELETE FROM servicios WHERE id =" + txt_codigo.getText() + "";
                System.out.println(sql);
                con.actualiza2(sql);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al eliminar" + e);
            }
        }
        btn_cancelar.doClick();
        }
    }//GEN-LAST:event_btn_borrarActionPerformed

    private void btn_grabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_grabarActionPerformed
        if(tabla_huesped.getRowCount()>0){
        if (vacio() == false) {

            String idnombre = con.BuscaCol("SELECT s.nombre_id \n"
                    + "FROM servicios s\n"
                    + "LEFT JOIN servicios_nombres sn ON s.nombre_id = sn.id\n"
                    + "WHERE sn.nombre = '" + combo_nombre.getSelectedItem() + "'");

            String realizado = combo_realizado.getSelectedItem().toString();

            if (banNuevo == 1) {
                if(tabla==null){
                JOptionPane.showMessageDialog(this, "no puede guardar sin detalle");
                }else{
                guardar(idnombre, realizado);
                btn_cancelar.doClick();
                }
            }
            if (banNuevo == 2) {
                editar(idnombre, realizado);
                btn_cancelar.doClick();
            }
            

        }
        }else{
            JOptionPane.showMessageDialog(this, "no puede guardar sin detalle");
        }
    }//GEN-LAST:event_btn_grabarActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        limpiaTxt();
        banNuevo = 0;
        Botones(false);
        visible(false);
        tabla_huesped.setEnabled(false);
        //cargar_tabla("nombre","");
        baneditarnuevo = 0;
        combos();
        btn_servicios.setEnabled(true);
        f = -1;
        c = -1;
        tabla = null;
        detalle = null;
        txt_codigo.setEnabled(true);
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void tabla_huespedMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_huespedMousePressed

    }//GEN-LAST:event_tabla_huespedMousePressed

    private void combo_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_nombreActionPerformed

    }//GEN-LAST:event_combo_nombreActionPerformed

    private void txt_precioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_precioKeyTyped
        con.validar_campos("numeros", evt);
    }//GEN-LAST:event_txt_precioKeyTyped

    private void txt_precioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_precioKeyReleased
        formato_numeros(txt_precio);
    }//GEN-LAST:event_txt_precioKeyReleased

    private void txt_precioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_precioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            combo_huespedes.requestFocus();
        }
    }//GEN-LAST:event_txt_precioKeyPressed

    private void combo_nombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_nombreKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_descripcion.requestFocus();
        }
    }//GEN-LAST:event_combo_nombreKeyPressed

    private void combo_nombreFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_nombreFocusGained
        combo_nombre.showPopup();
    }//GEN-LAST:event_combo_nombreFocusGained

    private void combo_nombrePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_nombrePopupMenuWillBecomeInvisible
        if (combo_nombre.getSelectedIndex() != -1) {
            txt_descripcion.requestFocus();
        }
    }//GEN-LAST:event_combo_nombrePopupMenuWillBecomeInvisible
    String traefil="";
    private void txt_codigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        traefil="";
        String codd= "";
        codd= txt_codigo.getText().trim();
        limpiaTxt();
        txt_codigo.setText(codd);
        traeFila(txt_codigo.getText());
        if(traefil.equals("datos")){
            Botones(true);
            btn_agregar_detalle.setEnabled(false);
        }else{
            btn_cancelar.doClick();
            JOptionPane.showMessageDialog(null, "codigo no existe");
            txt_codigo.setText("");
        }
        }
    }//GEN-LAST:event_txt_codigoKeyPressed

    private void txt_codigoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoKeyReleased

    private void txt_codigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoKeyTyped
        con.validar_campos("numeros", evt);
    }//GEN-LAST:event_txt_codigoKeyTyped

    private void btn_serviciosesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_serviciosesActionPerformed
        menu.llamar_internal(new buscadores.buscador_servicios("servicios"));
    }//GEN-LAST:event_btn_serviciosesActionPerformed

    private void combo_huespedesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_huespedesFocusGained
        combo_huespedes.showPopup();
    }//GEN-LAST:event_combo_huespedesFocusGained

    private void combo_huespedesPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_huespedesPopupMenuWillBecomeInvisible
         
    }//GEN-LAST:event_combo_huespedesPopupMenuWillBecomeInvisible

    private void combo_huespedesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_huespedesActionPerformed
        if (!id_huespedes.equals("") && !id_huespedes.equals("nada")) {
            
            if(tabla_huesped.getRowCount()==0){
                cargaCombo(combo_huespedes, "SELECT CONCAT(p.nombre,' ',p.apellido)\n" +
                                    "FROM huespedes h\n" +
                                    "LEFT JOIN persona p ON h.persona_id = p.id\n" +
                                    "LEFT JOIN estadia_huespedes eh ON eh.huespedes_id = h.id\n" +
                                    "LEFT JOIN estadia e ON e.id = eh.id_estadia\n" +
                                    "WHERE e.estado = 'A'", "nombreyapellido");
            }else{
                combos1(tabla_huesped.getValueAt(0, 0).toString());
            }
                
                combo_huespedes.setSelectedItem(con.BuscaCol("SELECT CONCAT(p.nombre,' ',p.apellido)\n" +
                                                                "FROM huespedes h\n" +
                                                                "LEFT JOIN persona p ON h.persona_id = p.id\n" +
                                                                "LEFT JOIN estadia_huespedes eh ON eh.huespedes_id = h.id "
                                                                + " WHERE h.id = " + id_huespedes));
               
               
                
                
               id_huespedes="";
               
               
            }else if(id_huespedes.equals("nada")){
                
                if(tabla_huesped.getRowCount()==0){
                    
                   cargaCombo(combo_huespedes, "SELECT CONCAT(p.nombre,' ',p.apellido)\n" +
                                    "FROM huespedes h\n" +
                                    "LEFT JOIN persona p ON h.persona_id = p.id\n" +
                                    "LEFT JOIN estadia_huespedes eh ON eh.huespedes_id = h.id\n" +
                                    "LEFT JOIN estadia e ON e.id = eh.id_estadia\n" +
                                    "WHERE e.estado = 'A'", "nombreyapellido");
                    
                }else{
                    combos1(tabla_huesped.getValueAt(0, 0).toString());
                }
                
                
              
               id_huespedes="";
            }
    }//GEN-LAST:event_combo_huespedesActionPerformed

    private void combo_huespedesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_huespedesKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btn_agregar_huesped.requestFocus();
            btn_agregar_huesped.doClick();
        }
    }//GEN-LAST:event_combo_huespedesKeyPressed

    private void btn_agregar_huespedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregar_huespedActionPerformed
        if (combo_huespedes.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una caracteristica");
            combo_huespedes.requestFocus();
        } /*else if(txt_cant.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Cargar cantidad");
            txt_cant.requestFocus();
        }*/ else {
            cargar_huesped();
            combos1(tabla_huesped.getValueAt(0, 0).toString());
            combo_huespedes.requestFocus();
        }
        if(tabla_huesped.getRowCount()==1){
            combo_detalle.setSelectedIndex(-1);
        }

    }//GEN-LAST:event_btn_agregar_huespedActionPerformed

    private void txt_precioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_precioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_precioActionPerformed

    private void btn_quitar_huespedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_quitar_huespedActionPerformed
        if (tabla_huesped.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar por lo menos una fila", "Atencion",
                    JOptionPane.WARNING_MESSAGE);

        } else {
            int mensaje = JOptionPane.showConfirmDialog(null, "Desea eliminar la fila seleccionada", "Atencion",
                    JOptionPane.WARNING_MESSAGE, JOptionPane.QUESTION_MESSAGE);
            if (mensaje == 0) {
                javax.swing.table.DefaultTableModel tab = (javax.swing.table.DefaultTableModel) tabla_huesped.getModel();
                tab.removeRow(tabla_huesped.getSelectedRow());

            }
            combo_huespedes.setSelectedIndex(-1);
        }
        if(tabla_huesped.getRowCount()==0){
            combos();
            combo_detalle.setSelectedIndex(-1);
        }
    }//GEN-LAST:event_btn_quitar_huespedActionPerformed

    private void txt_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_codigoActionPerformed

    }//GEN-LAST:event_txt_codigoActionPerformed

    private void txt_codigoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_codigoFocusGained
        if (baneditarnuevo == 0) {
            
            if (!id_servicios.equals("") && !id_servicios.equals("nada")) {
                Botones(true);
                btn_agregar_detalle.setEnabled(false);
                traeFila(id_servicios);

                id_servicios = "";

            } else if (id_servicios.equals("nada")) {
                //si es combo que se actualize aca
                id_servicios = "";
            }
        }
    }//GEN-LAST:event_txt_codigoFocusGained

    private void combo_detalleFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_detalleFocusGained
        combo_detalle.showPopup();
    }//GEN-LAST:event_combo_detalleFocusGained

    private void combo_detallePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_detallePopupMenuWillBecomeInvisible
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_detallePopupMenuWillBecomeInvisible

    private void combo_detalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_detalleActionPerformed

        cerrar(detalle);
        detalle = null;
        f = -1;
        c = -1;
        tabla = null;
    }//GEN-LAST:event_combo_detalleActionPerformed

    private void combo_detalleKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_detalleKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btn_agregar_detalle.requestFocus();
            btn_agregar_detalle.doClick();
        }
    }//GEN-LAST:event_combo_detalleKeyPressed

    private void btn_agregar_detalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregar_detalleActionPerformed
        /*  if (combo_detalle.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una cama");
            combo_detalle.requestFocus();
        } else {
            cargar_camas();
            combo_detalle.requestFocus();
        }*/
        String pasar = "";
        if (banNuevo == 2) {
            pasar = txt_codigo.getText();
        }
        String idhues="0";
        if(tabla_huesped.getRowCount()>0){
            idhues = tabla_huesped.getValueAt(0, 0).toString();
        }

        if (detalle == null && combo_detalle.getSelectedIndex() > -1) {

            if (combo_detalle.getSelectedItem().equals("CAMA EXTRA")) {

                detalle = new movimientos.servicios.detalle_cama_extra("servicios", pasar, idhues);

            } else if (combo_detalle.getSelectedItem().equals("CONSUMICION")) {
                
                detalle = new movimientos.servicios.detalle_consumicion("servicios", pasar, idhues);

            } else if (combo_detalle.getSelectedItem().equals("EQUIPAJE")) {
                
                detalle = new movimientos.servicios.detalle_equipaje("servicios", pasar, idhues);

            } else if (combo_detalle.getSelectedItem().equals("ESTACIONAMIENTO")) {
                
                detalle = new movimientos.servicios.detalle_estacionamiento("servicios", pasar);

            } else if (combo_detalle.getSelectedItem().equals("LAVANDERIA")) {
                
                detalle = new movimientos.servicios.detalle_lavanderia("servicios", pasar, idhues);

            } else if (combo_detalle.getSelectedItem().equals("LLAMADAS DESPERTADOR")) {
                
                detalle = new movimientos.servicios.detalle_llamadas_despertador("servicios", pasar, idhues);

            } else if (combo_detalle.getSelectedItem().equals("MANTENIMIENTO")) {
                
                detalle = new movimientos.servicios.detalle_mantenimiento("servicios", pasar, idhues);

            } else if (combo_detalle.getSelectedItem().equals("MENSAJES")) {
                
                detalle = new movimientos.servicios.detalle_mensajes("servicios", pasar);

            } else if (combo_detalle.getSelectedItem().equals("SPA Y SAUNA")) {
                
                detalle = new movimientos.servicios.detalle_spa_sauna("servicios", pasar);

            } else if (combo_detalle.getSelectedItem().equals("SUPERVICION Y LIMPIEZA")) {
                
                detalle = new movimientos.servicios.detalle_limpieza("servicios", pasar, idhues);

            } else if (combo_detalle.getSelectedItem().equals("TRASLADO")) {
                
                detalle = new movimientos.servicios.detalle_traslado("servicios", pasar);

            } else if (combo_detalle.getSelectedItem().equals("TURISMO")) {
                
                detalle = new movimientos.servicios.detalle_turismo("servicios", pasar);

            }

            menu.llamar_internal(detalle);

        } else {
            mostrar(detalle);
        }
    }//GEN-LAST:event_btn_agregar_detalleActionPerformed

    private void btn_huespedesesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_huespedesesActionPerformed
        menu.llamar_internal(new buscadores.buscador_huesped("servicios"));
    }//GEN-LAST:event_btn_huespedesesActionPerformed

    private void txt_descripcionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_descripcionKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //jDateChooser1.requestFocus();
            combo_realizado.requestFocus();
        }
    }//GEN-LAST:event_txt_descripcionKeyPressed

    private void txt_descripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_descripcionKeyTyped
        con.validar_campos(new int[]{39, 126}, "letras_y_numeros", evt, new int[]{47, 164, 165, 209, 241});
    }//GEN-LAST:event_txt_descripcionKeyTyped

    private void combo_realizadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_realizadoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_precio.requestFocus();
        }
    }//GEN-LAST:event_combo_realizadoKeyPressed

    private void combo_realizadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_realizadoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_realizadoFocusLost

    private void combo_realizadoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_realizadoPopupMenuWillBecomeInvisible
        if (combo_realizado.getSelectedIndex() != -1) {
            txt_precio.requestFocus();
        }
    }//GEN-LAST:event_combo_realizadoPopupMenuWillBecomeInvisible

    private void combo_realizadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_realizadoFocusGained
        combo_realizado.showPopup();
    }//GEN-LAST:event_combo_realizadoFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_agregar_detalle;
    private javax.swing.JButton btn_agregar_huesped;
    private javax.swing.JButton btn_borrar;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_grabar;
    private javax.swing.JButton btn_huespedes;
    private javax.swing.JButton btn_nuevo;
    private javax.swing.JButton btn_quitar_huesped;
    private javax.swing.JButton btn_salir;
    private javax.swing.JButton btn_servicios;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> combo_detalle;
    private static javax.swing.JComboBox<String> combo_huespedes;
    private javax.swing.JComboBox<String> combo_nombre;
    private javax.swing.JComboBox<String> combo_realizado;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable tabla_huesped;
    private static javax.swing.JTextField txt_codigo;
    private javax.swing.JEditorPane txt_descripcion;
    private static javax.swing.JTextField txt_precio;
    // End of variables declaration//GEN-END:variables

    private void combos() {
        cargaCombo(combo_nombre, "SELECT nombre FROM servicios_nombres ORDER BY nombre", "nombre");
        cargaCombo(combo_huespedes, "SELECT CONCAT(p.nombre,' ',p.apellido)\n" +
                                    "FROM huespedes h\n" +
                                    "LEFT JOIN persona p ON h.persona_id = p.id\n" +
                                    "LEFT JOIN estadia_huespedes eh ON eh.huespedes_id = h.id\n" +
                                    "LEFT JOIN estadia e ON e.id = eh.id_estadia\n" +
                                    "WHERE e.estado = 'A'", "nombreyapellido");
        combo_realizado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"SI", "NO"}));
        combo_detalle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"CAMA EXTRA", "CONSUMICION", "EQUIPAJE",
            "ESTACIONAMIENTO", "LAVANDERIA", "LLAMADAS DESPERTADOR", "MANTENIMIENTO", "MENSAJES", "SPA Y SAUNA",
            "SUPERVICION Y LIMPIEZA", "TRASLADO", "TURISMO"}));
        banPais = 1;
        combo_realizado.setSelectedIndex(-1);
        combo_detalle.setSelectedIndex(-1);
    }
    
    private void combos1(String id_huesped) {
        int esta=0;
        try {
            String sql = "SELECT eh.id_estadia\n" +
                    "FROM huespedes h\n" +
                    "LEFT JOIN estadia_huespedes eh ON eh.huespedes_id = h.id "
                    + "LEFT JOIN estadia e ON e.id = eh.id_estadia "
                    + "WHERE h.id = " + id_huesped + " AND e.estado = 'A' ";
            con.traeQuery(sql);
            if (con.resultado.next()) {
                esta = con.resultado.getInt("eh.id_estadia");
            }
            
            cargaCombo(combo_huespedes, "SELECT CONCAT(p.nombre,' ',p.apellido)\n" +
                                        "FROM huespedes h\n" +
                                        "LEFT JOIN persona p ON h.persona_id = p.id\n" +
                                        "LEFT JOIN estadia_huespedes eh ON eh.huespedes_id = h.id "
                                        + " WHERE eh.id_estadia = "+esta+" ", "nombreyapellido");
        } catch (SQLException ex) {
            Logger.getLogger(servicios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void cargaCombo(JComboBox cbo, String sql, String columna) {
        try {
            cbo.removeAllItems();
            con.sentencia = con.conexion.createStatement();
            con.resultado = con.sentencia.executeQuery(sql);
            while (con.resultado.next()) {
                if (columna.equals("nombreyapellido")) {
                    cbo.addItem(con.resultado.getString("CONCAT(p.nombre,' ',p.apellido)"));
                } else if (columna.equals("nombre")) {
                    cbo.addItem(con.resultado.getString("nombre"));
                }

            }
            cbo.setSelectedIndex(-1);
        } catch (SQLException ex) {
            Logger.getLogger(servicios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void limpiaTxt() {

        txt_descripcion.setText("");

        txt_precio.setText("");

        txt_codigo.setText("");
        jDateChooser1.setDate(null);

        combo_nombre.setSelectedIndex(-1);
        combo_huespedes.setSelectedIndex(-1);
        combo_realizado.setSelectedIndex(-1);

        combo_detalle.setSelectedIndex(-1);

        t.setRowCount(0);
    }

    private void Botones(boolean b) {
        if (b == true) {
            btn_grabar.setEnabled(true);
            btn_agregar_detalle.setEnabled(true);
            btn_nuevo.setEnabled(false);
            btn_salir.setEnabled(false);
            btn_cancelar.setEnabled(true);
            btn_editar.setEnabled(true);
            btn_borrar.setEnabled(true);
        } else {
            btn_grabar.setEnabled(false);
            btn_agregar_detalle.setEnabled(false);
            btn_nuevo.setEnabled(true);
            btn_salir.setEnabled(true);
            btn_cancelar.setEnabled(false);
            btn_editar.setEnabled(false);
            btn_borrar.setEnabled(false);
        }
    }

    private void traeFila(String id) {
        int idhabitacion;

        try {
            String sql = "SELECT * FROM servicios "
                    + "WHERE id = " + id + " ";
            con.traeQuery(sql);
            if (con.resultado.next()) {
                traefil = "datos";
                idhabitacion = con.resultado.getInt("id");
                txt_descripcion.setText(con.resultado.getString("descripcion"));

                txt_precio.setText(num.format(con.resultado.getInt("precio")));

                jDateChooser1.setDate(con.resultado.getDate("fecha"));
                combo_nombre.setSelectedItem(con.BuscaCol("SELECT nombre FROM servicios_nombres WHERE id = " + con.resultado.getString("nombre_id")));
                combo_realizado.setSelectedItem(con.resultado.getString("realizado"));
                combo_detalle.setSelectedItem(combo_seleccionado);

                //combo_estado.setSelectedItem(con.BuscaCol("SELECT descripcion FROM habitacion_estado WHERE id = " + con.resultado.getString("estado_id")));
                sql = "SELECT h.id, CONCAT(p.nombre,' ',p.apellido)\n"
                        + "FROM huespedes h\n"
                        + "LEFT JOIN persona p ON h.persona_id = p.id\n"
                        + "RIGHT JOIN servicios_detalle s ON h.id = s.huesped_id\n"
                        + "WHERE s.id_servicios = " + con.resultado.getInt("id") + " ";

                t.setRowCount(0);
                con.sentencia = con.conexion.createStatement();
                con.resultado = con.sentencia.executeQuery(sql);
                while (con.resultado.next()) {
                    t.addRow(new Object[]{con.resultado.getInt("h.id"),
                        con.resultado.getString("CONCAT(p.nombre,' ',p.apellido)")});

                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(servicios.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void guardar(String idnombre, String realizado) {
        try {
            String sql = "INSERT INTO servicios "
                    + "(nombre_id,descripcion,fecha,usuario_id,realizado,precio) "
                    + "VALUES (" + idnombre + ", '" + txt_descripcion.getText() + "' ,'" + con.fechaymd(jDateChooser1.getDate()) + "'," + 1 + ","
                    + "'" + realizado + "','" + txt_precio.getText().replace(".", "") + "' ) ";
            System.out.println(sql);
            con.actualiza(sql);

            sql = "SELECT LAST_INSERT_ID()";
            con.traeQuery(sql);
            String id = "";
            if (con.resultado.next()) {
                id = con.resultado.getString(1);
            }
            
                
                sql = "SELECT e.id\n" +
                        "FROM estadia e\n" +
                        "LEFT JOIN estadia_huespedes eh ON e.id = eh.huespedes_id\n" +
                        "WHERE eh.id = "+tabla_huesped.getValueAt(0, 0).toString()+" ";
            con.traeQuery(sql);
            String id_estadia = "";
            if (con.resultado.next()) {
                id_estadia = con.resultado.getString(1);
            }
                
                sql = " Insert into estadia_servicios (estadia_id, servicios_id) "
                        + "values (" + id_estadia + ", " + id + ")";
                System.out.println(sql);
                con.actualiza2(sql);
                
                
            
            
            int cf = t.getRowCount();

            for (int i = 0; i < cf; i++) {

                //if (!tablaCheque.getValueAt(i, 5).toString().trim().equals("")) {
                sql = " Insert into servicios_detalle (id_servicios, huesped_id) "
                        + "values (" + id + ", "
                        + " " + tabla_huesped.getValueAt(i, 0).toString().trim() + ")";
                System.out.println(sql);
                con.actualiza2(sql);
                //}
            }
           
                
            if (combo_detalle.getSelectedItem().equals("CAMA EXTRA")) {
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_cama_extra (servicios_id,camas_id,habitacion_id) "
                            + "values ( " + id + ", "
                            + " " + tabla[f1][0] + ", " + tabla[f1][1] + ")";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            } else if (combo_detalle.getSelectedItem().equals("CONSUMICION")) {
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_consumicion (servicio_id,productos_id,habitacion_id,empleado_id) "
                            + "values ( " + id + ", "
                            + " " + tabla[f1][1] + ", '" + tabla[f1][0] + "', " + tabla[f1][2] + ")";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            } else if (combo_detalle.getSelectedItem().equals("EQUIPAJE")) {
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_equipaje (servicios_id,habitacion_id,maletas,cantidad) "
                            + "values ( " + id + ", "
                            + " " + tabla[f1][0] + ", '" + tabla[f1][1] + "', " + tabla[f1][2] + ")";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            } else if (combo_detalle.getSelectedItem().equals("ESTACIONAMIENTO")) {
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_estacionamiento (servicio_id,marca,modelo,color,nro_chapa) "
                            + "values ( " + id + ", "
                            + " '" + tabla[f1][0] + "', '" + tabla[f1][1] + "', '" + tabla[f1][2] + "','" + tabla[f1][3] + "')";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            } else if (combo_detalle.getSelectedItem().equals("LAVANDERIA")) {
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_lavanderia (servicios_id,habitacion_id,prendas) "
                            + "values ( " + id + ", "
                            + " '" + tabla[f1][0] + "', '" + tabla[f1][1] + "')";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            } else if (combo_detalle.getSelectedItem().equals("LLAMADAS DESPERTADOR")) {
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_llamadas_despertador (servicio_id,fecha,hora,numero_telefono,habitacion_id) "
                            + "values ( " + id + ", "
                            + " '" + tabla[f1][1] + "', '" + tabla[f1][2] + "', '" + tabla[f1][3] + "','" + tabla[f1][0] + "')";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            } else if (combo_detalle.getSelectedItem().equals("MANTENIMIENTO")) {
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_mantenimiento (servicios_id,habitacion_id,descripcion,hora) "
                            + "values ( " + id + ", "
                            + " '" + tabla[f1][0] + "', '" + tabla[f1][1] + "', '" + tabla[f1][2] + "' )";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            } else if (combo_detalle.getSelectedItem().equals("MENSAJES")) {
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_mensajes (servicios_id,destinatario,mensaje,fecha_envio,hora_envio) "
                            + "values ( " + id + ", "
                            + " '" + tabla[f1][0] + "', '" + tabla[f1][1] + "', '" + tabla[f1][2] + "','" + tabla[f1][3] + "'  )";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            } else if (combo_detalle.getSelectedItem().equals("SPA Y SAUNA")) {
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_spa_sauna (servicios_id,spa_sauna_id,cantidad) "
                            + "values ( " + id + ", "
                            + " '" + tabla[f1][0] + "', '" + tabla[f1][1] + "' )";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            } else if (combo_detalle.getSelectedItem().equals("SUPERVICION Y LIMPIEZA")) {
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_supervision_limpieza (servicios_id,habitacion_id,descripcion,empleado_id,hora) "
                            + "values ( " + id + ", "
                            + " " + tabla[f1][0] + ", '" + tabla[f1][1] + "', " + tabla[f1][3] + ", '" + tabla[f1][2] + "' )";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            } else if (combo_detalle.getSelectedItem().equals("TRASLADO")) {
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_traslado (servicios_id,destino,direccion,fecha,hora) "
                            + "values ( " + id + ", "
                            + " '" + tabla[f1][0] + "', '" + tabla[f1][1] + "', '" + tabla[f1][2] + "', '" + tabla[f1][3] + "' )";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            } else if (combo_detalle.getSelectedItem().equals("TURISMO")) {

                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_turismo (servicios_id,turismo_id,fecha,hora) "
                            + "values ( " + id + ", "
                            + " " + tabla[f1][0] + ", '" + tabla[f1][1] + "', '" + tabla[f1][2] + "' )";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }
                
            }
            
                
            
            

            tabla = null;

            f = -1;
            c = -1;

        } catch (SQLException ex) {
            Logger.getLogger(servicios.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    
    private void editar(String idnombre, String realizado) {
            String sql = "UPDATE servicios  "
                    + "SET nombre_id=" + idnombre + ", descripcion='" + txt_descripcion.getText() + "' ,fecha='" + con.fechaymd(jDateChooser1.getDate()) + "',"
                    + "usuario_id=" + 1 + ",realizado='" + realizado + "'"
                    + " , precio='" + txt_precio.getText().replace(".", "") + "'"
                    + "where id = "+txt_codigo.getText()+" ";
            System.out.println(sql);
            con.actualiza(sql);
            
            sql="DELETE FROM servicios_detalle WHERE id_servicios= "+ txt_codigo.getText() +" ";
            
            con.actualiza2(sql);
            
            String id="";
            
            id= txt_codigo.getText();
            
            int cf = t.getRowCount();

            for (int i = 0; i < cf; i++) {

                //if (!tablaCheque.getValueAt(i, 5).toString().trim().equals("")) {
                sql = " Insert into servicios_detalle (id_servicios, huesped_id) "
                        + "values (" + id + ", "
                        + " " + tabla_huesped.getValueAt(i, 0).toString().trim() + ")";
                System.out.println(sql);
                con.actualiza2(sql);
                //}
            }
            
            
            if(tabla!=null){
                
                
                if (combo_detalle.getSelectedItem().equals("CAMA EXTRA")) {
                    
                    sql="DELETE FROM servicios_cama_extra WHERE servicios_id = "+ txt_codigo.getText() +" ";
            
                    con.actualiza2(sql);
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_cama_extra (servicios_id,camas_id,habitacion_id) "
                            + "values ( " + id + ", "
                            + " " + tabla[f1][0] + ", " + tabla[f1][1] + ")";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            } else if (combo_detalle.getSelectedItem().equals("CONSUMICION")) {
                
                sql="delete from servicios_consumicion where servicio_id=" + txt_codigo.getText() + "";
                
                con.actualiza2(sql);
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_consumicion (servicio_id,productos_id,habitacion_id,empleado_id) "
                            + "values ( " + id + ", "
                            + " " + tabla[f1][1] + ", '" + tabla[f1][0] + "', " + tabla[f1][2] + ")";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            } else if (combo_detalle.getSelectedItem().equals("EQUIPAJE")) {
                
                sql="DELETE FROM servicios_equipaje WHERE servicios_id = "+ txt_codigo.getText() +" ";
            
                con.actualiza2(sql);
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_equipaje (servicios_id,habitacion_id,maletas,cantidad) "
                            + "values ( " + id + ", "
                            + " " + tabla[f1][0] + ", '" + tabla[f1][1] + "', " + tabla[f1][2] + ")";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            } else if (combo_detalle.getSelectedItem().equals("ESTACIONAMIENTO")) {
                
                sql="delete from servicios_estacionamiento where servicio_id=" + txt_codigo.getText() + "";
                
                con.actualiza2(sql);
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_estacionamiento (servicio_id,marca,modelo,color,nro_chapa) "
                            + "values ( " + id + ", "
                            + " '" + tabla[f1][0] + "', '" + tabla[f1][1] + "', '" + tabla[f1][2] + "','" + tabla[f1][3] + "')";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            } else if (combo_detalle.getSelectedItem().equals("LAVANDERIA")) {
                
                sql="delete from servicios_lavanderia where servicios_id=" + txt_codigo.getText() + "";
                
                con.actualiza2(sql);
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_lavanderia (servicios_id,habitacion_id,prendas) "
                            + "values ( " + id + ", "
                            + " '" + tabla[f1][0] + "', '" + tabla[f1][1] + "')";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            } else if (combo_detalle.getSelectedItem().equals("LLAMADAS DESPERTADOR")) {
                
                sql="delete from servicios_llamadas_despertador where servicio_id=" + txt_codigo.getText() + "";
                
                con.actualiza2(sql);
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_llamadas_despertador (servicio_id,fecha,hora,numero_telefono,habitacion_id) "
                            + "values ( " + id + ", "
                            + " '" + tabla[f1][1] + "', '" + tabla[f1][2] + "', '" + tabla[f1][3] + "','" + tabla[f1][0] + "')";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            } else if (combo_detalle.getSelectedItem().equals("MANTENIMIENTO")) {
                
                sql="delete from servicios_mantenimiento where servicios_id=" + txt_codigo.getText() + "";
                
                con.actualiza2(sql);
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_mantenimiento (servicios_id,habitacion_id,descripcion,hora) "
                            + "values ( " + id + ", "
                            + " '" + tabla[f1][0] + "', '" + tabla[f1][1] + "', '" + tabla[f1][2] + "' )";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }
                
                

            } else if (combo_detalle.getSelectedItem().equals("MENSAJES")) {
                
                 sql="delete from servicios_mensajes where servicios_id=" + txt_codigo.getText() + "";
                
                con.actualiza2(sql);
                
                 for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_mensajes (servicios_id,destinatario,mensaje,fecha_envio,hora_envio) "
                            + "values ( " + id + ", "
                            + " '" + tabla[f1][0] + "', '" + tabla[f1][1] + "', '" + tabla[f1][2] + "','" + tabla[f1][3] + "'  )";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            } else if (combo_detalle.getSelectedItem().equals("SPA Y SAUNA")) {
                
                sql="delete from servicios_spa_sauna where servicios_id=" + txt_codigo.getText() + "";
                
                con.actualiza2(sql);
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_spa_sauna (servicios_id,spa_sauna_id,cantidad) "
                            + "values ( " + id + ", "
                            + " '" + tabla[f1][0] + "', '" + tabla[f1][1] + "' )";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            } else if (combo_detalle.getSelectedItem().equals("SUPERVICION Y LIMPIEZA")) {
                
                sql="delete from servicios_supervision_limpieza where servicios_id=" + txt_codigo.getText() + "";
                
                con.actualiza2(sql);
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_supervision_limpieza (servicios_id,habitacion_id,descripcion,empleado_id,hora) "
                            + "values ( " + id + ", "
                            + " " + tabla[f1][0] + ", '" + tabla[f1][1] + "', " + tabla[f1][3] + ", '" + tabla[f1][2] + "' )";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            } else if (combo_detalle.getSelectedItem().equals("TRASLADO")) {
                
                sql="delete from servicios_traslado where servicios_id=" + txt_codigo.getText() + "";
                
                con.actualiza2(sql);
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_traslado (servicios_id,destino,direccion,fecha,hora) "
                            + "values ( " + id + ", "
                            + " '" + tabla[f1][0] + "', '" + tabla[f1][1] + "', '" + tabla[f1][2] + "', '" + tabla[f1][3] + "' )";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            } else if (combo_detalle.getSelectedItem().equals("TURISMO")) {
                
                sql="delete from servicios_turismo where servicios_id=" + txt_codigo.getText() + "";
                
                con.actualiza2(sql);
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into servicios_turismo (servicios_id,turismo_id,fecha,hora) "
                            + "values ( " + id + ", "
                            + " " + tabla[f1][0] + ", '" + tabla[f1][1] + "', '" + tabla[f1][2] + "' )";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            }
                
                
            }
           
        
        
    }
    private void visible(boolean b) {
        txt_descripcion.setEditable(b);

     //   txt_precio.setEditable(b);
       // jDateChooser1.setEnabled(b);

        combo_nombre.setEnabled(b);
        combo_huespedes.setEnabled(b);
        combo_realizado.setEnabled(b);

        combo_detalle.setEnabled(b);

    }

    private boolean vacio() {

        boolean vacio = false;
        String nombre = "";

        if (combo_nombre.getSelectedIndex() == -1) {
            nombre = "combo";
            vacio = true;
        }

        if (combo_realizado.getSelectedIndex() == -1) {
            nombre = "combo";
            vacio = true;
        }

        if (txt_precio.getText().trim().isEmpty()) {
            nombre = "precio";
            vacio = true;
        }

        if (txt_descripcion.getText().trim().isEmpty()) {
            nombre = "descripcion";
            vacio = true;
        }

        if (jDateChooser1.getDate() == null) {
            nombre = "fecha";
            vacio = true;
        }

        if (vacio == true) {

            JOptionPane.showMessageDialog(null, "Debe ingresar " + nombre);

        }

        return vacio;

    }

    long numero;

    private void formato_numeros(JTextField campo) {
        if (!campo.getText().trim().isEmpty()) {
            // System.out.println(campo.getText().length());
            // System.out.println(numero);
            numero = Long.parseLong(campo.getText().replace(".", ""));
            campo.setText(num.format(numero));
            // }
        }
    }

    private void cargar_huesped() {

        String idh = con.BuscaCol("SELECT h.id\n"
                + "FROM huespedes h\n"
                + "LEFT JOIN persona p ON h.persona_id = p.id\n"
                + "WHERE CONCAT(p.nombre,' ',p.apellido) = '" + combo_huespedes.getSelectedItem() + "'");
        if (cuentaid(idh, tabla_huesped)) {
            t.addRow(new Object[]{idh, combo_huespedes.getSelectedItem().toString()});
        }
        
        combos1(idh);

    }

    private void cargar_camas() {

        String idcama = con.BuscaCol("SELECT id FROM cama WHERE descripcion = '" + combo_detalle.getSelectedItem() + "'");
        String idcapaci = con.BuscaCol("SELECT capacidad FROM cama WHERE descripcion = '" + combo_detalle.getSelectedItem() + "'");
        /*if (cuentaid(idcama, tabla_camas)) {
            t1.addRow(new Object[]{idcama, combo_camas.getSelectedItem().toString(), idcapaci});
        }*/

    }

    private boolean cuentaid(String id, javax.swing.JTable tabla) {
        for (int i = 0; i < tabla.getRowCount(); i++) {
            String vcod = tabla.getValueAt(i, 0).toString();
            if (id.equals(vcod)) {
                JOptionPane.showMessageDialog(null, "Codigo ingresado ya existe en el detalle");
                return false;
            }
        }
        return true;
    }

    static String id_servicios = "";
    static String combo_seleccionado="";
    public static void buscador_servicios(String id, String combo1) {
        if (!id.equals("")) {
            //System.out.println(id);
            id_servicios = id;
            if (!id.equals("nada")) {
                txt_codigo.setText(id);
                combo_seleccionado= combo1;
            }
            txt_codigo.requestFocus();
        }
    }

    static String tabla[][];
    static int f=-1, c=-1;
    static int precio = 0;

    public static void detalle_servicios(String tabla1[][], int f1, int c1, int precio1) {
        if (f1 >= 0 || c1 >= 0) {
            //System.out.println(id);
            f = f1;
            c = c1;
            tabla = tabla1;

            if (txt_precio.getText().equals("")) {
                txt_precio.setText("0");
            }

            if (!txt_precio.getText().equals("")) {

                // precio = Integer.parseInt(txt_precio.getText().replace(".", ""));
                precio = precio + precio1;

                txt_precio.setText(num.format(precio));

                precio = 0;
            }
            
            /*for (int f2 = 0; f2 < f; f2++) {

                System.out.println(""+tabla[f1][0] + ", " + tabla[f1][2] + ", " + tabla[f1][3] );
           }*/

        }

    }

    private void mostrar(javax.swing.JInternalFrame j) {
        if (j != null) {
            j.setVisible(true);
            j.moveToFront();
        }
    }

    private void ocultar(javax.swing.JInternalFrame j) {
        if (j != null) {
            j.setVisible(false);
            j.moveToBack();
        }
    }

    private void cerrar(javax.swing.JInternalFrame j) {
        if (j != null) {
            j.dispose();

        }
    }
    
    static String id_huespedes="";
    public static void buscador_huespedes(String id){
        if (!id.equals("")) {
            //System.out.println(id);
            id_huespedes = id; 
            combo_huespedes.setSelectedIndex(-1);
        }
    }

}
