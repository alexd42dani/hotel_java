/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package movimientos.servicios;

import buscadores.*;
import referenciales.*;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import menu.menu;

/**
 *
 * @author hpnotebook
 */
public class detalle_limpieza extends javax.swing.JInternalFrame {

    conexion.conexion con = new conexion.conexion();
    javax.swing.table.DefaultTableModel t;
    DecimalFormat num = new DecimalFormat("#,##0");
    SimpleDateFormat fec = new SimpleDateFormat("dd/MM/yyyy");
    
     private String id_tabla="nada";
     
     private String formulario="";
     
     int f = -1;
     int c = -1;
     String tabla[][];
     int precio=0;
     String idd="0";
    public detalle_limpieza(String formulario, String pasar, String iddd) {
        initComponents();
        ((BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        t= (javax.swing.table.DefaultTableModel) tabla_consumicion.getModel();
       // cargar_tabla("nombre","");
        tabla_consumicion.getTableHeader().setReorderingAllowed(false);
       // jRadioButton1.setSelected(true);
        this.formulario = formulario;
       // txt_buscar.requestFocus();
       idd=iddd;
       combo();
       combo_habitacion.requestFocus();
       t.setRowCount(0);
       if(!pasar.equals("")){
           cargar_tabla(pasar);
       }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_consumicion = new javax.swing.JTable();
        btn_agregar_detalle = new javax.swing.JButton();
        btn_quitar = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        combo_habitacion = new javax.swing.JComboBox<>();
        btn_habitacion = new javax.swing.JButton();
        btn_editar = new javax.swing.JButton();
        btn_limpiar = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        combo_empleado = new javax.swing.JComboBox<>();
        btn_empleado = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        txt_descripcion = new javax.swing.JTextField();
        txt_hora = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btn_actualizar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();
        btn_agregar = new javax.swing.JButton();
        btn_aceptar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(950, 580));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tabla_consumicion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "habitacion", "descripcion", "hora", "codigo", "empleado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_consumicion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabla_consumicionMousePressed(evt);
            }
        });
        tabla_consumicion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabla_consumicionKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabla_consumicionKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tabla_consumicion);

        btn_agregar_detalle.setBackground(new java.awt.Color(255, 255, 255));
        btn_agregar_detalle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/mas2.png"))); // NOI18N
        btn_agregar_detalle.setText("Agregar");
        btn_agregar_detalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregar_detalleActionPerformed(evt);
            }
        });

        btn_quitar.setBackground(new java.awt.Color(255, 255, 255));
        btn_quitar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/menos.png"))); // NOI18N
        btn_quitar.setText("Quitar");
        btn_quitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_quitarActionPerformed(evt);
            }
        });

        jLabel19.setText("Habitacion :");

        combo_habitacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_habitacion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_habitacionFocusGained(evt);
            }
        });
        combo_habitacion.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_habitacionPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_habitacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_habitacionActionPerformed(evt);
            }
        });
        combo_habitacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_habitacionKeyPressed(evt);
            }
        });

        btn_habitacion.setBackground(new java.awt.Color(255, 255, 255));
        btn_habitacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/buscar3.png"))); // NOI18N
        btn_habitacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_habitacionActionPerformed(evt);
            }
        });

        btn_editar.setBackground(new java.awt.Color(255, 255, 255));
        btn_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/edit1.png"))); // NOI18N
        btn_editar.setText("Editar");
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });

        btn_limpiar.setBackground(new java.awt.Color(255, 255, 255));
        btn_limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/delete2.png"))); // NOI18N
        btn_limpiar.setText("Limpiar");
        btn_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limpiarActionPerformed(evt);
            }
        });

        jLabel21.setText("Descripcion :");

        combo_empleado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_empleado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_empleadoFocusGained(evt);
            }
        });
        combo_empleado.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_empleadoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_empleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_empleadoActionPerformed(evt);
            }
        });
        combo_empleado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_empleadoKeyPressed(evt);
            }
        });

        btn_empleado.setBackground(new java.awt.Color(255, 255, 255));
        btn_empleado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/buscar3.png"))); // NOI18N
        btn_empleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_empleadoActionPerformed(evt);
            }
        });

        jLabel20.setText("Empleado :");

        txt_descripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_descripcionKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_descripcionKeyTyped(evt);
            }
        });

        txt_hora.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_horaFocusLost(evt);
            }
        });
        txt_hora.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_horaKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_horaKeyTyped(evt);
            }
        });

        jLabel22.setText("Hora :");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_agregar_detalle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_quitar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_editar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_limpiar)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 711, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel20)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(combo_empleado, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_empleado, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(combo_habitacion, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_habitacion, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(47, 47, 47)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_hora, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_habitacion, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(combo_habitacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel22)
                        .addComponent(txt_hora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_empleado, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20)
                                    .addComponent(combo_empleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_quitar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_agregar_detalle, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_editar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel21)
                        .addComponent(txt_descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btn_actualizar.setBackground(new java.awt.Color(255, 255, 255));
        btn_actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/repetir.png"))); // NOI18N
        btn_actualizar.setText("Deshacer");
        btn_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizarActionPerformed(evt);
            }
        });

        btn_cancelar.setBackground(new java.awt.Color(255, 255, 255));
        btn_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/cancelar.png"))); // NOI18N
        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        btn_agregar.setBackground(new java.awt.Color(255, 255, 255));
        btn_agregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/agregar.png"))); // NOI18N
        btn_agregar.setText("Agregar");
        btn_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregarActionPerformed(evt);
            }
        });

        btn_aceptar.setBackground(new java.awt.Color(255, 255, 255));
        btn_aceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/aprobar.png"))); // NOI18N
        btn_aceptar.setText("Aceptar");
        btn_aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_aceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(btn_actualizar)
                .addGap(22, 22, 22)
                .addComponent(btn_cancelar)
                .addGap(22, 22, 22)
                .addComponent(btn_agregar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(btn_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(btn_agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(btn_aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/atras.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(8, 175, 178));
        jLabel3.setText("Supervision y Limpieza");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(108, 108, 108))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(8, 8, 8)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(172, 172, 172))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 934, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 786, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       btn_aceptar.doClick();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizarActionPerformed
     /*   jRadioButton1.setSelected(true);
        txt_buscar.setText("");
        cargar_tabla("nombre", "");*/
     if(t.getRowCount()>0){
         t.setRowCount(0);
     }
     
     btn_limpiar.doClick();
    }//GEN-LAST:event_btn_actualizarActionPerformed

    private void btn_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregarActionPerformed
    //    menu.menu.llamar_internal(new referenciales.empleado());
    }//GEN-LAST:event_btn_agregarActionPerformed

    private void btn_aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_aceptarActionPerformed
       // referenciales.huespedes.buscador_personas("1");
       
       
       
       if(tabla_consumicion.getRowCount()<=0){
           JOptionPane.showMessageDialog(null, "No ha cargado ningun detalle"); 
       
       
       }else{
           
           f = tabla_consumicion.getRowCount();
           c = 4;
           tabla = new String[f][c];
           
           for (int c1=0; c1<c;c1++){
               for(int f1=0; f1<f;f1++){
                   if(c1==0){
                      tabla[f1][c1] = tabla_consumicion.getValueAt(f1,0).toString();
                     // precio += Integer.parseInt(tabla_consumicion.getValueAt(f1,4).toString().replace(".", ""));
                   }else if(c1==1){
                      tabla[f1][c1] = tabla_consumicion.getValueAt(f1,2).toString();
                   }else if(c1==2){
                      tabla[f1][c1] = tabla_consumicion.getValueAt(f1,3).toString();
                   }else if(c1==3){
                      tabla[f1][c1] = tabla_consumicion.getValueAt(f1,4).toString();
                   }
               }
           }
           
       }
       
       if(formulario.equals("servicios")){
           movimientos.servicios.servicios.detalle_servicios(tabla, f, c, precio);
       }
       
       
       f = -1;
       c = -1;
       tabla = null;
       precio=0;
       
      // dispose();
        moveToBack();
    }//GEN-LAST:event_btn_aceptarActionPerformed

    private void tabla_consumicionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabla_consumicionKeyReleased

    
       
    }//GEN-LAST:event_tabla_consumicionKeyReleased

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
       //btn_aceptar.doClick();
       btn_actualizar.doClick();
       btn_aceptar.doClick();
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void tabla_consumicionMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_consumicionMousePressed

    }//GEN-LAST:event_tabla_consumicionMousePressed

    private void tabla_consumicionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabla_consumicionKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btn_aceptar.doClick();
        }
    }//GEN-LAST:event_tabla_consumicionKeyPressed

    private void btn_agregar_detalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregar_detalleActionPerformed
        if (combo_empleado.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un empleado");
            combo_empleado.requestFocus();
        }else if (combo_habitacion.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una habitacion");
            combo_habitacion.requestFocus();
        }else if (txt_hora.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe cargar hora");
            txt_hora.requestFocus();
        }else if (txt_descripcion.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe cargar descripcion");
            txt_hora.requestFocus();
        }else {
            cargar_detalle();
            combo_habitacion.requestFocus();
        }
    }//GEN-LAST:event_btn_agregar_detalleActionPerformed

    private void btn_quitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_quitarActionPerformed
        if (tabla_consumicion.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar por lo menos una fila", "Atencion",
                JOptionPane.WARNING_MESSAGE);

        } else {
            int mensaje = JOptionPane.showConfirmDialog(null, "Desea eliminar la fila seleccionada", "Atencion",
                JOptionPane.WARNING_MESSAGE, JOptionPane.QUESTION_MESSAGE);
            if (mensaje == 0) {
                javax.swing.table.DefaultTableModel tab = (javax.swing.table.DefaultTableModel) tabla_consumicion.getModel();
                tab.removeRow(tabla_consumicion.getSelectedRow());

            }
           
            btn_limpiar.doClick();
        }
    }//GEN-LAST:event_btn_quitarActionPerformed

    private void combo_habitacionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_habitacionFocusGained
        combo_habitacion.showPopup();
    }//GEN-LAST:event_combo_habitacionFocusGained

    private void combo_habitacionPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_habitacionPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_habitacionPopupMenuWillBecomeInvisible

    private void combo_habitacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_habitacionActionPerformed
        if (!id_habitaciones.equals("") && !id_habitaciones.equals("nada")) {
                
                cargaCombo(combo_habitacion, "SELECT hh.descripcion\n" +
                                        "FROM huespedes h\n" +
                                        "LEFT JOIN estadia_huespedes eh ON eh.huespedes_id = h.id\n" +
                                        "LEFT JOIN estadia_habitaciones ehh ON eh.id_estadia = ehh.id_estadia\n" +
                                        "LEFT JOIN estadia e ON e.id = ehh.id_estadia \n" +
                                        "LEFT JOIN habitaciones hh ON hh.id = ehh.id_habitacion\n" +
                                        "WHERE eh.huespedes_id = "+idd+" AND e.estado ='A'\n" +
                                        "ORDER BY descripcion\n" +
                                        "","hh.descripcion");
       
                combo_habitacion.setSelectedItem(con.BuscaCol("SELECT descripcion FROM habitaciones WHERE id = " + id_habitaciones));
                
                
               id_habitaciones="";
               
               
            }else if(id_habitaciones.equals("nada")){
                cargaCombo(combo_habitacion, "SELECT hh.descripcion\n" +
                                        "FROM huespedes h\n" +
                                        "LEFT JOIN estadia_huespedes eh ON eh.huespedes_id = h.id\n" +
                                        "LEFT JOIN estadia_habitaciones ehh ON eh.id_estadia = ehh.id_estadia\n" +
                                        "LEFT JOIN estadia e ON e.id = ehh.id_estadia \n" +
                                        "LEFT JOIN habitaciones hh ON hh.id = ehh.id_habitacion\n" +
                                        "WHERE eh.huespedes_id = "+idd+" AND e.estado ='A'\n" +
                                        "ORDER BY descripcion\n" +
                                        "","hh.descripcion");
               id_habitaciones="";
            }
    }//GEN-LAST:event_combo_habitacionActionPerformed

    private void combo_habitacionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_habitacionKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
         txt_hora.requestFocus();
        }
    }//GEN-LAST:event_combo_habitacionKeyPressed

    private void btn_habitacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_habitacionActionPerformed
     menu.llamar_internal(new buscadores.buscador_habitaciones("detalle_limpieza"));
    }//GEN-LAST:event_btn_habitacionActionPerformed

    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
         if (tabla_consumicion.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar por lo menos una fila", "Atencion",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
            
        if (combo_empleado.getSelectedIndex()<0){ 
            JOptionPane.showMessageDialog(null, "Debe ingresar combo");
               
        } else if (combo_habitacion.getSelectedIndex()<0){ 
            JOptionPane.showMessageDialog(null, "Debe ingresar combo");
               
        }else if (txt_hora.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe cargar hora");
            txt_hora.requestFocus();
        }else if (txt_descripcion.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe cargar descripcion");
            txt_hora.requestFocus();
        }else {
      
        int mensaje = JOptionPane.showConfirmDialog(null, "Desea editar la fila seleccionada", "Atencion",
        JOptionPane.WARNING_MESSAGE, JOptionPane.QUESTION_MESSAGE);
        if (mensaje == 0) {
            javax.swing.table.DefaultTableModel tab = (javax.swing.table.DefaultTableModel) tabla_consumicion.getModel();
            tab.removeRow(tabla_consumicion.getSelectedRow());
            cargar_detalle();
            combo_habitacion.requestFocus();
        }else {
        btn_limpiar.doClick();
        }
        }
    }//GEN-LAST:event_btn_editarActionPerformed

    private void btn_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limpiarActionPerformed
       combo_empleado.setSelectedIndex(-1);
       combo_habitacion.setSelectedIndex(-1);
       txt_hora.setText("");
       txt_descripcion.setText("");
    }//GEN-LAST:event_btn_limpiarActionPerformed

    private void combo_empleadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_empleadoFocusGained
       combo_empleado.showPopup();
    }//GEN-LAST:event_combo_empleadoFocusGained

    private void combo_empleadoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_empleadoPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_empleadoPopupMenuWillBecomeInvisible

    private void combo_empleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_empleadoActionPerformed
        if (!id_empleado.equals("") && !id_empleado.equals("nada")) {
                
                 cargaCombo(combo_empleado, "SELECT CONCAT(p.nombre, ' ',p.apellido) FROM persona p\n" +
                                   "RIGHT JOIN empleado e ON e.persona_id = p.id", "empleado");
       
                combo_empleado.setSelectedItem(con.BuscaCol("SELECT CONCAT(p.nombre, ' ',p.apellido) FROM persona p\n" +
                                   "RIGHT JOIN empleado e ON e.persona_id = p.id WHERE e.id = " + id_empleado));
                
                
               id_empleado="";
               
               
            }else if(id_empleado.equals("nada")){
                 cargaCombo(combo_empleado, "SELECT CONCAT(p.nombre, ' ',p.apellido) FROM persona p\n" +
                                   "RIGHT JOIN empleado e ON e.persona_id = p.id", "empleado");
               id_empleado="";
            }
    }//GEN-LAST:event_combo_empleadoActionPerformed

    private void combo_empleadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_empleadoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
          txt_descripcion.requestFocus();
          
        }
    }//GEN-LAST:event_combo_empleadoKeyPressed

    private void btn_empleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_empleadoActionPerformed
        menu.llamar_internal(new buscadores.buscador_empleado("detalle_limpieza"));
    }//GEN-LAST:event_btn_empleadoActionPerformed

    private void txt_horaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_horaFocusLost
        if(con.validarHora(txt_hora.getText())==false){
            txt_hora.setText("");
        }
        if(txt_hora.getText().trim().replace(":", "").length()==3){
            txt_hora.setText("");
        }
    }//GEN-LAST:event_txt_horaFocusLost

    private void txt_horaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_horaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            combo_empleado.requestFocus();
          
        }
    }//GEN-LAST:event_txt_horaKeyPressed

    private void txt_horaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_horaKeyTyped
        // con.validar_campos(new int[]{39, 126}, "letras_y_numeros", evt, new int[]{47, 164, 165, 209, 241});
        if(txt_hora.getText().length()==5){
            evt.consume();
        }
        con.validar_campos("numeros", evt);
        formato_hora(txt_hora, evt);
    }//GEN-LAST:event_txt_horaKeyTyped

    private void txt_descripcionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_descripcionKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
          btn_agregar_detalle.requestFocus();
          btn_agregar_detalle.doClick();
          
        }
    }//GEN-LAST:event_txt_descripcionKeyPressed

    private void txt_descripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_descripcionKeyTyped
        con.validar_campos(new int[]{39, 126}, "letras_y_numeros", evt, new int[]{47, 164, 165, 209, 241});
    }//GEN-LAST:event_txt_descripcionKeyTyped
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_aceptar;
    private javax.swing.JButton btn_actualizar;
    private javax.swing.JButton btn_agregar;
    private javax.swing.JButton btn_agregar_detalle;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_empleado;
    private javax.swing.JButton btn_habitacion;
    private javax.swing.JButton btn_limpiar;
    private javax.swing.JButton btn_quitar;
    private javax.swing.ButtonGroup buttonGroup1;
    private static javax.swing.JComboBox<String> combo_empleado;
    private static javax.swing.JComboBox<String> combo_habitacion;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabla_consumicion;
    private javax.swing.JTextField txt_descripcion;
    private javax.swing.JTextField txt_hora;
    // End of variables declaration//GEN-END:variables

    
     private void combo() {
        cargaCombo(combo_habitacion, "SELECT hh.descripcion\n" +
                                        "FROM huespedes h\n" +
                                        "LEFT JOIN estadia_huespedes eh ON eh.huespedes_id = h.id\n" +
                                        "LEFT JOIN estadia_habitaciones ehh ON eh.id_estadia = ehh.id_estadia\n" +
                                        "LEFT JOIN estadia e ON e.id = ehh.id_estadia \n" +
                                        "LEFT JOIN habitaciones hh ON hh.id = ehh.id_habitacion\n" +
                                        "WHERE eh.huespedes_id = "+idd+" AND e.estado ='A'\n" +
                                        "ORDER BY descripcion\n" +
                                        "","hh.descripcion");
        cargaCombo(combo_empleado, "SELECT CONCAT(p.nombre, ' ',p.apellido) FROM persona p\n" +
                                   "RIGHT JOIN empleado e ON e.persona_id = p.id", "empleado");

    }
    
    
    private void cargaCombo(JComboBox cbo, String sql, String columna) {
        try {
            cbo.removeAllItems();
            con.sentencia = con.conexion.createStatement();
            con.resultado = con.sentencia.executeQuery(sql);
            while (con.resultado.next()) {
                if(columna.equals("descripcion")){
                    cbo.addItem(con.resultado.getString("descripcion"));
                }else if(columna.equals("producto")){
                    cbo.addItem(con.resultado.getString("producto"));
                }else if(columna.equals("empleado")){
                    cbo.addItem(con.resultado.getString("CONCAT(p.nombre, ' ',p.apellido)"));
                }else if(columna.equals("hh.descripcion")){
                    cbo.addItem(con.resultado.getString("hh.descripcion"));
                }
                
            }
            cbo.setSelectedIndex(-1);
        } catch (SQLException ex) {
            Logger.getLogger(tarifas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    static String id_habitaciones="";
    public static void buscador_habitaciones(String id){
        if (!id.equals("")) {
            //System.out.println(id);
            id_habitaciones = id; 
            combo_habitacion.setSelectedIndex(-1);
        }
    }
    
   
    
    static String id_empleado="";
    public static void buscador_empleado(String id){
        if (!id.equals("")) {
            //System.out.println(id);
            id_empleado = id; 
            combo_empleado.setSelectedIndex(-1);
        }
    }
    
     private void cargar_detalle() {
        
        

        
        
     
  
       String ide =  con.BuscaCol("SELECT e.id\n" +
                                    "FROM empleado e\n" +
                                    "LEFT JOIN persona p ON e.persona_id = p.id\n" +
                                    "WHERE CONCAT(p.nombre, ' ',p.apellido)= '" + combo_empleado.getSelectedItem() + "'");
       
       
        
        
        String idh = con.BuscaCol("SELECT h.id \n" +
                                    "FROM habitaciones h\n" +
                                    "WHERE h.descripcion = '" + combo_habitacion.getSelectedItem() + "'");
        
        
      /*  if (cuentaid(idc, tabla_cama, 0) || cuentaid(idh, tabla_cama, 2)) {
            t.addRow(new Object[]{idc, combo_camas.getSelectedItem().toString()});
        }*/
        
        
            t.addRow(new Object[]{idh, combo_habitacion.getSelectedItem().toString()
                                    ,txt_descripcion.getText(), txt_hora.getText()
                                    ,ide, combo_empleado.getSelectedItem().toString()});
        
        
    }
    
    
    
     
     /* private boolean cuentaid(String id,javax.swing.JTable tabla, int posicion) {
        for (int i = 0; i < tabla.getRowCount(); i++) {
            String vcod = tabla.getValueAt(i, posicion).toString();
            if (id.equals(vcod)) {
                JOptionPane.showMessageDialog(null, "Codigo ingresado ya existe en el detalle");
                return false;
            }
        }
        return true;
    }*/
     
     
     private void cargar_tabla(String id) {
        
        try {
            
            String sql="";
            
         
            
            sql = "SELECT h.id, h.descripcion, s.descripcion, s.hora, e.id, CONCAT(p.nombre, ' ',p.apellido) \n" +
                    "FROM servicios_supervision_limpieza s\n" +
                    "LEFT JOIN servicios ss ON s.servicios_id = ss.id\n" +
                    "LEFT JOIN habitaciones h ON s.habitacion_id = h.id\n" +
                    "LEFT JOIN empleado e ON s.empleado_id = e.id\n" +
                    "LEFT JOIN persona p ON e.persona_id = p.id\n" +
                    "WHERE ss.id = "+id+" ";
            
           
            
            t.setRowCount(0);
            con.sentencia = con.conexion.createStatement();
            con.resultado = con.sentencia.executeQuery(sql);
            while (con.resultado.next()) {
                t.addRow(new Object[]{con.resultado.getInt("h.id"), 
                    con.resultado.getString("h.descripcion"),
                    con.resultado.getString("s.descripcion"),
                    con.resultado.getString("s.hora"),
         
                    //num.format(con.resultado.getInt("p.nro_documento")),
                   con.resultado.getString("e.id"),
                    con.resultado.getString("CONCAT(p.nombre, ' ',p.apellido)")});
                
            }  
        
        
        } catch (SQLException ex) {
            Logger.getLogger(buscador_servicios.class.getName()).log(Level.SEVERE, null, ex);
        }
}

   
public void formato_hora(JTextField campo, KeyEvent e) { 
        String hora = campo.getText().trim().replace(":", "");
         
        String var, var1;
        
        if(hora.length()<=2){
            campo.setText(hora);
        }else if(hora.length()==3){
            var = hora.substring(0, 2);
            var1 = hora.substring(2, 3);
            campo.setText(var+":"+var1);
        }else if(hora.length()==4){
            var = hora.substring(0, 2);
            var1 = hora.substring(2, 4);
            campo.setText(var+":"+var1);
        }else if(hora.length()>=5){
            var = hora.substring(0, 2);
            var1 = hora.substring(2, 4);
            campo.setText(var+":"+var1);
        }
        
       
    }
    

}
