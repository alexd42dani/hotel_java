/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package movimientos.recepcion;

import movimientos.servicios.*;
import referenciales.*;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import menu.menu;

/**
 *
 * @author hpnotebook
 */
public class estadias extends javax.swing.JInternalFrame {

    conexion.conexion con = new conexion.conexion();
    javax.swing.table.DefaultTableModel t;
    int banPais, banDepartamento, banNuevo, baneditarnuevo = 0;
    String idPais = "", idDepartamento = "";
    static DecimalFormat num = new DecimalFormat("#,##0");
    SimpleDateFormat fec = new SimpleDateFormat("dd/MM/yyyy");

    movimientos.recepcion.detalle_estadia detalle;

    public estadias() {
        initComponents();
        ((BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        t = (javax.swing.table.DefaultTableModel) tabla_tarifas.getModel();
        combos();
        visible(false);
        tabla_tarifas.getTableHeader().setReorderingAllowed(false);
        Botones(false);
        t.setRowCount(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_tarifas = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        combo_tarifas = new javax.swing.JComboBox<>();
        btn_agregar_tarifas = new javax.swing.JButton();
        btn_quitar_tarifas = new javax.swing.JButton();
        btn_tarifas = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btn_editar = new javax.swing.JButton();
        btn_borrar = new javax.swing.JButton();
        btn_grabar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();
        btn_salir = new javax.swing.JButton();
        btn_nuevo = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        combo_tipo_estadia = new javax.swing.JComboBox<>();
        jPanel9 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        combo_estado = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        btn_agregar_detalle = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        combo_operador = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txt_codigo = new javax.swing.JTextField();
        btn_estadia = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txt_comentarios = new javax.swing.JEditorPane();
        jPanel15 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        txt_precio = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        combo_tipo_cliente = new javax.swing.JComboBox<>();
        jDateChooser = new com.toedter.calendar.JDateChooser();
        txt_reserva = new javax.swing.JTextField();
        btn_estadia1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(950, 577));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tabla_tarifas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Codigo", "Tarifa", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_tarifas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabla_tarifasMousePressed(evt);
            }
        });
        tabla_tarifas.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tabla_tarifasPropertyChange(evt);
            }
        });
        tabla_tarifas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabla_tarifasKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tabla_tarifas);

        jLabel19.setText("Tarifas :");

        combo_tarifas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_tarifas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_tarifasFocusGained(evt);
            }
        });
        combo_tarifas.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_tarifasPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_tarifas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_tarifasActionPerformed(evt);
            }
        });
        combo_tarifas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_tarifasKeyPressed(evt);
            }
        });

        btn_agregar_tarifas.setBackground(new java.awt.Color(255, 255, 255));
        btn_agregar_tarifas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/mas2.png"))); // NOI18N
        btn_agregar_tarifas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregar_tarifasActionPerformed(evt);
            }
        });

        btn_quitar_tarifas.setBackground(new java.awt.Color(255, 255, 255));
        btn_quitar_tarifas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/menos.png"))); // NOI18N
        btn_quitar_tarifas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_quitar_tarifasActionPerformed(evt);
            }
        });

        btn_tarifas.setBackground(new java.awt.Color(255, 255, 255));
        btn_tarifas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/buscar3.png"))); // NOI18N
        btn_tarifas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tarifasesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo_tarifas, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_tarifas, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_agregar_tarifas, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_quitar_tarifas, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(combo_tarifas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_quitar_tarifas, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_agregar_tarifas, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_tarifas, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btn_editar.setBackground(new java.awt.Color(255, 255, 255));
        btn_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/editar.png"))); // NOI18N
        btn_editar.setText("Editar");
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });

        btn_borrar.setBackground(new java.awt.Color(255, 255, 255));
        btn_borrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/borrar.png"))); // NOI18N
        btn_borrar.setText("Borrar");
        btn_borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_borrarActionPerformed(evt);
            }
        });

        btn_grabar.setBackground(new java.awt.Color(255, 255, 255));
        btn_grabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/grabar.png"))); // NOI18N
        btn_grabar.setText("Grabar");
        btn_grabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_grabarActionPerformed(evt);
            }
        });

        btn_cancelar.setBackground(new java.awt.Color(255, 255, 255));
        btn_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/cancelar.png"))); // NOI18N
        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        btn_salir.setBackground(new java.awt.Color(255, 255, 255));
        btn_salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/atras5.png"))); // NOI18N
        btn_salir.setText("Salir");
        btn_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salirActionPerformed(evt);
            }
        });

        btn_nuevo.setBackground(new java.awt.Color(255, 255, 255));
        btn_nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/agregar.png"))); // NOI18N
        btn_nuevo.setText("Nuevo");
        btn_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_nuevo)
                .addGap(5, 5, 5)
                .addComponent(btn_editar)
                .addGap(5, 5, 5)
                .addComponent(btn_borrar)
                .addGap(5, 5, 5)
                .addComponent(btn_grabar)
                .addGap(5, 5, 5)
                .addComponent(btn_cancelar)
                .addGap(5, 5, 5)
                .addComponent(btn_salir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btn_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_borrar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_editar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_grabar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setPreferredSize(new java.awt.Dimension(100, 130));

        jLabel13.setText("Tipo Estadia :");

        combo_tipo_estadia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_tipo_estadia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_tipo_estadiaFocusGained(evt);
            }
        });
        combo_tipo_estadia.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_tipo_estadiaPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_tipo_estadia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_tipo_estadiaActionPerformed(evt);
            }
        });
        combo_tipo_estadia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_tipo_estadiaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(combo_tipo_estadia, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_tipo_estadia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setPreferredSize(new java.awt.Dimension(100, 130));

        jLabel16.setText("Estado :");

        combo_estado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_estado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_estadoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                combo_estadoFocusLost(evt);
            }
        });
        combo_estado.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_estadoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_estado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_estadoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(jLabel16)
                .addGap(30, 30, 30)
                .addComponent(combo_estado, 0, 233, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(combo_estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(96, 96, 96))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addGap(0, 2, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/atras.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(8, 175, 178));
        jLabel3.setText("Estadia");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.setPreferredSize(new java.awt.Dimension(337, 174));

        jLabel20.setText("Detalle :");

        btn_agregar_detalle.setBackground(new java.awt.Color(255, 255, 255));
        btn_agregar_detalle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/derecha1.png"))); // NOI18N
        btn_agregar_detalle.setText("IR");
        btn_agregar_detalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregar_detalleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(53, Short.MAX_VALUE)
                .addComponent(jLabel20)
                .addGap(34, 34, 34)
                .addComponent(btn_agregar_detalle)
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_agregar_detalle)
                    .addComponent(jLabel20))
                .addGap(70, 70, 70))
        );

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));
        jPanel14.setPreferredSize(new java.awt.Dimension(100, 130));

        jLabel14.setText("Operador :");

        combo_operador.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_operador.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_operadorFocusGained(evt);
            }
        });
        combo_operador.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_operadorPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_operador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_operadorActionPerformed(evt);
            }
        });
        combo_operador.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_operadorKeyPressed(evt);
            }
        });

        jLabel4.setText("Codigo :");

        txt_codigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_codigoFocusGained(evt);
            }
        });
        txt_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_codigoActionPerformed(evt);
            }
        });
        txt_codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_codigoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_codigoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_codigoKeyTyped(evt);
            }
        });

        btn_estadia.setBackground(new java.awt.Color(255, 255, 255));
        btn_estadia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/buscar3.png"))); // NOI18N
        btn_estadia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_estadiaesActionPerformed(evt);
            }
        });

        jLabel18.setText("Comentarios :");

        txt_comentarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_comentariosKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_comentariosKeyTyped(evt);
            }
        });
        jScrollPane5.setViewportView(txt_comentarios);

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14)
                    .addComponent(jLabel4)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(combo_operador, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_codigo)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 220, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addComponent(btn_estadia, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(combo_operador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)))
                    .addComponent(btn_estadia, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel18)))
                .addContainerGap(19, Short.MAX_VALUE))
        );

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        jPanel15.setPreferredSize(new java.awt.Dimension(100, 130));

        jLabel22.setText("Precio :");

        jLabel23.setText("Tipo Cliente :");

        txt_precio.setEditable(false);
        txt_precio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_precioFocusGained(evt);
            }
        });
        txt_precio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_precioActionPerformed(evt);
            }
        });
        txt_precio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_precioKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_precioKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_precioKeyTyped(evt);
            }
        });

        jLabel24.setText("Fecha :");

        combo_tipo_cliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_tipo_cliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_tipo_clienteFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                combo_tipo_clienteFocusLost(evt);
            }
        });
        combo_tipo_cliente.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_tipo_clientePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_tipo_cliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_tipo_clienteKeyPressed(evt);
            }
        });

        jDateChooser.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser.setEnabled(false);

        txt_reserva.setEditable(false);
        txt_reserva.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_reservaFocusGained(evt);
            }
        });
        txt_reserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_reservaActionPerformed(evt);
            }
        });
        txt_reserva.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_reservaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_reservaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_reservaKeyTyped(evt);
            }
        });

        btn_estadia1.setBackground(new java.awt.Color(255, 255, 255));
        btn_estadia1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/buscar3.png"))); // NOI18N
        btn_estadia1.setEnabled(false);
        btn_estadia1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_estadia1esActionPerformed(evt);
            }
        });

        jLabel5.setText("Reserva :");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(jLabel22)
                    .addComponent(jLabel24)
                    .addComponent(jLabel5))
                .addGap(30, 30, 30)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(txt_reserva)
                        .addGap(18, 18, 18)
                        .addComponent(btn_estadia1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txt_precio)
                    .addComponent(combo_tipo_cliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_reserva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addComponent(btn_estadia1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addGap(8, 8, 8)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(combo_tipo_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(txt_precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(108, 108, 108))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(93, 93, 93))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(0, 0, 0)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 915, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 786, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        cerrar(detalle);
        dispose();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
        banNuevo = 2;
        Botones(true);
        visible(true);
        btn_estadia.setEnabled(false);
        btn_estadia1.setEnabled(false);
        btn_borrar.setEnabled(false);
        tabla_tarifas.setEnabled(true);
    }//GEN-LAST:event_btn_editarActionPerformed

    private void btn_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salirActionPerformed
        cerrar(detalle);
        dispose();
    }//GEN-LAST:event_btn_salirActionPerformed

    private void btn_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nuevoActionPerformed
        banNuevo = 1;
        limpiaTxt();
        Botones(true);
        visible(true);
        btn_editar.setEnabled(false);
        btn_borrar.setEnabled(false);
        baneditarnuevo = 1;
        combo_operador.requestFocus();
        btn_estadia.setEnabled(false);
        btn_estadia1.setEnabled(true);
        jDateChooser.setDate(new java.util.Date());
        txt_precio.setText("0");
        tabla_tarifas.setEnabled(true);
    }//GEN-LAST:event_btn_nuevoActionPerformed

    private void tabla_tarifasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabla_tarifasKeyReleased

    }//GEN-LAST:event_tabla_tarifasKeyReleased

    private void btn_borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_borrarActionPerformed
        if(txt_codigo.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Debe seleccionar una reserva");
        }else{
        int mensaje = JOptionPane.showConfirmDialog(null, "Desea eliminar el registro", "Atencion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (mensaje == 0) {
            try {

                String sql = "";     
                
               sql="delete from estadia_habitaciones where id_estadia =" + txt_codigo.getText() + "";

                
                con.actualiza2(sql);
                
                sql = "DELETE FROM estadia_huespedes WHERE id_estadia =" + txt_codigo.getText() + "";
                con.actualiza2(sql);
                
                sql = "DELETE FROM estadia_tarifas WHERE estadia_id =" + txt_codigo.getText() + "";
                con.actualiza2(sql);
                
                sql="DELETE FROM huespedes WHERE estadia_id = "+ txt_codigo.getText() +" ";
            
                con.actualiza2(sql);
                
                sql="DELETE FROM estadia_reserva WHERE estadia_id = "+ txt_codigo.getText() +" ";
            
                con.actualiza2(sql);
                
                sql = "DELETE FROM estadia WHERE id =" + txt_codigo.getText() + "";
                System.out.println(sql);
                con.actualiza2(sql);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al eliminar" + e);
            }
        }
        btn_cancelar.doClick();
        }
    }//GEN-LAST:event_btn_borrarActionPerformed

    private void btn_grabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_grabarActionPerformed

        if (vacio() == false) {

            String idoperador = con.BuscaCol("SELECT id FROM operador_turistico WHERE descripcion= '" + combo_operador.getSelectedItem() + "'");
            String idtipocliente = con.BuscaCol("SELECT id FROM tipo_cliente WHERE descripcion= '" + combo_tipo_cliente.getSelectedItem() + "'");
            String tipoestadia = con.BuscaCol("SELECT id FROM tipo_estadia WHERE descripcion='" + combo_tipo_estadia.getSelectedItem() + "'");

            
            String estado =  combo_estado.getSelectedItem().toString();
            if(estado.equals("ACTIVA")){
                estado="A";
            }else if(estado.equals("INACTIVA")){
                estado="I";
            }else if(estado.equals("CANCELADA")){
                estado="C";
            }

            if (banNuevo == 1) {
                if(tabla==null || tabla1==null){
                JOptionPane.showMessageDialog(this, "no puede guardar sin detalle");
                }else{
                guardar(idoperador, idtipocliente, tipoestadia, estado);
                btn_cancelar.doClick();
                }
            }
            if (banNuevo == 2) {
                editar(idoperador, idtipocliente, tipoestadia, estado);
                btn_cancelar.doClick();
            }
            

        }
    }//GEN-LAST:event_btn_grabarActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        limpiaTxt();
        banNuevo = 0;
        Botones(false);
        cerrar(detalle);
        visible(false);
        tabla_tarifas.setEnabled(false);
        //cargar_tabla("nombre","");
        baneditarnuevo = 0;
        combos();
        btn_estadia.setEnabled(true);
        btn_estadia1.setEnabled(false);
        f = -1;
        c = -1;
        tabla = null;
        detalle = null;
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void tabla_tarifasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_tarifasMousePressed

    }//GEN-LAST:event_tabla_tarifasMousePressed

    private void combo_tipo_estadiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_tipo_estadiaActionPerformed

    }//GEN-LAST:event_combo_tipo_estadiaActionPerformed

    private void combo_tipo_estadiaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_tipo_estadiaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
           combo_tipo_estadia.transferFocus();
        }
    }//GEN-LAST:event_combo_tipo_estadiaKeyPressed

    private void combo_tipo_estadiaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_tipo_estadiaFocusGained
        combo_tipo_estadia.showPopup();
    }//GEN-LAST:event_combo_tipo_estadiaFocusGained

    private void combo_tipo_estadiaPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_tipo_estadiaPopupMenuWillBecomeInvisible
        if (combo_tipo_estadia.getSelectedIndex() != -1) {
          combo_tipo_estadia.transferFocus();
        }
    }//GEN-LAST:event_combo_tipo_estadiaPopupMenuWillBecomeInvisible

    private void combo_tarifasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_tarifasFocusGained
        combo_tarifas.showPopup();
    }//GEN-LAST:event_combo_tarifasFocusGained

    private void combo_tarifasPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_tarifasPopupMenuWillBecomeInvisible
         
    }//GEN-LAST:event_combo_tarifasPopupMenuWillBecomeInvisible

    private void combo_tarifasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_tarifasActionPerformed
        if (!id_tarifas.equals("") && !id_tarifas.equals("nada")) {
            
            
                cargaCombo(combo_tarifas, "SELECT CONCAT(f.id,'-',tn.descripcion)\n" +
                                    "FROM tarifas f\n" +
                                    "LEFT JOIN tarifas_nombres tn ON f.tarifas_nombres_id = tn.id\n" +
                                    "LEFT JOIN habitaciones h ON f.habitacion_id = h.id\n" +
                                    "ORDER BY tn.descripcion", "CONCAT(f.id,'-',tn.descripcion)");
            
                
                combo_tarifas.setSelectedItem(con.BuscaCol("SELECT CONCAT(f.id,'-',tn.descripcion)\n" +
                                                            "FROM tarifas f\n" +
                                                            "LEFT JOIN tarifas_nombres tn ON f.tarifas_nombres_id = tn.id\n" +
                                                            "LEFT JOIN habitaciones h ON f.habitacion_id = h.id\n" +
                                                            "WHERE f.id = " + id_tarifas));
               
               
                
                
               id_tarifas="";
               
               
            }else if(id_tarifas.equals("nada")){
                
                
                    
                  cargaCombo(combo_tarifas, "SELECT CONCAT(f.id,'-',tn.descripcion)\n" +
                                    "FROM tarifas f\n" +
                                    "LEFT JOIN tarifas_nombres tn ON f.tarifas_nombres_id = tn.id\n" +
                                    "LEFT JOIN habitaciones h ON f.habitacion_id = h.id\n" +
                                    "ORDER BY tn.descripcion", "CONCAT(f.id,'-',tn.descripcion)");
                
                
                
              
               id_tarifas="";
            }
    }//GEN-LAST:event_combo_tarifasActionPerformed

    private void combo_tarifasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_tarifasKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btn_agregar_tarifas.requestFocus();
            btn_agregar_tarifas.doClick();
        }
    }//GEN-LAST:event_combo_tarifasKeyPressed

    private void btn_agregar_tarifasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregar_tarifasActionPerformed
        if (banNuevo != 2) {
        if (tabla_tarifas.getRowCount() < 1) {
        if (combo_tarifas.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una tarifa");
            combo_tarifas.requestFocus();
        } else {
            cerrar(detalle);
            detalle = null;
            f = -1;
            c = -1;
            cargar_tarifas();
            combo_tarifas.setSelectedIndex(-1);
            combo_tarifas.requestFocus();
            txt_precio.setText("0");
        }
        /*if(tabla_tarifas.getRowCount()==1){
            combo_detalle.setSelectedIndex(-1);
        }*/
        }
        }
    }//GEN-LAST:event_btn_agregar_tarifasActionPerformed

    private void btn_quitar_tarifasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_quitar_tarifasActionPerformed
        if (banNuevo != 2) {
        if (tabla_tarifas.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar por lo menos una fila", "Atencion",
                    JOptionPane.WARNING_MESSAGE);

        } else {
            int mensaje = JOptionPane.showConfirmDialog(null, "Desea eliminar la fila seleccionada", "Atencion",
                    JOptionPane.WARNING_MESSAGE, JOptionPane.QUESTION_MESSAGE);
            if (mensaje == 0) {
                javax.swing.table.DefaultTableModel tab = (javax.swing.table.DefaultTableModel) tabla_tarifas.getModel();
                tab.removeRow(tabla_tarifas.getSelectedRow());

            }
            combo_tarifas.setSelectedIndex(-1);
            cerrar(detalle);
            detalle = null;
            f = -1;
            c = -1;
            txt_precio.setText("0");
        }
        /*if(tabla_tarifas.getRowCount()==0){
            combos();
            combo_detalle.setSelectedIndex(-1);
        }*/
        }
    }//GEN-LAST:event_btn_quitar_tarifasActionPerformed

    private void btn_agregar_detalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregar_detalleActionPerformed
        /*  if (combo_detalle.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una cama");
            combo_detalle.requestFocus();
        } else {
            cargar_camas();
            combo_detalle.requestFocus();
        }*/
        String pasar = "";
        if (banNuevo == 2) {
            pasar = txt_codigo.getText();
        }
        String pasar1 = "";
        if (banNuevo == 1) {
            pasar1 = txt_reserva.getText();
        }
        String idtarifa[]= new String[tabla_tarifas.getRowCount()];
        if(tabla_tarifas.getRowCount()>0){
            for (int i=0; i<tabla_tarifas.getRowCount();i++){
             idtarifa[i] = tabla_tarifas.getValueAt(i, 0).toString();   
            }
        

            if (detalle == null ) {


                    detalle = new movimientos.recepcion.detalle_estadia("estadia", pasar, idtarifa, pasar1);
                   // new movimientos.recepcion.detalle_reserva("reserva", pasar, idtarifa).

                menu.llamar_internal(detalle);

            } else {
                mostrar(detalle);
            }
        }else{
        JOptionPane.showMessageDialog(null, "Debe seleccionar una tarifa");
        }
    }//GEN-LAST:event_btn_agregar_detalleActionPerformed

    private void btn_tarifasesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tarifasesActionPerformed
        menu.llamar_internal(new buscadores.buscador_tarifas("estadia"));
    }//GEN-LAST:event_btn_tarifasesActionPerformed

    private void combo_estadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_estadoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            combo_tarifas.requestFocus();
        }
    }//GEN-LAST:event_combo_estadoKeyPressed

    private void combo_estadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_estadoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_estadoFocusLost

    private void combo_estadoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_estadoPopupMenuWillBecomeInvisible
        if (combo_estado.getSelectedIndex() != -1) {
            combo_tarifas.requestFocus();
        }
    }//GEN-LAST:event_combo_estadoPopupMenuWillBecomeInvisible

    private void combo_estadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_estadoFocusGained
        combo_estado.showPopup();
    }//GEN-LAST:event_combo_estadoFocusGained

    private void combo_operadorFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_operadorFocusGained
        combo_operador.showPopup();
    }//GEN-LAST:event_combo_operadorFocusGained

    private void combo_operadorPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_operadorPopupMenuWillBecomeInvisible
        if (combo_operador.getSelectedIndex() != -1) {
            txt_comentarios.requestFocus();
        }
    }//GEN-LAST:event_combo_operadorPopupMenuWillBecomeInvisible

    private void combo_operadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_operadorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_operadorActionPerformed

    private void combo_operadorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_operadorKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_comentarios.requestFocus();
        }
    }//GEN-LAST:event_combo_operadorKeyPressed

    private void txt_codigoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_codigoFocusGained
        if (baneditarnuevo == 0) {
                Botones(true);
                btn_agregar_detalle.setEnabled(false);
            if (!id_estadia.equals("") && !id_estadia.equals("nada")) {
                
                traeFila(id_estadia);

                id_estadia = "";

            } else if (id_estadia.equals("nada")) {
                //si es combo que se actualize aca
                id_estadia = "";
                Botones(false);
            }
        }
    }//GEN-LAST:event_txt_codigoFocusGained

    private void txt_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_codigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoActionPerformed
    String traefil="";
    private void txt_codigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoKeyPressed
       
    }//GEN-LAST:event_txt_codigoKeyPressed

    private void txt_codigoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoKeyReleased

    private void txt_codigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoKeyTyped
        con.validar_campos("numeros", evt);
    }//GEN-LAST:event_txt_codigoKeyTyped

    private void btn_estadiaesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_estadiaesActionPerformed
        menu.llamar_internal(new buscadores.buscador_estadia("estadia"));
    }//GEN-LAST:event_btn_estadiaesActionPerformed

    private void txt_comentariosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_comentariosKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            combo_tipo_cliente.requestFocus();
        }
    }//GEN-LAST:event_txt_comentariosKeyPressed

    private void txt_comentariosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_comentariosKeyTyped
        con.validar_campos(new int[]{39, 126}, "letras_y_numeros", evt, new int[]{47, 164, 165, 209, 241});
    }//GEN-LAST:event_txt_comentariosKeyTyped

    private void txt_precioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_precioActionPerformed
     
    }//GEN-LAST:event_txt_precioActionPerformed

    private void txt_precioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_precioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            combo_tipo_estadia.requestFocus();
        }
    }//GEN-LAST:event_txt_precioKeyPressed

    private void txt_precioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_precioKeyReleased
        formato_numeros(txt_precio);
    }//GEN-LAST:event_txt_precioKeyReleased

    private void txt_precioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_precioKeyTyped
        con.validar_campos("numeros", evt);
    }//GEN-LAST:event_txt_precioKeyTyped

    private void combo_tipo_clienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_tipo_clienteFocusGained
        combo_tipo_cliente.showPopup();
    }//GEN-LAST:event_combo_tipo_clienteFocusGained

    private void combo_tipo_clienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_tipo_clienteFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_tipo_clienteFocusLost

    private void combo_tipo_clientePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_tipo_clientePopupMenuWillBecomeInvisible
        if (combo_tipo_cliente.getSelectedIndex() != -1) {
            combo_tipo_estadia.requestFocus();
        }
    }//GEN-LAST:event_combo_tipo_clientePopupMenuWillBecomeInvisible

    private void combo_tipo_clienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_tipo_clienteKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            combo_tipo_estadia.requestFocus();
        }
    }//GEN-LAST:event_combo_tipo_clienteKeyPressed

    private void tabla_tarifasPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tabla_tarifasPropertyChange
        
    }//GEN-LAST:event_tabla_tarifasPropertyChange

    private void txt_precioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_precioFocusGained
        if(tabla!=null){
            

                // precio = Integer.parseInt(txt_precio.getText().replace(".", ""));
                
               int cant = 0;
                for(int x=0; x<f;x++){
                 cant+= Integer.parseInt(con.BuscaCol("select datediff('"+tabla[x][2]+"','"+tabla[x][1]+"')"));
                }
                for(int y=0; y<tabla_tarifas.getRowCount();y++){
                    precio += Integer.parseInt(tabla_tarifas.getValueAt(y, 2).toString().replace(".", ""));
                }
                precio = precio * cant;
                txt_precio.setText(num.format(precio));

                precio = 0;
                cant=0;
        }
    }//GEN-LAST:event_txt_precioFocusGained

    private void txt_reservaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_reservaFocusGained
        if (baneditarnuevo == 1) {
           // Botones(true);
            //btn_agregar_detalle.setEnabled(false);
            if (!id_reserva.equals("") && !id_reserva.equals("nada")) {

                traeFila_reserva(id_reserva);

                id_reserva = "";

            } else if (id_reserva.equals("nada")) {
                //si es combo que se actualize aca
                id_reserva = "";
            }
        }
    }//GEN-LAST:event_txt_reservaFocusGained

    private void txt_reservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_reservaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_reservaActionPerformed

    private void txt_reservaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_reservaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_reservaKeyPressed

    private void txt_reservaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_reservaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_reservaKeyReleased

    private void txt_reservaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_reservaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_reservaKeyTyped

    private void btn_estadia1esActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_estadia1esActionPerformed
        menu.llamar_internal(new buscadores.buscador_reservas("estadia"));
    }//GEN-LAST:event_btn_estadia1esActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_agregar_detalle;
    private javax.swing.JButton btn_agregar_tarifas;
    private javax.swing.JButton btn_borrar;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_estadia;
    private javax.swing.JButton btn_estadia1;
    private javax.swing.JButton btn_grabar;
    private javax.swing.JButton btn_nuevo;
    private javax.swing.JButton btn_quitar_tarifas;
    private javax.swing.JButton btn_salir;
    private javax.swing.JButton btn_tarifas;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> combo_estado;
    private javax.swing.JComboBox<String> combo_operador;
    private static javax.swing.JComboBox<String> combo_tarifas;
    private javax.swing.JComboBox<String> combo_tipo_cliente;
    private javax.swing.JComboBox<String> combo_tipo_estadia;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable tabla_tarifas;
    private static javax.swing.JTextField txt_codigo;
    private javax.swing.JEditorPane txt_comentarios;
    private static javax.swing.JTextField txt_precio;
    private static javax.swing.JTextField txt_reserva;
    // End of variables declaration//GEN-END:variables

    private void combos() {
        cargaCombo(combo_operador, "SELECT descripcion FROM operador_turistico ORDER BY descripcion", "descripcion");
        cargaCombo(combo_tipo_cliente, "select descripcion from tipo_cliente order by descripcion", "descripcion");
        cargaCombo(combo_tipo_estadia, "SELECT descripcion FROM tipo_estadia ORDER BY descripcion", "descripcion");
        cargaCombo(combo_tarifas, "SELECT CONCAT(f.id,'-',tn.descripcion)\n" +
                                    "FROM tarifas f\n" +
                                    "LEFT JOIN tarifas_nombres tn ON f.tarifas_nombres_id = tn.id\n" +
                                    "LEFT JOIN habitaciones h ON f.habitacion_id = h.id\n" +
                                    "ORDER BY tn.descripcion", "CONCAT(f.id,'-',tn.descripcion)");
        combo_estado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"ACTIVA", "INACTIVA", "CANCELADA"}));
        banPais = 1;
        combo_estado.setSelectedIndex(-1);
    }
    
    

    private void cargaCombo(JComboBox cbo, String sql, String columna) {
        try {
            cbo.removeAllItems();
            con.sentencia = con.conexion.createStatement();
            con.resultado = con.sentencia.executeQuery(sql);
            while (con.resultado.next()) {
                if (columna.equals("nombreyapellido")) {
                    cbo.addItem(con.resultado.getString("CONCAT(p.nombre,' ',p.apellido)"));
                } else if (columna.equals("nombre")) {
                    cbo.addItem(con.resultado.getString("nombre"));
                }else if (columna.equals("descripcion")) {
                    cbo.addItem(con.resultado.getString("descripcion"));
                }else if (columna.equals("CONCAT(f.id,'-',tn.descripcion)")) {
                    cbo.addItem(con.resultado.getString("CONCAT(f.id,'-',tn.descripcion)"));
                }


            }
            cbo.setSelectedIndex(-1);
        } catch (SQLException ex) {
            Logger.getLogger(estadias.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void limpiaTxt() {

        txt_comentarios.setText("");

        txt_precio.setText("");

        txt_codigo.setText("");
        txt_reserva.setText("");
        jDateChooser.setDate(null);

        combo_tipo_estadia.setSelectedIndex(-1);
        combo_tarifas.setSelectedIndex(-1);
        combo_estado.setSelectedIndex(-1);
        combo_operador.setSelectedIndex(-1);
        combo_tipo_cliente.setSelectedIndex(-1);

        

        t.setRowCount(0);
    }

    private void Botones(boolean b) {
        if (b == true) {
            btn_grabar.setEnabled(true);
            btn_agregar_detalle.setEnabled(true);
            btn_nuevo.setEnabled(false);
            btn_salir.setEnabled(false);
            btn_cancelar.setEnabled(true);
            btn_editar.setEnabled(true);
            btn_borrar.setEnabled(true);
        } else {
            btn_grabar.setEnabled(false);
            btn_agregar_detalle.setEnabled(false);
            btn_nuevo.setEnabled(true);
            btn_salir.setEnabled(true);
            btn_cancelar.setEnabled(false);
            btn_editar.setEnabled(false);
            btn_borrar.setEnabled(false);
        }
    }

    private void traeFila(String id) {
    
        try {
            String sql = "SELECT * FROM estadia "
                    + "WHERE id = " + id + " ";
            con.traeQuery(sql);
            String estado="";
            if (con.resultado.next()) {
                traefil = "datos";
               // idhabitacion = con.resultado.getInt("id");
                txt_comentarios.setText(con.resultado.getString("comentarios"));
                
                estado= con.resultado.getString("estado");
                
                if(estado.equals("A")){
                        combo_estado.setSelectedItem("ACTIVA");
                    }else if(estado.equals("I")){
                        combo_estado.setSelectedItem("INACTIVA");
                    }else if(estado.equals("C")){
                        combo_estado.setSelectedItem("CANCELADA");
                    }

                txt_precio.setText(num.format(con.resultado.getInt("precio")));

                jDateChooser.setDate(con.resultado.getDate("fecha"));
                combo_tipo_estadia.setSelectedItem(con.BuscaCol("SELECT descripcion FROM tipo_estadia WHERE id = " + con.resultado.getString("tipo_estadia_id")));
                combo_operador.setSelectedItem(con.BuscaCol("SELECT descripcion FROM operador_turistico WHERE id = " + con.resultado.getString("id_operador")));
                combo_tipo_cliente.setSelectedItem(con.BuscaCol("SELECT descripcion FROM tipo_cliente WHERE id = " + con.resultado.getString("tipo_cliente_id")));
                
                //combo_estado.setSelectedItem(con.BuscaCol("SELECT descripcion FROM habitacion_estado WHERE id = " + con.resultado.getString("estado_id")));
                sql = "SELECT t.id, tn.descripcion, t.precio\n" +
                        "FROM tarifas t\n" +
                        "LEFT JOIN tarifas_nombres tn ON t.tarifas_nombres_id = tn.id\n" +
                        "LEFT JOIN estadia_tarifas r ON r.tarifa_id = t.id\n" +
                        "WHERE r.estadia_id = " + con.resultado.getInt("id") + " ";

                t.setRowCount(0);
                con.sentencia = con.conexion.createStatement();
                con.resultado = con.sentencia.executeQuery(sql);
                while (con.resultado.next()) {
                    t.addRow(new Object[]{con.resultado.getInt("t.id"),
                        con.resultado.getString("tn.descripcion"),
                        con.resultado.getString("t.precio")});

                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(estadias.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    
    private void traeFila_reserva(String id) {
    
        try {
            String sql = "SELECT * FROM reservas "
                    + "WHERE id = " + id + " ";
            con.traeQuery(sql);
            String estado="";
            if (con.resultado.next()) {
               // idhabitacion = con.resultado.getInt("id");
                txt_comentarios.setText(con.resultado.getString("comentarios"));
                
                estado= con.resultado.getString("estado");
                
                if(estado.equals("A")){
                        combo_estado.setSelectedItem("ACTIVA");
                    }else if(estado.equals("I")){
                        combo_estado.setSelectedItem("INACTIVA");
                    }else if(estado.equals("C")){
                        combo_estado.setSelectedItem("CANCELADA");
                    }

                txt_precio.setText(num.format(con.resultado.getInt("precio")));

                //jDateChooser.setDate(con.resultado.getDate("fecha"));
                //combo_tipo_reserva.setSelectedItem(con.BuscaCol("SELECT descripcion FROM tipo_ WHERE id = " + con.resultado.getString("tipo_reserva_id")));
                combo_operador.setSelectedItem(con.BuscaCol("SELECT descripcion FROM operador_turistico WHERE id = " + con.resultado.getString("id_operador")));
                combo_tipo_cliente.setSelectedItem(con.BuscaCol("SELECT descripcion FROM tipo_cliente WHERE id = " + con.resultado.getString("tipo_cliente_id")));
                
                //combo_estado.setSelectedItem(con.BuscaCol("SELECT descripcion FROM habitacion_estado WHERE id = " + con.resultado.getString("estado_id")));
                sql = "SELECT t.id, tn.descripcion, t.precio\n" +
                        "FROM tarifas t\n" +
                        "LEFT JOIN tarifas_nombres tn ON t.tarifas_nombres_id = tn.id\n" +
                        "LEFT JOIN reserva_tarifas r ON r.id_tarifa = t.id\n" +
                        "WHERE r.id_reserva = " + con.resultado.getInt("id") + " ";

                t.setRowCount(0);
                con.sentencia = con.conexion.createStatement();
                con.resultado = con.sentencia.executeQuery(sql);
                while (con.resultado.next()) {
                    t.addRow(new Object[]{con.resultado.getInt("t.id"),
                        con.resultado.getString("tn.descripcion"),
                        con.resultado.getString("t.precio")});

                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(reserva.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void guardar(String idoperador, String idtipocliente, String tiporeserva, String estado) {
        try {
            String sql = "INSERT INTO estadia "
                    + "(id_operador,comentarios,precio,estado,tipo_cliente_id,usuario_id,Tipo_estadia_id,fecha) "
                    + "VALUES (" + idoperador + ", '" + txt_comentarios.getText() + "' ,'" + txt_precio.getText().replace(".", "") + "' , "
                    + "'" + estado + "', " + idtipocliente + ", " + 1 + ", " + tiporeserva + ", "
                    + "'" + con.fechaymd(jDateChooser.getDate()) + "' ) ";
            System.out.println(sql);
            con.actualiza(sql);

            sql = "SELECT LAST_INSERT_ID()";
            con.traeQuery(sql);
            String id = "";
            if (con.resultado.next()) {
                id = con.resultado.getString(1);
            }
            
            if(!txt_reserva.getText().trim().isEmpty()){
                
                sql = " Insert into estadia_reserva (reservas_id, estadia_id) "
                        + "values ("+ txt_reserva.getText() +", "
                        + " " + id + ")";
                System.out.println(sql);
                con.actualiza2(sql);
                
                sql = "UPDATE reservas  "
                    + "SET Estado='I'"
                    + "where id = "+txt_reserva.getText()+" ";
                System.out.println(sql);
                con.actualiza2(sql);
                
                
            }
            
            
            int cf = t.getRowCount();

            for (int i = 0; i < cf; i++) {

                //if (!tablaCheque.getValueAt(i, 5).toString().trim().equals("")) {
                sql = " Insert into estadia_tarifas (estadia_id, tarifa_id) "
                        + "values (" + id + ", "
                        + " " + tabla_tarifas.getValueAt(i, 0).toString().trim() + ")";
                System.out.println(sql);
                con.actualiza2(sql);
                //}
            }
           
               if(tabla!=null){
                   
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into estadia_habitaciones (id_estadia,id_habitacion,entrada,salida,hora_entrada,hora_salida) "
                            + "values ( " + id + ", "
                            + " " + tabla[f1][0] + ", '" + tabla[f1][1] + "', '" + tabla[f1][2] + "', '" + tabla[f1][3] + "', '" + tabla[f1][4] + "')";

                    System.out.println(sql);
                    con.actualiza2(sql);

                
                }
               }
               
               if(tabla1!=null){
                   
                  for (int f1 = 0; f1 < this.f1; f1++) {

                    sql = " Insert into huespedes (profesion,persona_id,estadia_id) "
                            + "values ('', " + tabla1[f1][0] + "," + id + " )";

                    System.out.println(sql);
                    con.actualiza2(sql);

                
                   
                sql = "SELECT LAST_INSERT_ID()";
                con.traeQuery(sql);
                String id_hues = "";
                if (con.resultado.next()) {
                    id_hues = con.resultado.getString(1);
                }
                

                    sql = " Insert into estadia_huespedes (id_estadia,huespedes_id,habitacion_id) "
                            + "values (" + id + ", " + id_hues + ", " + tabla1[f1][1] + " )";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            
               }
                
            
            

            tabla = null;

            f = -1;
            c = -1;
            
            tabla1 = null;

            f1 = -1;
            c1 = -1;

        } catch (SQLException ex) {
            Logger.getLogger(estadias.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    
    private void editar(String idoperador, String idtipocliente, String tiporeserva, String estado) {
            String sql = "UPDATE estadia  "
                    + "SET id_operador=" + idoperador + ", comentarios='" + txt_comentarios.getText() + "' ,precio='" + txt_precio.getText().replace(".", "") + "',"
                    + "estado='" + estado + "',tipo_cliente_id= " + idtipocliente + ""
                    + " , usuario_id=" + 1 + ", Tipo_estadia_id=" + tiporeserva + ", fecha='" + con.fechaymd(jDateChooser.getDate()) + "'"
                    + "where id = "+txt_codigo.getText()+" ";
            
            System.out.println(sql);
            con.actualiza(sql);
            
            sql="DELETE FROM estadia_tarifas WHERE estadia_id= "+ txt_codigo.getText() +" ";
            
            con.actualiza2(sql);
            
            String id="";
            
            id= txt_codigo.getText();
            
            int cf = t.getRowCount();

            for (int i = 0; i < cf; i++) {

                //if (!tablaCheque.getValueAt(i, 5).toString().trim().equals("")) {
                sql = " Insert into estadia_tarifas (estadia_id, tarifa_id) "
                        + "values (" + id + ", "
                        + " " + tabla_tarifas.getValueAt(i, 0).toString().trim() + ")";
                System.out.println(sql);
                con.actualiza2(sql);
                //}
            }
            
            if(tabla!=null || tabla1!=null){
                
                sql="DELETE FROM estadia_habitaciones WHERE id_estadia = "+ txt_codigo.getText() +" ";
            
                con.actualiza2(sql);
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into estadia_habitaciones (id_estadia,id_habitacion,entrada,salida,hora_entrada,hora_salida) "
                            + "values ( " + id + ", "
                            + " " + tabla[f1][0] + ", '" + tabla[f1][1] + "', '" + tabla[f1][2] + "', '" + tabla[f1][3] + "', '" + tabla[f1][4] + "')";

                    System.out.println(sql);
                    con.actualiza2(sql);

                
                }
                
                sql="DELETE FROM estadia_huespedes WHERE id_estadia = "+ txt_codigo.getText() +" ";
            
                con.actualiza2(sql);
               
               sql="DELETE FROM huespedes WHERE estadia_id = "+ txt_codigo.getText() +" ";
            
                con.actualiza2(sql);
               
                
                for (int f1 = 0; f1 < this.f1; f1++) {

                    sql = " Insert into huespedes (profesion,persona_id,estadia_id) "
                            + "values ('', " + tabla1[f1][0] + "," + id + " )";

                    System.out.println(sql);
                    con.actualiza2(sql);

                
                sql = "SELECT LAST_INSERT_ID()";
                con.traeQuery(sql);
                String id_hues = "";
                try {
                    if (con.resultado.next()) {
                        id_hues = con.resultado.getString(1);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(estadias.class.getName()).log(Level.SEVERE, null, ex);
                }
                

                    sql = " Insert into estadia_huespedes (id_estadia,huespedes_id,habitacion_id) "
                            + "values (" + id + ", " + id_hues + ", " + tabla1[f1][1] + " )";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            
               }
                
            
            

            tabla = null;

            f = -1;
            c = -1;
            
            tabla1 = null;

            f1 = -1;
            c1 = -1;
             
    }
    
    
    
    private void visible(boolean b) {
        txt_comentarios.setEditable(b);

      //  txt_precio.setEditable(b);
       // jDateChooser.setEnabled(b);

        combo_tipo_estadia.setEnabled(b);
        combo_tarifas.setEnabled(b);
        combo_estado.setEnabled(b);
        combo_operador.setEnabled(b);

        combo_tipo_cliente.setEnabled(b);

    }

    private boolean vacio() {

        boolean vacio = false;
        String nombre = "";

        if (combo_tipo_estadia.getSelectedIndex() == -1) {
            nombre = "combo";
            vacio = true;
        }

        if (combo_estado.getSelectedIndex() == -1) {
            nombre = "combo";
            vacio = true;
        }
        
        if (combo_operador.getSelectedIndex() == -1) {
            nombre = "combo";
            vacio = true;
        }
        
        if (combo_tipo_cliente.getSelectedIndex() == -1) {
            nombre = "combo";
            vacio = true;
        }

        if (txt_precio.getText().trim().isEmpty() || txt_precio.getText().equals("0")) {
            nombre = "precio";
            vacio = true;
        }

        if (txt_comentarios.getText().trim().isEmpty()) {
            nombre = "comentarios";
            vacio = true;
        }

        if (jDateChooser.getDate() == null) {
            nombre = "fecha";
            vacio = true;
        }

        if (vacio == true) {

            JOptionPane.showMessageDialog(null, "Debe ingresar " + nombre);

        }

        return vacio;

    }

    long numero;

    private void formato_numeros(JTextField campo) {
        if (!campo.getText().trim().isEmpty()) {
            // System.out.println(campo.getText().length());
            // System.out.println(numero);
            numero = Long.parseLong(campo.getText().replace(".", ""));
            campo.setText(num.format(numero));
            // }
        }
    }

    private void cargar_tarifas() {
        
        String idt=combo_tarifas.getSelectedItem().toString().substring(0,1);

        String descrit = con.BuscaCol("SELECT tn.descripcion\n" +
                                    "FROM tarifas t\n" +
                                    "LEFT JOIN tarifas_nombres tn ON t.tarifas_nombres_id = tn.id\n" +
                                    "WHERE t.id = '" + idt + "'");
        
        int preciot = Integer.parseInt(con.BuscaCol("SELECT t.precio\n" +
                                    "FROM tarifas t\n" +
                                    "LEFT JOIN tarifas_nombres tn ON t.tarifas_nombres_id = tn.id\n" +
                                    "WHERE t.id = '" + idt + "'"));
        
        String preciot1 = num.format(preciot);
        if (cuentaid(idt, tabla_tarifas)) {
            t.addRow(new Object[]{idt, descrit, preciot1});
        }
        
    }

  

    private boolean cuentaid(String id, javax.swing.JTable tabla) {
        for (int i = 0; i < tabla.getRowCount(); i++) {
            String vcod = tabla.getValueAt(i, 0).toString();
            if (id.equals(vcod)) {
                JOptionPane.showMessageDialog(null, "Codigo ingresado ya existe en el detalle");
                return false;
            }
        }
        return true;
    }

    static String id_estadia = "";
    public static void buscador_estadia(String id) {
        if (!id.equals("")) {
            //System.out.println(id);
            id_estadia = id;
            if (!id.equals("nada")) {
                txt_codigo.setText(id);
            }
            txt_codigo.requestFocus();
        }
    }

    static String tabla[][]=null;
    static int f=-1, c=-1;
    static int precio = 0;

    public static void detalle_estadia(String tabla1[][], int f1, int c1, int precio1) {
            //System.out.println(id);
            f = f1;
            c = c1;
            tabla = tabla1;
            
                txt_precio.setText("0");
               // txt_precio.requestFocus();
            
            txt_precio.requestFocus();
            
            
            /*for (int f2 = 0; f2 < f; f2++) {

                System.out.println(""+tabla[f1][0] + ", " + tabla[f1][2] + ", " + tabla[f1][3] );
           }*/

        

    }
    
    static String tabla1[][];
    static int f1=-1, c1=-1;
    static int precio1 = 0;
    
    public static void detalle_estadia1(String tabla11[][], int f11, int c11, int precio1) {
            //System.out.println(id);
            f1 = f11;
            c1 = c11;
            tabla1 = tabla11;
            txt_precio.setText("0");
           /* if (txt_precio.getText().equals("")) {
                txt_precio.setText("0");
            }

            if (!txt_precio.getText().equals("")) {

                // precio = Integer.parseInt(txt_precio.getText().replace(".", ""));
                precio = precio + precio1;

                txt_precio.setText(num.format(precio));

                precio = 0;
            }*/
            
            /*for (int f2 = 0; f2 < f; f2++) {

                System.out.println(""+tabla[f1][0] + ", " + tabla[f1][2] + ", " + tabla[f1][3] );
           }*/

        

    }

    private void mostrar(javax.swing.JInternalFrame j) {
        if (j != null) {
            j.setVisible(true);
            j.moveToFront();
        }
    }

    private void ocultar(javax.swing.JInternalFrame j) {
        if (j != null) {
            j.setVisible(false);
            j.moveToBack();
        }
    }

    private void cerrar(javax.swing.JInternalFrame j) {
        if (j != null) {
            j.dispose();

        }
    }
    
    static String id_tarifas="";
    public static void buscador_tarifas(String id){
        if (!id.equals("")) {
            //System.out.println(id);
            id_tarifas = id; 
            combo_tarifas.setSelectedIndex(-1);
        }
    }
    
    
    static String id_reserva = "";
    public static void buscador_reserva(String id) {
        if (!id.equals("")) {
            //System.out.println(id);
            id_reserva = id;
            if (!id.equals("nada")) {
                txt_reserva.setText(id);
            }
            txt_reserva.requestFocus();
        }
    }

}
