/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package movimientos.facturacion;

import movimientos.recepcion.*;
import movimientos.servicios.*;
import buscadores.*;
import referenciales.*;
import java.awt.event.KeyEvent;
import java.sql.Date;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import menu.menu;

/**
 *
 * @author hpnotebook
 */
public class detalle_factura extends javax.swing.JInternalFrame {

    conexion.conexion con = new conexion.conexion();
    javax.swing.table.DefaultTableModel t, t1;
    DecimalFormat num = new DecimalFormat("#,##0");
    SimpleDateFormat fec = new SimpleDateFormat("dd/MM/yyyy");
    
     private String id_tabla="nada";
     
     private String formulario="";
     
     int f = -1;
     int c = -1;
     String tabla[][];
     int precio=0;
     String idd[];
    public detalle_factura(String formulario, String pasar, String[] iddd, String pasar1) {
        initComponents();
        ((BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        t= (javax.swing.table.DefaultTableModel) tabla_servicios.getModel();
        t1= (javax.swing.table.DefaultTableModel) tabla_tarifas.getModel();
       // cargar_tabla("nombre","");
        tabla_servicios.getTableHeader().setReorderingAllowed(false);
        tabla_tarifas.getTableHeader().setReorderingAllowed(false);
       // jRadioButton1.setSelected(true);
        this.formulario = formulario;
       // txt_buscar.requestFocus();
       idd=iddd;
       combo();
       combo_servicios.requestFocus();
       t.setRowCount(0);
       t1.setRowCount(0);
       if(!pasar.equals("")){
         //  cargar_tabla(pasar);
       }
       if(!pasar1.equals("")){
           cargar_tabla1(pasar1);
       }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_servicios = new javax.swing.JTable();
        btn_agregar_cama = new javax.swing.JButton();
        btn_quitar_cama = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        combo_servicios = new javax.swing.JComboBox<>();
        btn_servicios = new javax.swing.JButton();
        btn_editar = new javax.swing.JButton();
        btn_limpiar = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        combo_iva = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        btn_actualizar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();
        btn_agregar = new javax.swing.JButton();
        btn_aceptar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabla_tarifas = new javax.swing.JTable();
        btn_agregar_cama1 = new javax.swing.JButton();
        btn_quitar_cama1 = new javax.swing.JButton();
        jLabel25 = new javax.swing.JLabel();
        combo_tarifas = new javax.swing.JComboBox<>();
        btn_tarifa = new javax.swing.JButton();
        btn_editar1 = new javax.swing.JButton();
        btn_limpiar1 = new javax.swing.JButton();
        combo_iva1 = new javax.swing.JComboBox<>();
        jLabel29 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(950, 580));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tabla_servicios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Nombre", "Descripcion", "Precio", "Codigo", "Iva"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_servicios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabla_serviciosMousePressed(evt);
            }
        });
        tabla_servicios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabla_serviciosKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabla_serviciosKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tabla_servicios);

        btn_agregar_cama.setBackground(new java.awt.Color(255, 255, 255));
        btn_agregar_cama.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/mas2.png"))); // NOI18N
        btn_agregar_cama.setText("Agregar");
        btn_agregar_cama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregar_camaActionPerformed(evt);
            }
        });

        btn_quitar_cama.setBackground(new java.awt.Color(255, 255, 255));
        btn_quitar_cama.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/menos.png"))); // NOI18N
        btn_quitar_cama.setText("Quitar");
        btn_quitar_cama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_quitar_camaActionPerformed(evt);
            }
        });

        jLabel19.setText("Servicios :");

        combo_servicios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_servicios.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_serviciosFocusGained(evt);
            }
        });
        combo_servicios.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_serviciosPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_servicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_serviciosActionPerformed(evt);
            }
        });
        combo_servicios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_serviciosKeyPressed(evt);
            }
        });

        btn_servicios.setBackground(new java.awt.Color(255, 255, 255));
        btn_servicios.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/buscar3.png"))); // NOI18N
        btn_servicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_serviciosActionPerformed(evt);
            }
        });

        btn_editar.setBackground(new java.awt.Color(255, 255, 255));
        btn_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/edit1.png"))); // NOI18N
        btn_editar.setText("Editar");
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });

        btn_limpiar.setBackground(new java.awt.Color(255, 255, 255));
        btn_limpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/delete2.png"))); // NOI18N
        btn_limpiar.setText("Limpiar");
        btn_limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limpiarActionPerformed(evt);
            }
        });

        jLabel23.setText("Iva :");

        combo_iva.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_iva.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_ivaFocusGained(evt);
            }
        });
        combo_iva.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_ivaPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_iva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_ivaActionPerformed(evt);
            }
        });
        combo_iva.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_ivaKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 845, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addComponent(jLabel23))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(combo_servicios, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_servicios, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(combo_iva, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(btn_editar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_limpiar))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(btn_agregar_cama)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_quitar_cama, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_servicios, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addComponent(combo_servicios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel23)
                            .addComponent(combo_iva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_quitar_cama, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_agregar_cama, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_editar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_limpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btn_actualizar.setBackground(new java.awt.Color(255, 255, 255));
        btn_actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/repetir.png"))); // NOI18N
        btn_actualizar.setText("Deshacer");
        btn_actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_actualizarActionPerformed(evt);
            }
        });

        btn_cancelar.setBackground(new java.awt.Color(255, 255, 255));
        btn_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/cancelar.png"))); // NOI18N
        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        btn_agregar.setBackground(new java.awt.Color(255, 255, 255));
        btn_agregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/agregar.png"))); // NOI18N
        btn_agregar.setText("Agregar");
        btn_agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregarActionPerformed(evt);
            }
        });

        btn_aceptar.setBackground(new java.awt.Color(255, 255, 255));
        btn_aceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/aprobar.png"))); // NOI18N
        btn_aceptar.setText("Aceptar");
        btn_aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_aceptarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(btn_actualizar)
                .addGap(22, 22, 22)
                .addComponent(btn_cancelar)
                .addGap(22, 22, 22)
                .addComponent(btn_agregar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_actualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(btn_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(btn_agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addComponent(btn_aceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/atras.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(8, 175, 178));
        jLabel3.setText("Detalle Factura");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tabla_tarifas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Tarifa", "Precio", "Habitacion", "Codigo", "Iva"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_tarifas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabla_tarifasMousePressed(evt);
            }
        });
        tabla_tarifas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tabla_tarifasKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabla_tarifasKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tabla_tarifas);

        btn_agregar_cama1.setBackground(new java.awt.Color(255, 255, 255));
        btn_agregar_cama1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/mas2.png"))); // NOI18N
        btn_agregar_cama1.setText("Agregar");
        btn_agregar_cama1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregar_cama1ActionPerformed(evt);
            }
        });

        btn_quitar_cama1.setBackground(new java.awt.Color(255, 255, 255));
        btn_quitar_cama1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/menos.png"))); // NOI18N
        btn_quitar_cama1.setText("Quitar");
        btn_quitar_cama1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_quitar_cama1ActionPerformed(evt);
            }
        });

        jLabel25.setText("Tarifa :");

        combo_tarifas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_tarifas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_tarifasFocusGained(evt);
            }
        });
        combo_tarifas.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_tarifasPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_tarifas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_tarifasActionPerformed(evt);
            }
        });
        combo_tarifas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_tarifasKeyPressed(evt);
            }
        });

        btn_tarifa.setBackground(new java.awt.Color(255, 255, 255));
        btn_tarifa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/buscar3.png"))); // NOI18N
        btn_tarifa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tarifaActionPerformed(evt);
            }
        });

        btn_editar1.setBackground(new java.awt.Color(255, 255, 255));
        btn_editar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/edit1.png"))); // NOI18N
        btn_editar1.setText("Editar");
        btn_editar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editar1ActionPerformed(evt);
            }
        });

        btn_limpiar1.setBackground(new java.awt.Color(255, 255, 255));
        btn_limpiar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/delete2.png"))); // NOI18N
        btn_limpiar1.setText("Limpiar");
        btn_limpiar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_limpiar1ActionPerformed(evt);
            }
        });

        combo_iva1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_iva1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_iva1FocusGained(evt);
            }
        });
        combo_iva1.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_iva1PopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_iva1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_iva1ActionPerformed(evt);
            }
        });
        combo_iva1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_iva1KeyPressed(evt);
            }
        });

        jLabel29.setText("Iva :");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 46, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29)
                            .addComponent(jLabel25))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(combo_tarifas, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btn_tarifa, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(combo_iva1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42)
                        .addComponent(btn_agregar_cama1)
                        .addGap(6, 6, 6)
                        .addComponent(btn_quitar_cama1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_editar1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_limpiar1)
                        .addGap(0, 46, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_tarifa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel25)
                                    .addComponent(combo_tarifas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29)
                            .addComponent(combo_iva1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_editar1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_limpiar1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_quitar_cama1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_agregar_cama1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(19, 19, 19)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(109, 109, 109)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(108, 108, 108))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(54, 54, 54))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(0, 0, 0)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 934, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 786, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       btn_aceptar.doClick();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_actualizarActionPerformed
     /*   jRadioButton1.setSelected(true);
        txt_buscar.setText("");
        cargar_tabla("nombre", "");*/
     if(t.getRowCount()>0){
         t.setRowCount(0);
     }
     
     if(t1.getRowCount()>0){
         t1.setRowCount(0);
     }
     
     f = -1;
       c = -1;
       tabla = null;
       precio=0;
     
     btn_limpiar.doClick();
     btn_limpiar1.doClick();
    }//GEN-LAST:event_btn_actualizarActionPerformed

    private void btn_agregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregarActionPerformed
    //    menu.menu.llamar_internal(new referenciales.empleado());
    }//GEN-LAST:event_btn_agregarActionPerformed

    private void btn_aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_aceptarActionPerformed
       // referenciales.huespedes.buscador_personas("1");
       
       
       
       
        
           int aux=0;
           f = tabla_servicios.getRowCount();
           c = 2;
           tabla = new String[f][c];
           
           for (int c1=0; c1<c;c1++){
               for(int f1=0; f1<f;f1++){
                   if(c1==0){
                      tabla[f1][c1] = tabla_servicios.getValueAt(f1,0).toString();
                      
                   }else if(c1==1){
                      tabla[f1][c1] = tabla_servicios.getValueAt(f1,4).toString();
                      aux = Integer.parseInt(tabla_servicios.getValueAt(f1,3).toString().replace(".", ""));
                      if(con.BuscaCol("SELECT i.porcentaje FROM iva i WHERE i.id = "+tabla[f1][c1]+" ").equals("10")){
                          precio += (aux + (aux/11));
                      }if(con.BuscaCol("SELECT i.porcentaje FROM iva i WHERE i.id = "+tabla[f1][c1]+" ").equals("5")){
                          precio += (aux + (aux/21));
                      }
                      aux=0;
                   }
               }
           }
           
       
       
       if(formulario.equals("facturas")){
           
           if(tabla_servicios.getRowCount()<=0){
         //  JOptionPane.showMessageDialog(null, "No ha cargado ningun detalle"); 
      
               movimientos.facturacion.facturas.detalle_factura(null, f, c, precio);
           }else{
               movimientos.facturacion.facturas.detalle_factura(tabla, f, c, precio);
           }
           
       }
       
           f = tabla_tarifas.getRowCount();
           c = 2;
           tabla = new String[f][c];
           precio=0;
           for (int c1=0; c1<c;c1++){
               for(int f1=0; f1<f;f1++){
                   if(c1==0){
                      tabla[f1][c1] = tabla_tarifas.getValueAt(f1,0).toString();
                      //precio += Integer.parseInt(tabla_equipaje.getValueAt(f1,2).toString());
                   }else if(c1==1){
                      tabla[f1][c1] = tabla_tarifas.getValueAt(f1,4).toString();
                   }
               }
           }
           
           
           if(formulario.equals("facturas")){
               
               if(tabla_tarifas.getRowCount()<=0){
         //  JOptionPane.showMessageDialog(null, "No ha cargado ningun detalle"); 
      
                   movimientos.facturacion.facturas.detalle_factura1(null, f, c, precio);
               }else{
                   movimientos.facturacion.facturas.detalle_factura1(tabla, f, c, precio);
               }
              
             
       }
           
           
       
       
       
       f = -1;
       c = -1;
       tabla = null;
       precio=0;
       
      // dispose();
        moveToBack();
    }//GEN-LAST:event_btn_aceptarActionPerformed

    private void tabla_serviciosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabla_serviciosKeyReleased

    
       
    }//GEN-LAST:event_tabla_serviciosKeyReleased

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
       //btn_aceptar.doClick();
       btn_actualizar.doClick();
       btn_aceptar.doClick();
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void tabla_serviciosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_serviciosMousePressed

    }//GEN-LAST:event_tabla_serviciosMousePressed

    private void tabla_serviciosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabla_serviciosKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
          //  btn_aceptar.doClick();
        }
    }//GEN-LAST:event_tabla_serviciosKeyPressed

    private void btn_agregar_camaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregar_camaActionPerformed
         if(combo_servicios.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(null, "Debe cargar servicios");
            combo_servicios.requestFocus();
        }else if(combo_iva.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(null, "Debe cargar iva");
            combo_iva.requestFocus();
        }else {
            cargar_detalle();
            combo_servicios.requestFocus();
        }
        
              
    }//GEN-LAST:event_btn_agregar_camaActionPerformed

    private void btn_quitar_camaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_quitar_camaActionPerformed
        if (tabla_servicios.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar por lo menos una fila", "Atencion",
                JOptionPane.WARNING_MESSAGE);

        } else {
            int mensaje = JOptionPane.showConfirmDialog(null, "Desea eliminar la fila seleccionada", "Atencion",
                JOptionPane.WARNING_MESSAGE, JOptionPane.QUESTION_MESSAGE);
            if (mensaje == 0) {
                javax.swing.table.DefaultTableModel tab = (javax.swing.table.DefaultTableModel) tabla_servicios.getModel();
                tab.removeRow(tabla_servicios.getSelectedRow());

            }
           // txt_telefono.setText("");

            combo_servicios.setSelectedIndex(-1);
            btn_limpiar.doClick();
        }
    }//GEN-LAST:event_btn_quitar_camaActionPerformed

    private void combo_serviciosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_serviciosFocusGained
        combo_servicios.showPopup();
    }//GEN-LAST:event_combo_serviciosFocusGained

    private void combo_serviciosPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_serviciosPopupMenuWillBecomeInvisible
      //  txt_horaentrada.requestFocus();
    }//GEN-LAST:event_combo_serviciosPopupMenuWillBecomeInvisible

    private void combo_serviciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_serviciosActionPerformed
        if (!id_servicios.equals("") && !id_servicios.equals("nada")) {
                
              
                combo_servicios.setSelectedItem(con.BuscaCol("SELECT CONCAT(s.id,'-',sn.nombre,' - ',s.descripcion)\n" +
                                                            "FROM servicios s\n" +
                                                            "LEFT JOIN servicios_nombres sn ON sn.id = s.nombre_id\n" +
                                                                "WHERE s.id = " + id_servicios));
                
                
                
                
                
               id_servicios="";
               
               
            }else if(id_servicios.equals("nada")){
               
               id_servicios="";
            }
    }//GEN-LAST:event_combo_serviciosActionPerformed

    private void combo_serviciosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_serviciosKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
          combo_iva.requestFocus();
        }
    }//GEN-LAST:event_combo_serviciosKeyPressed

    private void btn_serviciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_serviciosActionPerformed
        menu.llamar_internal(new buscadores.buscador_servicios("detalle_factura"));
    }//GEN-LAST:event_btn_serviciosActionPerformed

    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
         if (tabla_servicios.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar por lo menos una fila", "Atencion",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
            
        if(combo_servicios.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(null, "Debe cargar servicios");
            combo_servicios.requestFocus();
        }else if(combo_iva.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(null, "Debe cargar iva");
            combo_iva.requestFocus();
        } else {
      
        int mensaje = JOptionPane.showConfirmDialog(null, "Desea editar la fila seleccionada", "Atencion",
        JOptionPane.WARNING_MESSAGE, JOptionPane.QUESTION_MESSAGE);
        if (mensaje == 0) {
            javax.swing.table.DefaultTableModel tab = (javax.swing.table.DefaultTableModel) tabla_servicios.getModel();
            tab.removeRow(tabla_servicios.getSelectedRow());
            cargar_detalle();
            combo_servicios.requestFocus();
        }else {
        btn_limpiar.doClick();
        }
        }
    }//GEN-LAST:event_btn_editarActionPerformed

    private void btn_limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limpiarActionPerformed
     //  txt_telefono.setText("");
       
       combo_servicios.setSelectedIndex(-1);
       combo_iva.setSelectedIndex(-1);
    }//GEN-LAST:event_btn_limpiarActionPerformed

    private void tabla_tarifasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_tarifasMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tabla_tarifasMousePressed

    private void tabla_tarifasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabla_tarifasKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tabla_tarifasKeyPressed

    private void tabla_tarifasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabla_tarifasKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tabla_tarifasKeyReleased

    private void btn_agregar_cama1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregar_cama1ActionPerformed
        if(combo_iva1.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(null, "Debe cargar iva");
            combo_servicios.requestFocus();
        }else if(combo_tarifas.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(null, "Debe cargar tarifa");
            combo_tarifas.requestFocus();
        }else {
            cargar_detalle1();
            combo_tarifas.requestFocus();
        }
    }//GEN-LAST:event_btn_agregar_cama1ActionPerformed

    private void btn_quitar_cama1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_quitar_cama1ActionPerformed
         if (tabla_tarifas.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar por lo menos una fila", "Atencion",
                JOptionPane.WARNING_MESSAGE);

        } else {
            int mensaje = JOptionPane.showConfirmDialog(null, "Desea eliminar la fila seleccionada", "Atencion",
                JOptionPane.WARNING_MESSAGE, JOptionPane.QUESTION_MESSAGE);
            if (mensaje == 0) {
                javax.swing.table.DefaultTableModel tab = (javax.swing.table.DefaultTableModel) tabla_tarifas.getModel();
                tab.removeRow(tabla_tarifas.getSelectedRow());

            }
           // txt_telefono.setText("");
            btn_limpiar1.doClick();
        }
    }//GEN-LAST:event_btn_quitar_cama1ActionPerformed

    private void combo_tarifasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_tarifasFocusGained
       combo_tarifas.showPopup();
    }//GEN-LAST:event_combo_tarifasFocusGained

    private void combo_tarifasPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_tarifasPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_tarifasPopupMenuWillBecomeInvisible

    private void combo_tarifasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_tarifasActionPerformed
        if (!id_tarifas.equals("") && !id_tarifas.equals("nada")) {
                
              
       
               combo_tarifas.setSelectedItem(con.BuscaCol("SELECT CONCAT(t.id,'-',tn.descripcion)\n" +
                                                "FROM tarifas t\n" +
                                                "LEFT JOIN tarifas_nombres tn ON tn.id = t.tarifas_nombres_id \n" +
                                                "LEFT JOIN estadia_tarifas et ON et.tarifa_id = t.id\n" +
                                                "WHERE t.id = " + id_tarifas));
                
               id_tarifas="";
               
              // txt_profesion.requestFocus();
            }else if(id_tarifas.equals("nada")){
              
                id_tarifas="";
            }
    }//GEN-LAST:event_combo_tarifasActionPerformed

    private void combo_tarifasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_tarifasKeyPressed
      if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
          combo_iva1.requestFocus();
        }
    }//GEN-LAST:event_combo_tarifasKeyPressed

    private void btn_tarifaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tarifaActionPerformed
       menu.llamar_internal(new buscadores.buscador_tarifas("detalle_factura"));
    }//GEN-LAST:event_btn_tarifaActionPerformed

    private void btn_editar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editar1ActionPerformed
       if (tabla_tarifas.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar por lo menos una fila", "Atencion",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
            
        if(combo_iva1.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(null, "Debe cargar iva");
            combo_servicios.requestFocus();
        }else if(combo_tarifas.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(null, "Debe cargar tarifa");
            combo_tarifas.requestFocus();
        } else {
      
        int mensaje = JOptionPane.showConfirmDialog(null, "Desea editar la fila seleccionada", "Atencion",
        JOptionPane.WARNING_MESSAGE, JOptionPane.QUESTION_MESSAGE);
        if (mensaje == 0) {
            javax.swing.table.DefaultTableModel tab = (javax.swing.table.DefaultTableModel) tabla_tarifas.getModel();
            tab.removeRow(tabla_tarifas.getSelectedRow());
            cargar_detalle1();
            combo_iva1.requestFocus();
        }else {
        btn_limpiar1.doClick();
        }
        }
    }//GEN-LAST:event_btn_editar1ActionPerformed

    private void btn_limpiar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_limpiar1ActionPerformed
 
       combo_iva1.setSelectedIndex(-1);
       combo_tarifas.setSelectedIndex(-1);
    }//GEN-LAST:event_btn_limpiar1ActionPerformed

    private void combo_iva1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_iva1FocusGained
        combo_iva1.showPopup();
    }//GEN-LAST:event_combo_iva1FocusGained

    private void combo_iva1PopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_iva1PopupMenuWillBecomeInvisible
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_iva1PopupMenuWillBecomeInvisible

    private void combo_iva1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_iva1ActionPerformed
      
    }//GEN-LAST:event_combo_iva1ActionPerformed

    private void combo_iva1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_iva1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_iva1KeyPressed

    private void combo_ivaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_ivaFocusGained
        combo_iva.showPopup();
    }//GEN-LAST:event_combo_ivaFocusGained

    private void combo_ivaPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_ivaPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_ivaPopupMenuWillBecomeInvisible

    private void combo_ivaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_ivaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_ivaActionPerformed

    private void combo_ivaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_ivaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_ivaKeyPressed
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_aceptar;
    private javax.swing.JButton btn_actualizar;
    private javax.swing.JButton btn_agregar;
    private javax.swing.JButton btn_agregar_cama;
    private javax.swing.JButton btn_agregar_cama1;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_editar1;
    private javax.swing.JButton btn_limpiar;
    private javax.swing.JButton btn_limpiar1;
    private javax.swing.JButton btn_quitar_cama;
    private javax.swing.JButton btn_quitar_cama1;
    private javax.swing.JButton btn_servicios;
    private javax.swing.JButton btn_tarifa;
    private javax.swing.ButtonGroup buttonGroup1;
    private static javax.swing.JComboBox<String> combo_iva;
    private static javax.swing.JComboBox<String> combo_iva1;
    private static javax.swing.JComboBox<String> combo_servicios;
    private static javax.swing.JComboBox<String> combo_tarifas;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tabla_servicios;
    private javax.swing.JTable tabla_tarifas;
    // End of variables declaration//GEN-END:variables

    
     private void combo() {
         combo_servicios.removeAllItems();
         combo_tarifas.removeAllItems();
         for(int i=0; i<idd.length;i++){
             
             cargaCombo1(combo_servicios, "SELECT CONCAT(s.id,'-',sn.nombre,' - ',s.descripcion)\n" +
                                            "FROM servicios s\n" +
                                            "LEFT JOIN estadia_servicios es ON es.servicios_id = s.id\n" +
                                            "LEFT JOIN servicios_nombres sn ON sn.id = s.nombre_id\n" +
                                            "WHERE es.estadia_id = "+idd[i]+"\n" +
                                            "ORDER BY s.descripcion\n" +
                                            "","CONCAT(s.id,'-',sn.nombre,' - ',s.descripcion)");
             
             
             cargaCombo1(combo_tarifas, "SELECT concat(t.id,'-',tn.descripcion)\n" +
                                            "FROM tarifas t\n" +
                                            "LEFT JOIN tarifas_nombres tn ON tn.id = t.tarifas_nombres_id \n" +
                                            "LEFT JOIN estadia_tarifas et ON et.tarifa_id = t.id\n" +
                                            "WHERE et.estadia_id = "+idd[i]+"\n" +
                                            "ORDER BY tn.descripcion\n" +
                                            "","concat(t.id,'-',tn.descripcion)");
            
         }
         
         
         
          cargaCombo(combo_iva, "SELECT descripcion\n" +
                                            "FROM iva\n" +
                                            "ORDER BY descripcion\n" +
                                            "","descripcion");
          
          cargaCombo(combo_iva1, "SELECT descripcion\n" +
                                            "FROM iva where porcentaje='10'\n" +
                                            "ORDER BY descripcion\n" +
                                            "","descripcion");
        
       // cargaCombo(combo_camas, "SELECT descripcion FROM cama order by descripcion", "descripcion");
    }
     
    
    
    private void cargaCombo(JComboBox cbo, String sql, String columna) {
        try {
            cbo.removeAllItems();
            con.sentencia = con.conexion.createStatement();
            con.resultado = con.sentencia.executeQuery(sql);
            while (con.resultado.next()) {
                if(columna.equals("descripcion")){
                    cbo.addItem(con.resultado.getString("descripcion"));
                }else if(columna.equals("nombre")){
                    cbo.addItem(con.resultado.getString("nombre"));
                }else if(columna.equals("CONCAT(p.nombre,' ',p.apellido)")){
                    cbo.addItem(con.resultado.getString("CONCAT(p.nombre,' ',p.apellido)"));
                }
                
            }
            cbo.setSelectedIndex(-1);
        } catch (SQLException ex) {
            Logger.getLogger(tarifas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void cargaCombo1(JComboBox cbo, String sql, String columna) {
        try {
            //cbo.removeAllItems();
            con.sentencia = con.conexion.createStatement();
            con.resultado = con.sentencia.executeQuery(sql);
            while (con.resultado.next()) {
                if(columna.equals("CONCAT(s.id,'-',sn.nombre,' - ',s.descripcion)")){
                    cbo.addItem(con.resultado.getString("CONCAT(s.id,'-',sn.nombre,' - ',s.descripcion)"));
                }else if(columna.equals("s.descripcion")){
                    cbo.addItem(con.resultado.getString("s.descripcion"));
                }else if(columna.equals("concat(t.id,'-',tn.descripcion)")){
                    cbo.addItem(con.resultado.getString("concat(t.id,'-',tn.descripcion)"));
                }
                
            }
            cbo.setSelectedIndex(-1);
        } catch (SQLException ex) {
            Logger.getLogger(tarifas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    static String id_servicios="";
    public static void buscador_servicios(String id){
        if (!id.equals("")) {
            //System.out.println(id);
            id_servicios = id; 
            combo_servicios.setSelectedIndex(-1);
        }
    }
    
   
    
    static String id_tarifas="";
    public static void buscador_tarifas(String id){
        if (!id.equals("")) {
            //System.out.println(id);
            id_tarifas = id; 
            combo_tarifas.setSelectedIndex(-1);
        }
    }
    
     private void cargar_detalle() {
         
         
         String idser = con.capturavalorcombo(combo_servicios);
       
        //String dess = combo_servicios.getSelectedItem().toString();
        
         String dess = con.BuscaCol("SELECT s.descripcion\n" +
                                    "FROM servicios s\n" +
                                    "WHERE s.id ='" + idser + "'");
         
         
         String nombre = con.BuscaCol("SELECT sn.nombre\n" +
                                    "FROM servicios s\n" +
                                    "LEFT JOIN servicios_nombres sn ON s.nombre_id = sn.id\n" +
                                    "WHERE s.id =" + idser + "");
        
        
        String press = con.BuscaCol("SELECT s.precio\n" +
                                    "FROM servicios s\n" +
                                    "WHERE s.id =" + idser + "");
        
        press = num.format(Integer.parseInt(press));
        
        String desiva = combo_iva.getSelectedItem().toString();
       
        String idiva = con.BuscaCol("select i.id\n" +
                                    "from iva i\n" +
                                    "where i.descripcion ='" + desiva + "'");
        
        if (cuentaid(idser, tabla_servicios)) {
            t.addRow(new Object[]{idser, nombre, dess, press, idiva, desiva });
        }
        
         
                
        
    }
     
     
     private void cargar_detalle1() {
         
         String idtar = con.capturavalorcombo(combo_tarifas);
                 
         String tarifa = con.BuscaCol("SELECT tn.descripcion\n" +
                                        "FROM tarifas t\n" +
                                        "LEFT JOIN tarifas_nombres tn ON tn.id = t.tarifas_nombres_id\n" +
                                        "WHERE t.id =" + idtar + "");

        
        String precio = con.BuscaCol("SELECT t.precio\n" +
                                        "FROM tarifas t\n" +
                                        "WHERE t.id =" + idtar + "");
        
        precio = num.format(Integer.parseInt(precio));
        
        String habitacion = con.BuscaCol("SELECT h.descripcion\n" +
                                            "FROM tarifas t\n" +
                                            "LEFT JOIN habitaciones h ON  h.id = t.habitacion_id\n" +
                                            "WHERE t.id =" + idtar + "");
        
        String desiva = combo_iva1.getSelectedItem().toString();
       
        String idiva = con.BuscaCol("select i.id\n" +
                                    "from iva i\n" +
                                    "where i.descripcion ='" + desiva + "'");
        
        
        if (cuentaid(idtar, tabla_tarifas)) {
            t1.addRow(new Object[]{idtar,tarifa,precio,habitacion, idiva, desiva});
        }
        
    }
     
     
     private boolean cuentaid(String id, javax.swing.JTable tabla) {
        for (int i = 0; i < tabla.getRowCount(); i++) {
            String vcod = tabla.getValueAt(i, 0).toString();
            if (id.equals(vcod)) {
                JOptionPane.showMessageDialog(null, "Codigo ingresado ya existe en el detalle");
                return false;
            }
        }
        return true;
    }
    
    
    
     
     /* private boolean cuentaid(String id,javax.swing.JTable tabla, int posicion) {
        for (int i = 0; i < tabla.getRowCount(); i++) {
            String vcod = tabla.getValueAt(i, posicion).toString();
            if (id.equals(vcod)) {
                JOptionPane.showMessageDialog(null, "Codigo ingresado ya existe en el detalle");
                return false;
            }
        }
        return true;
    }*/

     
     
      private void cargar_tabla1(String id) {
        
        try {
            
            String sql="";
            
         
            
            sql = "SELECT s.id, sn.nombre, s.descripcion, s.precio\n" +
                    "FROM servicios s\n" +
                    "LEFT JOIN estadia_servicios es ON es.servicios_id = s.id\n" +
                    "LEFT JOIN servicios_nombres sn ON sn.id = s.nombre_id\n" +
                    "LEFT JOIN estadia_servicios ese ON ese.servicios_id = s.id\n" +
                    "WHERE ese.estadia_id = "+id+" ";
            
           
            
            t.setRowCount(0);
            con.sentencia = con.conexion.createStatement();
            con.resultado = con.sentencia.executeQuery(sql);
            while (con.resultado.next()) {
                t.addRow(new Object[]{con.resultado.getInt("s.id"), 
                    con.resultado.getString("sn.nombre"),
                    con.resultado.getString("s.descripcion"),
                    num.format(con.resultado.getInt("s.precio")),
                    con.BuscaCol("SELECT i.id\n" +
                                "FROM iva i \n" +
                                "WHERE i.porcentaje = 10"),
                    con.BuscaCol("SELECT i.descripcion\n" +
                                "FROM iva i \n" +
                                "WHERE i.porcentaje = 10")
                });
                
            }
            
            
            sql = "SELECT t.id, tn.descripcion, t.precio, h.descripcion\n" +
                    "FROM tarifas t \n" +
                    "LEFT JOIN tarifas_nombres tn ON tn.id = t.tarifas_nombres_id\n" +
                    "LEFT JOIN habitaciones h ON h.id = t.habitacion_id\n" +
                    "LEFT JOIN estadia_tarifas et ON et.tarifa_id = t.id\n" +
                    "WHERE et.estadia_id = "+id+" ";
            
           
            
            t1.setRowCount(0);
            con.sentencia = con.conexion.createStatement();
            con.resultado = con.sentencia.executeQuery(sql);
            while (con.resultado.next()) {
                t1.addRow(new Object[]{con.resultado.getInt("t.id"), 
                    con.resultado.getString("tn.descripcion"),
                    num.format(con.resultado.getInt("t.precio")),
                    con.resultado.getString("h.descripcion"),
                    con.BuscaCol("SELECT i.id\n" +
                                "FROM iva i \n" +
                                "WHERE i.porcentaje = 10"),
                    con.BuscaCol("SELECT i.descripcion\n" +
                                "FROM iva i \n" +
                                "WHERE i.porcentaje = 10")
                });
                
            }  
        
        
        } catch (SQLException ex) {
            Logger.getLogger(buscador_servicios.class.getName()).log(Level.SEVERE, null, ex);
        }
}
    
      
      public void formato_hora(JTextField campo, KeyEvent e) { 
        String hora = campo.getText().trim().replace(":", "");
         
        String var, var1;
        
        if(hora.length()<=2){
            campo.setText(hora);
        }else if(hora.length()==3){
            var = hora.substring(0, 2);
            var1 = hora.substring(2, 3);
            campo.setText(var+":"+var1);
        }else if(hora.length()==4){
            var = hora.substring(0, 2);
            var1 = hora.substring(2, 4);
            campo.setText(var+":"+var1);
        }else if(hora.length()>=5){
            var = hora.substring(0, 2);
            var1 = hora.substring(2, 4);
            campo.setText(var+":"+var1);
        }
        
       
    }
    

}
