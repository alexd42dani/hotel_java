/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package movimientos.facturacion;

import movimientos.recepcion.*;
import movimientos.servicios.*;
import referenciales.*;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import menu.menu;

/**
 *
 * @author hpnotebook
 */
public class facturas extends javax.swing.JInternalFrame {

    conexion.conexion con = new conexion.conexion();
    javax.swing.table.DefaultTableModel t;
    int banPais, banDepartamento, banNuevo, baneditarnuevo = 0;
    String idPais = "", idDepartamento = "";
    static DecimalFormat num = new DecimalFormat("#,##0");
    SimpleDateFormat fec = new SimpleDateFormat("dd/MM/yyyy");

    movimientos.facturacion.detalle_factura detalle;

    public facturas() {
        initComponents();
        ((BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        t = (javax.swing.table.DefaultTableModel) tabla_estadia.getModel();
        combos();
        visible(false);
        tabla_estadia.getTableHeader().setReorderingAllowed(false);
        Botones(false);
        t.setRowCount(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_estadia = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        btn_agregar_tarifas = new javax.swing.JButton();
        btn_quitar_tarifas = new javax.swing.JButton();
        bnt_estadia = new javax.swing.JButton();
        txt_cod_estadia = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        btn_editar = new javax.swing.JButton();
        btn_grabar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();
        btn_salir = new javax.swing.JButton();
        btn_nuevo = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        btn_agregar_detalle = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txt_codigo = new javax.swing.JTextField();
        btn_estadia = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        combo_tipo_factura = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        txt_huesped = new javax.swing.JTextField();
        btn_huesped = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txt_ruc = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txt_can_cuotas = new javax.swing.JTextField();
        jPanel15 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        txt_precio = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel25 = new javax.swing.JLabel();
        txt_nro1 = new javax.swing.JTextField();
        txt_nro2 = new javax.swing.JTextField();
        txt_nro3 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txt_timbrado = new javax.swing.JTextField();
        combo_estado = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(950, 577));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tabla_estadia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Codigo", "Fecha"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_estadia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabla_estadiaMousePressed(evt);
            }
        });
        tabla_estadia.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                tabla_estadiaPropertyChange(evt);
            }
        });
        tabla_estadia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabla_estadiaKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tabla_estadia);

        jLabel19.setText("Estadia :");

        btn_agregar_tarifas.setBackground(new java.awt.Color(255, 255, 255));
        btn_agregar_tarifas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/mas2.png"))); // NOI18N
        btn_agregar_tarifas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregar_tarifasActionPerformed(evt);
            }
        });

        btn_quitar_tarifas.setBackground(new java.awt.Color(255, 255, 255));
        btn_quitar_tarifas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/menos.png"))); // NOI18N
        btn_quitar_tarifas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_quitar_tarifasActionPerformed(evt);
            }
        });

        bnt_estadia.setBackground(new java.awt.Color(255, 255, 255));
        bnt_estadia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/buscar3.png"))); // NOI18N
        bnt_estadia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnt_estadiaesActionPerformed(evt);
            }
        });

        txt_cod_estadia.setEditable(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_cod_estadia, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bnt_estadia, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_agregar_tarifas, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_quitar_tarifas, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(txt_cod_estadia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_quitar_tarifas, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_agregar_tarifas, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bnt_estadia, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btn_editar.setBackground(new java.awt.Color(255, 255, 255));
        btn_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/editar.png"))); // NOI18N
        btn_editar.setText("Editar");
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });

        btn_grabar.setBackground(new java.awt.Color(255, 255, 255));
        btn_grabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/grabar.png"))); // NOI18N
        btn_grabar.setText("Grabar");
        btn_grabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_grabarActionPerformed(evt);
            }
        });

        btn_cancelar.setBackground(new java.awt.Color(255, 255, 255));
        btn_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/cancelar.png"))); // NOI18N
        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        btn_salir.setBackground(new java.awt.Color(255, 255, 255));
        btn_salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/atras5.png"))); // NOI18N
        btn_salir.setText("Salir");
        btn_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salirActionPerformed(evt);
            }
        });

        btn_nuevo.setBackground(new java.awt.Color(255, 255, 255));
        btn_nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/agregar.png"))); // NOI18N
        btn_nuevo.setText("Nuevo");
        btn_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_nuevo)
                .addGap(5, 5, 5)
                .addComponent(btn_editar)
                .addGap(5, 5, 5)
                .addComponent(btn_grabar)
                .addGap(5, 5, 5)
                .addComponent(btn_cancelar)
                .addGap(5, 5, 5)
                .addComponent(btn_salir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btn_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_editar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_grabar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/atras.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(8, 175, 178));
        jLabel3.setText("Factura");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.setPreferredSize(new java.awt.Dimension(337, 174));

        jLabel20.setText("Detalle :");

        btn_agregar_detalle.setBackground(new java.awt.Color(255, 255, 255));
        btn_agregar_detalle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/derecha1.png"))); // NOI18N
        btn_agregar_detalle.setText("IR");
        btn_agregar_detalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregar_detalleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(57, Short.MAX_VALUE)
                .addComponent(jLabel20)
                .addGap(65, 65, 65)
                .addComponent(btn_agregar_detalle)
                .addContainerGap(88, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_agregar_detalle)
                    .addComponent(jLabel20))
                .addGap(70, 70, 70))
        );

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));
        jPanel14.setPreferredSize(new java.awt.Dimension(100, 130));

        jLabel4.setText("Codigo :");

        txt_codigo.setEditable(false);
        txt_codigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_codigoFocusGained(evt);
            }
        });
        txt_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_codigoActionPerformed(evt);
            }
        });
        txt_codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_codigoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_codigoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_codigoKeyTyped(evt);
            }
        });

        btn_estadia.setBackground(new java.awt.Color(255, 255, 255));
        btn_estadia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/buscar3.png"))); // NOI18N
        btn_estadia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_estadiaesActionPerformed(evt);
            }
        });

        jLabel13.setText("Tipo Factura:");

        combo_tipo_factura.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_tipo_factura.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_tipo_facturaFocusGained(evt);
            }
        });
        combo_tipo_factura.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_tipo_facturaPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_tipo_factura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_tipo_facturaKeyPressed(evt);
            }
        });

        jLabel5.setText("Huesped :");

        txt_huesped.setEditable(false);
        txt_huesped.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_huespedFocusGained(evt);
            }
        });
        txt_huesped.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_huespedActionPerformed(evt);
            }
        });
        txt_huesped.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_huespedKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_huespedKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_huespedKeyTyped(evt);
            }
        });

        btn_huesped.setBackground(new java.awt.Color(255, 255, 255));
        btn_huesped.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/buscar3.png"))); // NOI18N
        btn_huesped.setEnabled(false);
        btn_huesped.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_huespedesActionPerformed(evt);
            }
        });

        jLabel1.setText("Ruc: ");

        txt_ruc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_rucKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_rucKeyTyped(evt);
            }
        });

        jLabel6.setText("Cant Cuotas :");

        txt_can_cuotas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_can_cuotasKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_can_cuotasKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_codigo)
                            .addComponent(txt_huesped)
                            .addComponent(txt_ruc)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel14Layout.createSequentialGroup()
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel13))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(combo_tipo_factura, 0, 218, Short.MAX_VALUE)
                            .addComponent(txt_can_cuotas))))
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(btn_estadia, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_huesped, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addComponent(btn_estadia, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_huesped, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_huesped, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)))
                .addGap(11, 11, 11)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_ruc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(combo_tipo_factura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txt_can_cuotas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        jPanel15.setPreferredSize(new java.awt.Dimension(100, 130));

        jLabel22.setText("Precio :");

        txt_precio.setEditable(false);
        txt_precio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_precioFocusGained(evt);
            }
        });
        txt_precio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_precioActionPerformed(evt);
            }
        });
        txt_precio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_precioKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_precioKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_precioKeyTyped(evt);
            }
        });

        jLabel24.setText("Fecha :");

        jDateChooser.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser.setEnabled(false);

        jLabel25.setText("Nro :");

        txt_nro1.setEditable(false);

        txt_nro2.setEditable(false);

        txt_nro3.setEditable(false);

        jLabel26.setText("Timbrado :");

        txt_timbrado.setEditable(false);

        combo_estado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_estado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_estadoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                combo_estadoFocusLost(evt);
            }
        });
        combo_estado.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_estadoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_estado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_estadoKeyPressed(evt);
            }
        });

        jLabel16.setText("Estado :");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel22)
                    .addComponent(jLabel24)
                    .addComponent(jLabel26)
                    .addComponent(jLabel25)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(combo_estado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_precio)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel15Layout.createSequentialGroup()
                                .addComponent(txt_nro1, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_nro2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txt_nro3, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txt_timbrado))))
                .addGap(37, 37, 37))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(txt_nro1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_nro2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_nro3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(txt_timbrado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(txt_precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(12, 12, 12))
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 312, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE))
                .addGap(4, 4, 4))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(108, 108, 108))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(93, 93, 93))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(4, 4, 4)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 935, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 786, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        cerrar(detalle);
        dispose();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
        banNuevo = 2;
        Botones(true);
        visible(true);
        btn_estadia.setEnabled(false);
        btn_huesped.setEnabled(true);
        tabla_estadia.setEnabled(true);
    }//GEN-LAST:event_btn_editarActionPerformed

    private void btn_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salirActionPerformed
        cerrar(detalle);
        dispose();
    }//GEN-LAST:event_btn_salirActionPerformed

    private void btn_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nuevoActionPerformed
        banNuevo = 1;
        limpiaTxt();
        Botones(true);
        visible(true);
        btn_editar.setEnabled(false);
        baneditarnuevo = 1;
        btn_estadia.setEnabled(false);
        btn_huesped.setEnabled(true);
        jDateChooser.setDate(new java.util.Date());
        txt_precio.setText("0");
        tabla_estadia.setEnabled(true);
        
        try {
        
                String sql = "SELECT LPAD(n.nro1,3,'00') AS nro1, \n" +
                                "LPAD(n.nro2,3,'00') AS nro2,\n" +
                                "LPAD((n.nro_utilizado + 1),7,'000000') AS nro3, t.nro \n" +
                                "FROM nro_documento n\n" +
                                "LEFT JOIN timbrado t ON t.id = n.timbrado_id\n" +
                                "WHERE t.estado = 'A' AND n.nro_desde < n.nro_hasta\n" +
                                "AND n.nro_utilizado < n.nro_hasta";

        
                con.sentencia = con.conexion.createStatement();
                con.resultado = con.sentencia.executeQuery(sql);
                if (con.resultado.next()) {
                    txt_nro1.setText(con.resultado.getString("nro1"));
                    txt_nro2.setText(con.resultado.getString("nro2"));
                    txt_nro3.setText(con.resultado.getString("nro3"));
                    txt_timbrado.setText(con.resultado.getString("t.nro"));

                }
                
                } catch (SQLException ex) {
            Logger.getLogger(facturas.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btn_nuevoActionPerformed

    private void tabla_estadiaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabla_estadiaKeyReleased

    }//GEN-LAST:event_tabla_estadiaKeyReleased

    private void btn_grabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_grabarActionPerformed

        if (vacio() == false) {

            
            String estado =  combo_estado.getSelectedItem().toString();
            if(estado.equals("ACTIVA")){
                estado="A";
            }else if(estado.equals("INACTIVA")){
                estado="I";
            }else if(estado.equals("CANCELADA")){
                estado="C";
            }else if(estado.equals("PAGADA")){
                estado="P";
            }
            
            String tipo_fac =  combo_tipo_factura.getSelectedItem().toString();
            if(Integer.parseInt(txt_can_cuotas.getText())<=12 && Integer.parseInt(txt_can_cuotas.getText())>=0){
            if (banNuevo == 1) {
                if(tabla1==null){
                JOptionPane.showMessageDialog(this, "no puede guardar sin detalle");
                }else{
                    
                String factura = "";
                
                factura= con.BuscaCol("SELECT f.id FROM factura_detalle f "
                        + "WHERE f.estadia_id = "+tabla_estadia.getValueAt(0,0)+" "); //por ahora
                    
                if(factura.equals("")){
                    guardar(estado, tipo_fac);
                    btn_cancelar.doClick();
                }else{
                    JOptionPane.showMessageDialog(this, "La estadia ya tiene una factura");
                }
               
                }
            }
            if (banNuevo == 2) {
              //  editar(estado, tipo_fac);
                btn_cancelar.doClick();
            }
            }else{
                JOptionPane.showMessageDialog(this, "Cantidad cuota no valida");
            }

        }
    }//GEN-LAST:event_btn_grabarActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        limpiaTxt();
        banNuevo = 0;
        Botones(false);
        cerrar(detalle);
        visible(false);
        tabla_estadia.setEnabled(false);
        //cargar_tabla("nombre","");
        baneditarnuevo = 0;
        combos();
        btn_estadia.setEnabled(true);
        btn_huesped.setEnabled(false);
        f = -1;
        c = -1;
        tabla = null;
        tabla1 = null;
        detalle = null;
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void tabla_estadiaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_estadiaMousePressed

    }//GEN-LAST:event_tabla_estadiaMousePressed

    private void btn_agregar_tarifasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregar_tarifasActionPerformed
        if (banNuevo != 2) {
        if (tabla_estadia.getRowCount() < 1) {
        if (txt_cod_estadia.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una estadia");
            txt_cod_estadia.requestFocus();
        } else {
            cerrar(detalle);
            detalle = null;
            f = -1;
            c = -1;
            cargar_estadia();
            txt_cod_estadia.setText("");
            txt_cod_estadia.requestFocus();
            txt_precio.setText("0");
        }
        /*if(tabla_tarifas.getRowCount()==1){
            combo_detalle.setSelectedIndex(-1);
        }*/
        }
        }
    }//GEN-LAST:event_btn_agregar_tarifasActionPerformed

    private void btn_quitar_tarifasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_quitar_tarifasActionPerformed
        if (banNuevo != 2) {
        if (tabla_estadia.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar por lo menos una fila", "Atencion",
                    JOptionPane.WARNING_MESSAGE);

        } else {
            int mensaje = JOptionPane.showConfirmDialog(null, "Desea eliminar la fila seleccionada", "Atencion",
                    JOptionPane.WARNING_MESSAGE, JOptionPane.QUESTION_MESSAGE);
            if (mensaje == 0) {
                javax.swing.table.DefaultTableModel tab = (javax.swing.table.DefaultTableModel) tabla_estadia.getModel();
                tab.removeRow(tabla_estadia.getSelectedRow());

            }
            txt_cod_estadia.setText("");
            cerrar(detalle);
            detalle = null;
            f = -1;
            c = -1;
            txt_precio.setText("0");
        }
        /*if(tabla_tarifas.getRowCount()==0){
            combos();
            combo_detalle.setSelectedIndex(-1);
        }*/
        }
    }//GEN-LAST:event_btn_quitar_tarifasActionPerformed

    private void btn_agregar_detalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregar_detalleActionPerformed
        /*  if (combo_detalle.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una cama");
            combo_detalle.requestFocus();
        } else {
            cargar_camas();
            combo_detalle.requestFocus();
        }*/
        String pasar = "";
        if (banNuevo == 2) {
            pasar = txt_codigo.getText();
        }
        String pasar1 = "";
        if (banNuevo == 1 && tabla_estadia.getRowCount()>0) {
            pasar1 = tabla_estadia.getValueAt(0, 0).toString();// es primer codigo por ahora, despues recorrer por bucle
        }
        String idestadia[]= new String[tabla_estadia.getRowCount()];
        if(tabla_estadia.getRowCount()>0){
            for (int i=0; i<tabla_estadia.getRowCount();i++){
             idestadia[i] = tabla_estadia.getValueAt(i, 0).toString();   
            }
        

            if (detalle == null ) {


                    detalle = new movimientos.facturacion.detalle_factura("facturas", pasar, idestadia, pasar1);
                   // new movimientos.recepcion.detalle_reserva("reserva", pasar, idtarifa).

                menu.llamar_internal(detalle);

            } else {
                mostrar(detalle);
            }
        }else{
        JOptionPane.showMessageDialog(null, "Debe seleccionar una estadia");
        }
    }//GEN-LAST:event_btn_agregar_detalleActionPerformed

    private void bnt_estadiaesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnt_estadiaesActionPerformed
        menu.llamar_internal(new buscadores.buscador_estadia("facturas"));
    }//GEN-LAST:event_bnt_estadiaesActionPerformed

    private void combo_estadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_estadoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
           // combo_estadia.requestFocus();
        }
    }//GEN-LAST:event_combo_estadoKeyPressed

    private void combo_estadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_estadoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_estadoFocusLost

    private void combo_estadoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_estadoPopupMenuWillBecomeInvisible
        if (combo_estado.getSelectedIndex() != -1) {
         //   combo_estadia.requestFocus();
        }
    }//GEN-LAST:event_combo_estadoPopupMenuWillBecomeInvisible

    private void combo_estadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_estadoFocusGained
        combo_estado.showPopup();
    }//GEN-LAST:event_combo_estadoFocusGained

    private void txt_codigoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_codigoFocusGained
        if (baneditarnuevo == 0) {
            Botones(true);
            btn_agregar_detalle.setEnabled(false);
            if (!id_factura.equals("") && !id_factura.equals("nada")) {

                traeFila(id_factura);

                id_factura = "";

            } else if (id_factura.equals("nada")) {
                //si es combo que se actualize aca
                id_factura = "";
                Botones(false);
            }
        }
    }//GEN-LAST:event_txt_codigoFocusGained

    private void txt_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_codigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoActionPerformed

    private void txt_codigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoKeyPressed

    private void txt_codigoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoKeyReleased

    private void txt_codigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoKeyTyped

    private void btn_estadiaesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_estadiaesActionPerformed
       menu.llamar_internal(new buscadores.buscador_factura("facturas"));
    }//GEN-LAST:event_btn_estadiaesActionPerformed

    private void txt_precioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_precioActionPerformed
     
    }//GEN-LAST:event_txt_precioActionPerformed

    private void txt_precioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_precioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
         //   combo_tipo_estadia.requestFocus();
        }
    }//GEN-LAST:event_txt_precioKeyPressed

    private void txt_precioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_precioKeyReleased
        formato_numeros(txt_precio);
    }//GEN-LAST:event_txt_precioKeyReleased

    private void txt_precioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_precioKeyTyped
        con.validar_campos("numeros", evt);
    }//GEN-LAST:event_txt_precioKeyTyped

    private void tabla_estadiaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_tabla_estadiaPropertyChange
        
    }//GEN-LAST:event_tabla_estadiaPropertyChange

    private void txt_precioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_precioFocusGained
        if(tabla!=null){
                // precio = Integer.parseInt(txt_precio.getText().replace(".", ""));
                
                
                txt_precio.setText(num.format(precio));

                //precio = 0;
                
        }
        if(tabla_estadia.getRowCount()>0){
        if(tabla1!=null){
                int cant = 0;
                cant = Integer.parseInt(con.BuscaCol("SELECT precio FROM estadia WHERE id="+tabla_estadia.getValueAt(0,0)+"")); //esto tambien por ahora, despues recorrer con bucle
                
                precio1 = (cant + (cant/11));
                
                txt_precio.setText(num.format(precio+precio1));
                
                /*for(int x=0; x<f1;x++){
                 cant+= Integer.parseInt(con.BuscaCol("select datediff('"+tabla[x][2]+"','"+tabla[x][1]+"')"));
                }
                for(int y=0; y<tabla_estadia.getRowCount();y++){
                }
                cant=0;*/
        }
        }
    }//GEN-LAST:event_txt_precioFocusGained

    private void txt_huespedFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_huespedFocusGained
        if (!id_huesped.equals("") && !id_huesped.equals("nada")) {
                
              
                txt_huesped.setText(con.BuscaCol("SELECT CONCAT(h.id,'-',p.nombre,' ',p.apellido)\n" +
                                                "FROM huespedes h\n" +
                                                "LEFT JOIN persona p ON h.persona_id = p.id\n" +
                                                "LEFT JOIN estadia_huespedes eh ON eh.huespedes_id = h.id\n" +
                                                "LEFT JOIN estadia e ON e.id = eh.id_estadia\n" +
                                                "WHERE e.estado = 'A'\n" +
                                                "and h.id = " + id_huesped));
                
                
               id_huesped="";
               
               
            }else if(id_huesped.equals("nada")){
               
               id_huesped="";
            }
    }//GEN-LAST:event_txt_huespedFocusGained

    private void txt_huespedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_huespedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_huespedActionPerformed

    private void txt_huespedKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_huespedKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_huespedKeyPressed

    private void txt_huespedKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_huespedKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_huespedKeyReleased

    private void txt_huespedKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_huespedKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_huespedKeyTyped

    private void btn_huespedesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_huespedesActionPerformed
        menu.llamar_internal(new buscadores.buscador_huesped("facturas"));
    }//GEN-LAST:event_btn_huespedesActionPerformed

    private void txt_rucKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_rucKeyTyped
         con.validar_campos("numeros", evt,  new int[]{45});
    }//GEN-LAST:event_txt_rucKeyTyped

    private void txt_can_cuotasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_can_cuotasKeyTyped
        con.validar_campos("numeros", evt);
    }//GEN-LAST:event_txt_can_cuotasKeyTyped

    private void txt_rucKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_rucKeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            combo_tipo_factura.requestFocus();
        }
    }//GEN-LAST:event_txt_rucKeyPressed

    private void combo_tipo_facturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_tipo_facturaKeyPressed
       if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_can_cuotas.requestFocus();
        }
    }//GEN-LAST:event_combo_tipo_facturaKeyPressed

    private void txt_can_cuotasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_can_cuotasKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            combo_estado.requestFocus();
        }
    }//GEN-LAST:event_txt_can_cuotasKeyPressed

    private void combo_tipo_facturaPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_tipo_facturaPopupMenuWillBecomeInvisible
        if (combo_estado.getSelectedIndex() != -1) {
        txt_can_cuotas.requestFocus();
        }
    }//GEN-LAST:event_combo_tipo_facturaPopupMenuWillBecomeInvisible

    private void combo_tipo_facturaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_tipo_facturaFocusGained
       combo_tipo_factura.showPopup();
    }//GEN-LAST:event_combo_tipo_facturaFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bnt_estadia;
    private javax.swing.JButton btn_agregar_detalle;
    private javax.swing.JButton btn_agregar_tarifas;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_estadia;
    private javax.swing.JButton btn_grabar;
    private javax.swing.JButton btn_huesped;
    private javax.swing.JButton btn_nuevo;
    private javax.swing.JButton btn_quitar_tarifas;
    private javax.swing.JButton btn_salir;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> combo_estado;
    private javax.swing.JComboBox<String> combo_tipo_factura;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabla_estadia;
    private javax.swing.JTextField txt_can_cuotas;
    private static javax.swing.JTextField txt_cod_estadia;
    private static javax.swing.JTextField txt_codigo;
    private static javax.swing.JTextField txt_huesped;
    private javax.swing.JTextField txt_nro1;
    private javax.swing.JTextField txt_nro2;
    private javax.swing.JTextField txt_nro3;
    private static javax.swing.JTextField txt_precio;
    private javax.swing.JTextField txt_ruc;
    private javax.swing.JTextField txt_timbrado;
    // End of variables declaration//GEN-END:variables

    private void combos() {
        combo_estado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"ACTIVA", "INACTIVA", "CANCELADA","PAGADA"}));
        combo_tipo_factura.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"CONTADO", "CREDITO"}));
        banPais = 1;
        combo_estado.setSelectedIndex(-1);
        combo_tipo_factura.setSelectedIndex(-1);
    }
    
    

    private void cargaCombo(JComboBox cbo, String sql, String columna) {
        try {
            cbo.removeAllItems();
            con.sentencia = con.conexion.createStatement();
            con.resultado = con.sentencia.executeQuery(sql);
            while (con.resultado.next()) {
                if (columna.equals("nombreyapellido")) {
                    cbo.addItem(con.resultado.getString("CONCAT(p.nombre,' ',p.apellido)"));
                } else if (columna.equals("nombre")) {
                    cbo.addItem(con.resultado.getString("nombre"));
                }else if (columna.equals("descripcion")) {
                    cbo.addItem(con.resultado.getString("descripcion"));
                }else if (columna.equals("CONCAT(f.id,'-',tn.descripcion)")) {
                    cbo.addItem(con.resultado.getString("CONCAT(f.id,'-',tn.descripcion)"));
                }


            }
            cbo.setSelectedIndex(-1);
        } catch (SQLException ex) {
            Logger.getLogger(facturas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void limpiaTxt() {


        txt_precio.setText("");

        txt_codigo.setText("");
        txt_ruc.setText("");
        txt_can_cuotas.setText("");
        txt_huesped.setText("");
        txt_cod_estadia.setText("");
        txt_nro1.setText("");
        txt_nro2.setText("");
        txt_nro3.setText("");
        txt_timbrado.setText("");
        jDateChooser.setDate(null);

        combo_tipo_factura.setSelectedIndex(-1);
        combo_estado.setSelectedIndex(-1);
    
        

        t.setRowCount(0);
    }

    private void Botones(boolean b) {
        if (b == true) {
            btn_grabar.setEnabled(true);
            btn_agregar_detalle.setEnabled(true);
            btn_nuevo.setEnabled(false);
            btn_salir.setEnabled(false);
            btn_cancelar.setEnabled(true);
            btn_editar.setEnabled(true);
        } else {
            btn_grabar.setEnabled(false);
            btn_agregar_detalle.setEnabled(false);
            btn_nuevo.setEnabled(true);
            btn_salir.setEnabled(true);
            btn_cancelar.setEnabled(false);
            btn_editar.setEnabled(false);
        }
    }

    private void traeFila(String id) {
    
        try {
            String sql = "SELECT CONCAT(h.id,'-',p.nombre,' ',p.apellido), \n" +
                            "f.ruc,f.can_cuo, f.fecha,f.nro_factura,\n" +
                            "e.id,f.precio, t.nro, f.tipo_factura, f.estado\n" +
                            "FROM factura f\n" +
                            "LEFT JOIN huespedes h ON h.id = f.huesped_id\n" +
                            "LEFT JOIN persona p ON p.id = h.persona_id\n" +
                            "LEFT JOIN nro_documento n ON n.id = f.numero_id\n" +
                            "LEFT JOIN factura_detalle fd ON fd.factura_id = f.id\n" +
                            "LEFT JOIN estadia e ON e.id = fd.estadia_id\n" +
                            "LEFT JOIN timbrado t ON t.id = n.timbrado_id "
                            + "WHERE f.id = " + id + " ";
            con.traeQuery(sql);
            String estado="";
            String tipof="";
            if (con.resultado.next()) {
               // idhabitacion = con.resultado.getInt("id");
                txt_huesped.setText(con.resultado.getString("CONCAT(h.id,'-',p.nombre,' ',p.apellido)"));
                txt_ruc.setText(con.resultado.getString("ruc"));
                txt_timbrado.setText(con.resultado.getString("nro"));
                txt_can_cuotas.setText(con.resultado.getString("can_cuo"));
                
                
                 combo_tipo_factura.setSelectedItem(con.resultado.getString("f.tipo_factura"));
                 
                String fac_num = con.resultado.getString("nro_factura");
                int nro = fac_num.indexOf("-");
                txt_nro1.setText(fac_num.substring(0, nro));
                txt_nro2.setText(fac_num.substring(nro+1, nro+4));
                txt_nro3.setText(fac_num.substring(nro+3));
                
                
                tipof= con.resultado.getString("estado");
                
                if(tipof.equals("A")){
                        combo_estado.setSelectedItem("ACTIVA");
                    }else if(tipof.equals("I")){
                        combo_estado.setSelectedItem("INACTIVA");
                    }else if(tipof.equals("C")){
                        combo_estado.setSelectedItem("CANCELADA");
                    }else if(tipof.equals("P")){
                        combo_estado.setSelectedItem("PAGADA");
                    }

                txt_precio.setText(num.format(con.resultado.getInt("precio")));

                jDateChooser.setDate(con.resultado.getDate("fecha"));
                
                
                //combo_estado.setSelectedItem(con.BuscaCol("SELECT descripcion FROM habitacion_estado WHERE id = " + con.resultado.getString("estado_id")));
                sql = "SELECT * \n" +
                        "FROM estadia \n" +
                        "WHERE id = " + con.resultado.getInt("id") + " ";

                t.setRowCount(0);
                con.sentencia = con.conexion.createStatement();
                con.resultado = con.sentencia.executeQuery(sql);
                while (con.resultado.next()) {
                    t.addRow(new Object[]{con.resultado.getInt("id"),
                        fec.format(con.resultado.getDate("fecha"))});

                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(facturas.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    
    

    private void guardar(String estado, String tipo_fac) {
        try {
            String nro_fac= txt_nro1.getText()+"-"+txt_nro2.getText()+"-"+txt_nro3.getText();
            String sql = "INSERT INTO factura "
                    + "(fecha,tipo_factura,estado,numero_id,huesped_id,ruc,nro_factura,can_cuo,precio) "
                    + "VALUES ('" + con.fechaymd(jDateChooser.getDate()) + "', '" + tipo_fac + "' , '" + estado + "',"
                    + "1, " + con.capturavalorcampo(txt_huesped) + ",'"+txt_ruc.getText()+"', '"+nro_fac+"',"
                    + " "+txt_can_cuotas.getText()+", "+txt_precio.getText().replace(".", "")+" ) ";
            System.out.println(sql);
            con.actualiza(sql);

            sql = "SELECT LAST_INSERT_ID()";
            con.traeQuery(sql);
            String id = "";
            if (con.resultado.next()) {
                id = con.resultado.getString(1);
            }
            
               int can_cuo= Integer.parseInt(txt_can_cuotas.getText());
               int monto = 0;
               if(can_cuo==0){
                   monto = Integer.parseInt(txt_precio.getText().replace(".", ""));
                   for(int i=0; i<1;i++){
                   
                    sql = " Insert into cuentas_a_cobrar (factura_id, cantidad_cuotas, nro_cuota, estado, fecha_a_pagar, monto) "
                            + "values ("+ id +", "+txt_can_cuotas.getText()+","+(i+1)+",'A',date_add(curdate(), interval "+(i+can_cuo)+" month),"+monto+" )";
                    System.out.println(sql);
                    con.actualiza2(sql);

                   }
               }else{
                   monto = (Integer.parseInt(txt_precio.getText().replace(".", ""))/can_cuo);
               }
               
               for(int i=0; i<can_cuo;i++){
                   
                sql = " Insert into cuentas_a_cobrar (factura_id, cantidad_cuotas, nro_cuota, estado, fecha_a_pagar, monto) "
                        + "values ("+ id +", "+txt_can_cuotas.getText()+","+(i+1)+",'A',date_add(curdate(), interval "+(i+1)+" month),"+monto+" )";
                System.out.println(sql);
                con.actualiza2(sql);
                   
               }
               
                
                sql = "UPDATE nro_documento  "
                    + "SET nro_utilizado=nro_utilizado+1 ";
                System.out.println(sql);
                con.actualiza2(sql);
                
                
            
            
            int cf = t.getRowCount();

            for (int i = 0; i < cf; i++) {

                //if (!tablaCheque.getValueAt(i, 5).toString().trim().equals("")) {
                sql = " Insert into factura_detalle (factura_id, estadia_id) "
                        + "values (" + id + ", "
                        + " " + tabla_estadia.getValueAt(i, 0).toString().trim() + ")";
                System.out.println(sql);
                con.actualiza2(sql);
                //}
            }
           
               if(tabla!=null){
                   
                
                for (int f1 = 0; f1 < f; f1++) {
                    
                    String estadia_id_ser = con.BuscaCol("SELECT e.id FROM estadia_servicios e\n" +
                                                            "LEFT JOIN servicios s ON s.id = e.servicios_id\n" +
                                                            "WHERE s.id = "+tabla[f1][0]);

                    sql = " Insert into factura_servicios (factura_id,estadia_servicios_id,iva_id) "
                            + "values ( " + id + " "
                            + " , " + estadia_id_ser + ", " + tabla[f1][1] + " )";

                    System.out.println(sql);
                    con.actualiza2(sql);

                
                }
               }
               
               if(tabla1!=null){
                   
                  for (int f1 = 0; f1 < this.f1; f1++) {

                    sql = " Insert into factura_tarifas (factura_id,tarifa_id,iva_id) "
                            + "values ("+id+", " + tabla1[f1][0] + "," + tabla1[f1][1] + " )";

                    System.out.println(sql);
                    con.actualiza2(sql);

             

                }

            
               }
                
            
            

            tabla = null;

            f = -1;
            c = -1;
            
            tabla1 = null;

            f1 = -1;
            c1 = -1;

        } catch (SQLException ex) {
            Logger.getLogger(facturas.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /*
    private void editar(String idoperador, String idtipocliente, String tiporeserva, String estado) {
            String sql = "UPDATE estadia  "
                    + "SET id_operador=" + idoperador + ", comentarios='" + txt_comentarios.getText() + "' ,precio='" + txt_precio.getText().replace(".", "") + "',"
                    + "estado='" + estado + "',tipo_cliente_id= " + idtipocliente + ""
                    + " , usuario_id=" + 1 + ", Tipo_estadia_id=" + tiporeserva + ", fecha='" + con.fechaymd(jDateChooser.getDate()) + "'"
                    + "where id = "+txt_codigo.getText()+" ";
            
            System.out.println(sql);
            con.actualiza(sql);
            
            sql="DELETE FROM estadia_tarifas WHERE estadia_id= "+ txt_codigo.getText() +" ";
            
            con.actualiza2(sql);
            
            String id="";
            
            id= txt_codigo.getText();
            
            int cf = t.getRowCount();

            for (int i = 0; i < cf; i++) {

                //if (!tablaCheque.getValueAt(i, 5).toString().trim().equals("")) {
                sql = " Insert into estadia_tarifas (estadia_id, tarifa_id) "
                        + "values (" + id + ", "
                        + " " + tabla_tarifas.getValueAt(i, 0).toString().trim() + ")";
                System.out.println(sql);
                con.actualiza2(sql);
                //}
            }
            
            if(tabla!=null || tabla1!=null){
                
                sql="DELETE FROM estadia_habitaciones WHERE id_estadia = "+ txt_codigo.getText() +" ";
            
                con.actualiza2(sql);
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into estadia_habitaciones (id_estadia,id_habitacion,entrada,salida,hora_entrada,hora_salida) "
                            + "values ( " + id + ", "
                            + " " + tabla[f1][0] + ", '" + tabla[f1][1] + "', '" + tabla[f1][2] + "', '" + tabla[f1][3] + "', '" + tabla[f1][4] + "')";

                    System.out.println(sql);
                    con.actualiza2(sql);

                
                }
                
                sql="DELETE FROM estadia_huespedes WHERE id_estadia = "+ txt_codigo.getText() +" ";
            
                con.actualiza2(sql);
               
               sql="DELETE FROM huespedes WHERE estadia_id = "+ txt_codigo.getText() +" ";
            
                con.actualiza2(sql);
               
                
                for (int f1 = 0; f1 < this.f1; f1++) {

                    sql = " Insert into huespedes (profesion,persona_id,estadia_id) "
                            + "values ('', " + tabla1[f1][0] + "," + id + " )";

                    System.out.println(sql);
                    con.actualiza2(sql);

                
                sql = "SELECT LAST_INSERT_ID()";
                con.traeQuery(sql);
                String id_hues = "";
                try {
                    if (con.resultado.next()) {
                        id_hues = con.resultado.getString(1);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(facturas.class.getName()).log(Level.SEVERE, null, ex);
                }
                

                    sql = " Insert into estadia_huespedes (id_estadia,huespedes_id,habitacion_id) "
                            + "values (" + id + ", " + id_hues + ", " + tabla1[f1][1] + " )";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            
               }
                
            
            

            tabla = null;

            f = -1;
            c = -1;
            
            tabla1 = null;

            f1 = -1;
            c1 = -1;
             
    }
    */
    
    
    private void visible(boolean b) {

      //  txt_precio.setEditable(b);
       // jDateChooser.setEnabled(b);

        combo_tipo_factura.setEnabled(b);
        combo_estado.setEnabled(b);


    }

    private boolean vacio() {

        boolean vacio = false;
        String nombre = "";

        if (combo_tipo_factura.getSelectedIndex() == -1) {
            nombre = "combo";
            vacio = true;
        }

        if (combo_estado.getSelectedIndex() == -1) {
            nombre = "combo";
            vacio = true;
        }
        

        if (txt_precio.getText().trim().isEmpty() || txt_precio.getText().equals("0")) {
            nombre = "precio";
            vacio = true;
        }

        if (txt_huesped.getText().trim().isEmpty()) {
            nombre = "huesped";
            vacio = true;
        }
        
        if (txt_can_cuotas.getText().trim().isEmpty()) {
            nombre = "cuotas";
            vacio = true;
        }
        
        if (txt_timbrado.getText().trim().isEmpty()) {
            nombre = "timbrado";
            vacio = true;
        }
        
        
        if (txt_nro1.getText().trim().isEmpty()) {
            nombre = "numero";
            vacio = true;
        }
        
        if (txt_nro2.getText().trim().isEmpty()) {
            nombre = "numero";
            vacio = true;
        }
        
        if (txt_nro3.getText().trim().isEmpty()) {
            nombre = "numero";
            vacio = true;
        }
        
        if (txt_ruc.getText().trim().isEmpty()) {
            nombre = "ruc";
            vacio = true;
        }

        if (jDateChooser.getDate() == null) {
            nombre = "fecha";
            vacio = true;
        }

        if (vacio == true) {

            JOptionPane.showMessageDialog(null, "Debe ingresar " + nombre);

        }

        return vacio;

    }

    long numero;

    private void formato_numeros(JTextField campo) {
        if (!campo.getText().trim().isEmpty()) {
            // System.out.println(campo.getText().length());
            // System.out.println(numero);
            numero = Long.parseLong(campo.getText().replace(".", ""));
            campo.setText(num.format(numero));
            // }
        }
    }

    private void cargar_estadia() {
        
        String ide=txt_cod_estadia.getText();
        
        String fecha = con.fechadmy(con.BuscaFecha("SELECT e.fecha\n" +
                                    "FROM estadia e\n" +
                                    "WHERE e.id = '" + ide + "'"));
        
        if (cuentaid(ide, tabla_estadia)) {
            t.addRow(new Object[]{ide, fecha});
        }
        
    }

  

    private boolean cuentaid(String id, javax.swing.JTable tabla) {
        for (int i = 0; i < tabla.getRowCount(); i++) {
            String vcod = tabla.getValueAt(i, 0).toString();
            if (id.equals(vcod)) {
                JOptionPane.showMessageDialog(null, "Codigo ingresado ya existe en el detalle");
                return false;
            }
        }
        return true;
    }

    static String id_factura = "";
    public static void buscador_factura(String id) {
        if (!id.equals("")) {
            //System.out.println(id);
            id_factura = id;
            if (!id.equals("nada")) {
                txt_codigo.setText(id);
            }
            txt_codigo.requestFocus();
        }
    }

    static String tabla[][]=null;
    static int f=-1, c=-1;
    static int precio = 0;

    public static void detalle_factura(String tabla1[][], int f1, int c1, int precio1) {
            //System.out.println(id);
            f = f1;
            c = c1;
            tabla = tabla1;
            precio= precio1;
                txt_precio.setText("0");
               // txt_precio.requestFocus();
            
            txt_precio.requestFocus();
            
            
            
            /*for (int f2 = 0; f2 < f; f2++) {

                System.out.println(""+tabla[f1][0] + ", " + tabla[f1][2] + ", " + tabla[f1][3] );
           }*/

        

    }
    
    static String tabla1[][];
    static int f1=-1, c1=-1;
    static int precio1 = 0;
    
    public static void detalle_factura1(String tabla11[][], int f11, int c11, int precio11) {
            //System.out.println(id);
            f1 = f11;
            c1 = c11;
            tabla1 = tabla11;
            //txt_precio.setText("0");
            //precio1=precio11;
            txt_precio.requestFocus();
            
           /* if (txt_precio.getText().equals("")) {
                txt_precio.setText("0");
            }

            if (!txt_precio.getText().equals("")) {

                // precio = Integer.parseInt(txt_precio.getText().replace(".", ""));
                precio = precio + precio1;

                txt_precio.setText(num.format(precio));

                precio = 0;
            }*/
            
            /*for (int f2 = 0; f2 < f; f2++) {

                System.out.println(""+tabla[f1][0] + ", " + tabla[f1][2] + ", " + tabla[f1][3] );
           }*/

        

    }

    private void mostrar(javax.swing.JInternalFrame j) {
        if (j != null) {
            j.setVisible(true);
            j.moveToFront();
        }
    }

    private void ocultar(javax.swing.JInternalFrame j) {
        if (j != null) {
            j.setVisible(false);
            j.moveToBack();
        }
    }

    private void cerrar(javax.swing.JInternalFrame j) {
        if (j != null) {
            j.dispose();

        }
    }
    
    static String id_estadia="";
    public static void buscador_estadia(String id){
        if (!id.equals("")) {
            //System.out.println(id);
            id_estadia = id; 
            if (!id.equals("nada")) {
                txt_cod_estadia.setText(id);
            }
            txt_cod_estadia.requestFocus();
        }
    }
    
    
    static String id_huesped = "";
    public static void buscador_huesped(String id) {
        if (!id.equals("")) {
            //System.out.println(id);
            id_huesped = id;
            if (!id.equals("nada")) {
                txt_huesped.setText(id);
            }
            txt_huesped.requestFocus();
        }
    }

}
