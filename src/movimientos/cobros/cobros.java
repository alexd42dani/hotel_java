/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package movimientos.cobros;

import movimientos.recepcion.*;
import movimientos.servicios.*;
import referenciales.*;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import menu.menu;

/**
 *
 * @author hpnotebook
 */
public class cobros extends javax.swing.JInternalFrame {

    conexion.conexion con = new conexion.conexion();
    int banPais, banDepartamento, banNuevo, baneditarnuevo = 0;
    String idPais = "", idDepartamento = "";
    static DecimalFormat num = new DecimalFormat("#,##0");
    SimpleDateFormat fec = new SimpleDateFormat("dd/MM/yyyy");

    movimientos.cobros.detalle_cobros detalle;

    public cobros() {
        initComponents();
        ((BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        combos();
        visible(false);
        Botones(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btn_editar = new javax.swing.JButton();
        btn_grabar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();
        btn_salir = new javax.swing.JButton();
        btn_nuevo = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        txt_precio = new javax.swing.JTextField();
        txt_efectivo = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txt_entregado = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txt_diferencia = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        btn_agregar_detalle = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txt_codigo = new javax.swing.JTextField();
        btn_estadia = new javax.swing.JButton();
        btn_estadia2 = new javax.swing.JButton();
        txt_apertura = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jDateChooser = new com.toedter.calendar.JDateChooser();
        txt_cuenta_a_cobrar = new javax.swing.JTextField();
        btn_estadia1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        combo_estado = new javax.swing.JComboBox<>();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(950, 577));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btn_editar.setBackground(new java.awt.Color(255, 255, 255));
        btn_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/editar.png"))); // NOI18N
        btn_editar.setText("Editar");
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });

        btn_grabar.setBackground(new java.awt.Color(255, 255, 255));
        btn_grabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/grabar.png"))); // NOI18N
        btn_grabar.setText("Grabar");
        btn_grabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_grabarActionPerformed(evt);
            }
        });

        btn_cancelar.setBackground(new java.awt.Color(255, 255, 255));
        btn_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/cancelar.png"))); // NOI18N
        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        btn_salir.setBackground(new java.awt.Color(255, 255, 255));
        btn_salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/atras5.png"))); // NOI18N
        btn_salir.setText("Salir");
        btn_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salirActionPerformed(evt);
            }
        });

        btn_nuevo.setBackground(new java.awt.Color(255, 255, 255));
        btn_nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/agregar.png"))); // NOI18N
        btn_nuevo.setText("Nuevo");
        btn_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_nuevo)
                .addGap(5, 5, 5)
                .addComponent(btn_editar)
                .addGap(5, 5, 5)
                .addComponent(btn_grabar)
                .addGap(5, 5, 5)
                .addComponent(btn_cancelar)
                .addGap(5, 5, 5)
                .addComponent(btn_salir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btn_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_editar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_grabar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setPreferredSize(new java.awt.Dimension(100, 130));

        jLabel22.setText("Precio :");

        txt_precio.setEditable(false);
        txt_precio.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_precioFocusGained(evt);
            }
        });
        txt_precio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_precioActionPerformed(evt);
            }
        });
        txt_precio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_precioKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_precioKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_precioKeyTyped(evt);
            }
        });

        txt_efectivo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_efectivoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_efectivoFocusLost(evt);
            }
        });
        txt_efectivo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_efectivoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_efectivoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_efectivoKeyTyped(evt);
            }
        });

        jLabel23.setText("Efectivo :");

        txt_entregado.setEditable(false);
        txt_entregado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_entregadoFocusGained(evt);
            }
        });

        jLabel25.setText("Entregado :");

        txt_diferencia.setEditable(false);

        jLabel26.setText("Diferencia :");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel23))
                                .addGap(27, 27, 27))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addGap(16, 16, 16)))
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txt_entregado, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                            .addComponent(txt_precio, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_efectivo, javax.swing.GroupLayout.Alignment.LEADING)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addGap(16, 16, 16)
                        .addComponent(txt_diferencia)))
                .addGap(24, 24, 24))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(txt_precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_efectivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_entregado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_diferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(95, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(112, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/atras.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(8, 175, 178));
        jLabel3.setText("Cobros");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.setPreferredSize(new java.awt.Dimension(337, 174));

        jLabel20.setText("Tarjeta y Cheque :");

        btn_agregar_detalle.setBackground(new java.awt.Color(255, 255, 255));
        btn_agregar_detalle.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/derecha1.png"))); // NOI18N
        btn_agregar_detalle.setText("IR");
        btn_agregar_detalle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregar_detalleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel20)
                .addGap(34, 34, 34)
                .addComponent(btn_agregar_detalle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_agregar_detalle)
                    .addComponent(jLabel20))
                .addGap(32, 32, 32))
        );

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));
        jPanel14.setPreferredSize(new java.awt.Dimension(100, 130));

        jLabel4.setText("Codigo :");

        txt_codigo.setEditable(false);
        txt_codigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_codigoFocusGained(evt);
            }
        });
        txt_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_codigoActionPerformed(evt);
            }
        });
        txt_codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_codigoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_codigoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_codigoKeyTyped(evt);
            }
        });

        btn_estadia.setBackground(new java.awt.Color(255, 255, 255));
        btn_estadia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/buscar3.png"))); // NOI18N
        btn_estadia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_estadiaesActionPerformed(evt);
            }
        });

        btn_estadia2.setBackground(new java.awt.Color(255, 255, 255));
        btn_estadia2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/buscar3.png"))); // NOI18N
        btn_estadia2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_estadia2esActionPerformed(evt);
            }
        });

        txt_apertura.setEditable(false);
        txt_apertura.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_aperturaFocusGained(evt);
            }
        });
        txt_apertura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_aperturaActionPerformed(evt);
            }
        });
        txt_apertura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_aperturaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_aperturaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_aperturaKeyTyped(evt);
            }
        });

        jLabel6.setText("Apertura :");

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                        .addComponent(txt_apertura, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_estadia2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel14Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_estadia, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(36, 36, 36))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addComponent(btn_estadia, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_apertura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6))
                    .addComponent(btn_estadia2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(64, Short.MAX_VALUE))
        );

        jPanel15.setBackground(new java.awt.Color(255, 255, 255));
        jPanel15.setPreferredSize(new java.awt.Dimension(100, 130));

        jLabel24.setText("Fecha :");

        jDateChooser.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser.setEnabled(false);

        txt_cuenta_a_cobrar.setEditable(false);
        txt_cuenta_a_cobrar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_cuenta_a_cobrarFocusGained(evt);
            }
        });
        txt_cuenta_a_cobrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_cuenta_a_cobrarActionPerformed(evt);
            }
        });
        txt_cuenta_a_cobrar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_cuenta_a_cobrarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_cuenta_a_cobrarKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_cuenta_a_cobrarKeyTyped(evt);
            }
        });

        btn_estadia1.setBackground(new java.awt.Color(255, 255, 255));
        btn_estadia1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/buscar3.png"))); // NOI18N
        btn_estadia1.setEnabled(false);
        btn_estadia1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_estadia1esActionPerformed(evt);
            }
        });

        jLabel5.setText("C. A Cobrar :");

        jLabel16.setText("Estado :");

        combo_estado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_estado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_estadoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                combo_estadoFocusLost(evt);
            }
        });
        combo_estado.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_estadoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_estado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_estadoKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(jLabel5)
                    .addComponent(jLabel16))
                .addGap(30, 30, 30)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(combo_estado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(txt_cuenta_a_cobrar)
                        .addGap(18, 18, 18)
                        .addComponent(btn_estadia1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_cuenta_a_cobrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addComponent(btn_estadia1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addGap(26, 26, 26)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(combo_estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                        .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(93, 93, 93))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(108, 108, 108))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(0, 0, 0)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(40, 40, 40)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 935, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 786, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        cerrar(detalle);
        dispose();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
        banNuevo = 2;
        Botones(true);
        visible(true);
        btn_estadia.setEnabled(false);
        btn_estadia1.setEnabled(false);
    }//GEN-LAST:event_btn_editarActionPerformed

    private void btn_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salirActionPerformed
        cerrar(detalle);
        dispose();
    }//GEN-LAST:event_btn_salirActionPerformed

    private void btn_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nuevoActionPerformed
        banNuevo = 1;
        limpiaTxt();
        Botones(true);
        visible(true);
        btn_editar.setEnabled(false);
        baneditarnuevo = 1;
        btn_estadia.setEnabled(false);
        btn_estadia1.setEnabled(true);
        jDateChooser.setDate(new java.util.Date());
        txt_precio.setText("0");
        txt_entregado.setText("0");
        //txt_efectivo.setText("0");
        txt_diferencia.setText("0");
    }//GEN-LAST:event_btn_nuevoActionPerformed

    private void btn_grabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_grabarActionPerformed

        if (vacio() == false) {

          //  String idoperador = con.BuscaCol("SELECT id FROM operador_turistico WHERE descripcion= '" + combo_operador.getSelectedItem() + "'");
           // String idtipocliente = con.BuscaCol("SELECT id FROM tipo_cliente WHERE descripcion= '" + combo_tipo_cliente.getSelectedItem() + "'");
           // String tipoestadia = con.BuscaCol("SELECT id FROM tipo_estadia WHERE descripcion='" + combo_tipo_estadia.getSelectedItem() + "'");

            
            String estado =  combo_estado.getSelectedItem().toString();
            if(estado.equals("ACTIVA")){
                estado="A";
            }else if(estado.equals("INACTIVA")){
                estado="I";
            }else if(estado.equals("PAGADA")){
                estado="P";
            }

            if (banNuevo == 1) {
                
                if (Long.parseLong(txt_diferencia.getText().replace(".",""))>=0) {
            
                    if (Long.parseLong(txt_diferencia.getText().replace(".",""))>=
                            Long.parseLong('0'+txt_efectivo.getText().replace(".",""))) {
                    
                        
                        
                        JOptionPane.showMessageDialog(null, "Diferencia no puede ser mayor o igual a efectivo ");
                    
                    }else{
                    
                        guardar(estado);
                        btn_cancelar.doClick();
                    
                    }
                    
                }else{
                    
                    JOptionPane.showMessageDialog(null, "Diferencia no puede ser negativa ");
                    
                }
                
                
                
            }
            if (banNuevo == 2) {
             //   editar(idoperador, idtipocliente, tipoestadia, estado);
                btn_cancelar.doClick();
            }
            

        }
    }//GEN-LAST:event_btn_grabarActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        limpiaTxt();
        banNuevo = 0;
        Botones(false);
        cerrar(detalle);
        visible(false);
       // tabla_tarifas.setEnabled(false);
        //cargar_tabla("nombre","");
        baneditarnuevo = 0;
        combos();
        btn_estadia.setEnabled(true);
        btn_estadia1.setEnabled(false);
        f = -1;
        c = -1;
        tabla = null;
        detalle = null;
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void btn_agregar_detalleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregar_detalleActionPerformed
        /*  if (combo_detalle.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una cama");
            combo_detalle.requestFocus();
        } else {
            cargar_camas();
            combo_detalle.requestFocus();
        }*/
        String pasar = "";
        if (banNuevo == 2) {
            pasar = txt_codigo.getText();
        }
        String pasar1 = "";
        if (banNuevo == 1) {
            pasar1 = txt_cuenta_a_cobrar.getText();
        }
        //String idtarifa[]= new String[tabla_tarifas.getRowCount()];
        //if(tabla_tarifas.getRowCount()>0){
          /*  for (int i=0; i<tabla_tarifas.getRowCount();i++){
             idtarifa[i] = tabla_tarifas.getValueAt(i, 0).toString();   
            }*/
        

            if (detalle == null ) {


                    detalle = new movimientos.cobros.detalle_cobros("cobros", pasar, pasar1);
                   // new movimientos.recepcion.detalle_reserva("reserva", pasar, idtarifa).

                menu.llamar_internal(detalle);

            } else {
                mostrar(detalle);
            }
       // }else{
       // JOptionPane.showMessageDialog(null, "Debe seleccionar una tarifa");
        //}
    }//GEN-LAST:event_btn_agregar_detalleActionPerformed

    private void combo_estadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_estadoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_efectivo.requestFocus();
        }
    }//GEN-LAST:event_combo_estadoKeyPressed

    private void combo_estadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_estadoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_estadoFocusLost

    private void combo_estadoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_estadoPopupMenuWillBecomeInvisible
        if (combo_estado.getSelectedIndex() != -1) {
          //  combo_tarifas.requestFocus();
        }
    }//GEN-LAST:event_combo_estadoPopupMenuWillBecomeInvisible

    private void combo_estadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_estadoFocusGained
        combo_estado.showPopup();
    }//GEN-LAST:event_combo_estadoFocusGained

    private void txt_codigoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_codigoFocusGained
      /*  if (baneditarnuevo == 0) {
            Botones(true);
            btn_agregar_detalle.setEnabled(false);
            if (!id_estadia.equals("") && !id_estadia.equals("nada")) {

                traeFila(id_estadia);

                id_estadia = "";

            } else if (id_estadia.equals("nada")) {
                //si es combo que se actualize aca
                id_estadia = "";
                Botones(false);
            }
        }*/
    }//GEN-LAST:event_txt_codigoFocusGained

    private void txt_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_codigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoActionPerformed

    private void txt_codigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoKeyPressed

    private void txt_codigoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoKeyReleased

    private void txt_codigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoKeyTyped

    private void btn_estadiaesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_estadiaesActionPerformed
      //  menu.llamar_internal(new buscadores.buscador_cuentas("cobros"));
    }//GEN-LAST:event_btn_estadiaesActionPerformed

    private void txt_precioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_precioActionPerformed
     
    }//GEN-LAST:event_txt_precioActionPerformed

    private void txt_precioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_precioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
          //  combo_tipo_estadia.requestFocus();
        }
    }//GEN-LAST:event_txt_precioKeyPressed

    private void txt_precioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_precioKeyReleased
//        formato_numeros(txt_precio);
    }//GEN-LAST:event_txt_precioKeyReleased

    private void txt_precioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_precioKeyTyped
        con.validar_campos("numeros", evt);
    }//GEN-LAST:event_txt_precioKeyTyped

    private void txt_precioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_precioFocusGained
       /* if(tabla!=null){
            

                // precio = Integer.parseInt(txt_precio.getText().replace(".", ""));
                
               int cant = 0;
                for(int x=0; x<f;x++){
                 cant+= Integer.parseInt(con.BuscaCol("select datediff('"+tabla[x][2]+"','"+tabla[x][1]+"')"));
                }
                for(int y=0; y<tabla_tarifas.getRowCount();y++){
                    precio += Integer.parseInt(tabla_tarifas.getValueAt(y, 2).toString().replace(".", ""));
                }
                precio = precio * cant;
                txt_precio.setText(num.format(precio));

                precio = 0;
                cant=0;
        }*/
    }//GEN-LAST:event_txt_precioFocusGained

    private void txt_cuenta_a_cobrarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_cuenta_a_cobrarFocusGained
        if (baneditarnuevo == 1) {
           // Botones(true);
            //btn_agregar_detalle.setEnabled(false);
            if (!id_cuenta.equals("") && !id_cuenta.equals("nada")) {

                //traeFila_reserva(id_reserva);

                id_cuenta = "";

            } else if (id_cuenta.equals("nada")) {
                //si es combo que se actualize aca
                id_cuenta = "";
            }
        }
    }//GEN-LAST:event_txt_cuenta_a_cobrarFocusGained

    private void txt_cuenta_a_cobrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_cuenta_a_cobrarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cuenta_a_cobrarActionPerformed

    private void txt_cuenta_a_cobrarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cuenta_a_cobrarKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cuenta_a_cobrarKeyPressed

    private void txt_cuenta_a_cobrarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cuenta_a_cobrarKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cuenta_a_cobrarKeyReleased

    private void txt_cuenta_a_cobrarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cuenta_a_cobrarKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_cuenta_a_cobrarKeyTyped

    private void btn_estadia1esActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_estadia1esActionPerformed
       menu.llamar_internal(new buscadores.buscador_cuentas("cobros"));
    }//GEN-LAST:event_btn_estadia1esActionPerformed

    private void btn_estadia2esActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_estadia2esActionPerformed
    menu.llamar_internal(new buscadores.buscador_apertura("cobros"));
    }//GEN-LAST:event_btn_estadia2esActionPerformed

    private void txt_aperturaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_aperturaFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_aperturaFocusGained

    private void txt_aperturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_aperturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_aperturaActionPerformed

    private void txt_aperturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_aperturaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_aperturaKeyPressed

    private void txt_aperturaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_aperturaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_aperturaKeyReleased

    private void txt_aperturaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_aperturaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_aperturaKeyTyped

    private void txt_entregadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_entregadoFocusGained
          if(tabla!=null){
                // precio = Integer.parseInt(txt_precio.getText().replace(".", ""));
                
               calculaTotales();
        }
          if(tabla1!=null){
                // precio = Integer.parseInt(txt_precio.getText().replace(".", ""));
                
               calculaTotales();
        }if(tabla==null){
                // precio = Integer.parseInt(txt_precio.getText().replace(".", ""));
                
               txt_efectivo.requestFocus();
        }
          if(tabla1==null){
                // precio = Integer.parseInt(txt_precio.getText().replace(".", ""));
                
               txt_efectivo.requestFocus();
        }
    }//GEN-LAST:event_txt_entregadoFocusGained

    private void txt_efectivoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_efectivoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //mensaje si esta vacio el txt if else
            calculaTotales();

        }
    }//GEN-LAST:event_txt_efectivoKeyPressed

    private void txt_efectivoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_efectivoFocusLost
            //mensaje si esta vacio el txt if else
            calculaTotales();

        
    }//GEN-LAST:event_txt_efectivoFocusLost

    private void txt_efectivoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_efectivoKeyTyped
    if(txt_efectivo.getText().length()>=18){
           evt.consume();
           //txt_efectivo.setText(txt_efectivo.getText());
        }
    con.validar_campos("numeros", evt);
    }//GEN-LAST:event_txt_efectivoKeyTyped

    private void txt_efectivoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_efectivoKeyReleased
       calculaTotales();
       formato_numeros(txt_efectivo);
    }//GEN-LAST:event_txt_efectivoKeyReleased

    private void txt_efectivoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_efectivoFocusGained
         calculaTotales();
    }//GEN-LAST:event_txt_efectivoFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_agregar_detalle;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_estadia;
    private javax.swing.JButton btn_estadia1;
    private javax.swing.JButton btn_estadia2;
    private javax.swing.JButton btn_grabar;
    private javax.swing.JButton btn_nuevo;
    private javax.swing.JButton btn_salir;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> combo_estado;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextField txt_apertura;
    private static javax.swing.JTextField txt_codigo;
    private static javax.swing.JTextField txt_cuenta_a_cobrar;
    private javax.swing.JTextField txt_diferencia;
    private static javax.swing.JTextField txt_efectivo;
    private static javax.swing.JTextField txt_entregado;
    private static javax.swing.JTextField txt_precio;
    // End of variables declaration//GEN-END:variables

    private void combos() {
        
        combo_estado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"ACTIVA", "INACTIVA", "PAGADA"}));
        banPais = 1;
        combo_estado.setSelectedIndex(-1);
    }
    
    

    private void cargaCombo(JComboBox cbo, String sql, String columna) {
        try {
            cbo.removeAllItems();
            con.sentencia = con.conexion.createStatement();
            con.resultado = con.sentencia.executeQuery(sql);
            while (con.resultado.next()) {
                if (columna.equals("nombreyapellido")) {
                    cbo.addItem(con.resultado.getString("CONCAT(p.nombre,' ',p.apellido)"));
                } else if (columna.equals("nombre")) {
                    cbo.addItem(con.resultado.getString("nombre"));
                }else if (columna.equals("descripcion")) {
                    cbo.addItem(con.resultado.getString("descripcion"));
                }else if (columna.equals("CONCAT(f.id,'-',tn.descripcion)")) {
                    cbo.addItem(con.resultado.getString("CONCAT(f.id,'-',tn.descripcion)"));
                }


            }
            cbo.setSelectedIndex(-1);
        } catch (SQLException ex) {
            Logger.getLogger(cobros.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void limpiaTxt() {


        txt_precio.setText("");
        txt_apertura.setText("");
        txt_efectivo.setText("");
        txt_entregado.setText("");
        txt_diferencia.setText("");
        txt_precio.setText("");

        txt_codigo.setText("");
        txt_cuenta_a_cobrar.setText("");
        jDateChooser.setDate(null);

       
        combo_estado.setSelectedIndex(-1);
      
        

    }

    private void Botones(boolean b) {
        if (b == true) {
            btn_grabar.setEnabled(true);
            btn_agregar_detalle.setEnabled(true);
            btn_nuevo.setEnabled(false);
            btn_salir.setEnabled(false);
            btn_cancelar.setEnabled(true);
            btn_editar.setEnabled(true);
        } else {
            btn_grabar.setEnabled(false);
            btn_agregar_detalle.setEnabled(false);
            btn_nuevo.setEnabled(true);
            btn_salir.setEnabled(true);
            btn_cancelar.setEnabled(false);
            btn_editar.setEnabled(false);
        }
    }

    private void traeFila(String id) {
    
        try {
            String sql = "SELECT * FROM estadia "
                    + "WHERE id = " + id + " ";
            con.traeQuery(sql);
            String estado="";
            if (con.resultado.next()) {
               // idhabitacion = con.resultado.getInt("id");
                //txt_comentarios.setText(con.resultado.getString("comentarios"));
                
                estado= con.resultado.getString("estado");
                
                if(estado.equals("A")){
                        combo_estado.setSelectedItem("ACTIVA");
                    }else if(estado.equals("I")){
                        combo_estado.setSelectedItem("INACTIVA");
                    }else if(estado.equals("C")){
                        combo_estado.setSelectedItem("CANCELADA");
                    }

                txt_precio.setText(num.format(con.resultado.getInt("precio")));

                jDateChooser.setDate(con.resultado.getDate("fecha"));
               // combo_tipo_estadia.setSelectedItem(con.BuscaCol("SELECT descripcion FROM tipo_estadia WHERE id = " + con.resultado.getString("tipo_estadia_id")));
                //combo_operador.setSelectedItem(con.BuscaCol("SELECT descripcion FROM operador_turistico WHERE id = " + con.resultado.getString("id_operador")));
                //combo_tipo_cliente.setSelectedItem(con.BuscaCol("SELECT descripcion FROM tipo_cliente WHERE id = " + con.resultado.getString("tipo_cliente_id")));
                
                //combo_estado.setSelectedItem(con.BuscaCol("SELECT descripcion FROM habitacion_estado WHERE id = " + con.resultado.getString("estado_id")));
                sql = "SELECT t.id, tn.descripcion, t.precio\n" +
                        "FROM tarifas t\n" +
                        "LEFT JOIN tarifas_nombres tn ON t.tarifas_nombres_id = tn.id\n" +
                        "LEFT JOIN estadia_tarifas r ON r.tarifa_id = t.id\n" +
                        "WHERE r.estadia_id = " + con.resultado.getInt("id") + " ";

             //   t.setRowCount(0);
                con.sentencia = con.conexion.createStatement();
                con.resultado = con.sentencia.executeQuery(sql);
                while (con.resultado.next()) {
                   /* t.addRow(new Object[]{con.resultado.getInt("t.id"),
                        con.resultado.getString("tn.descripcion"),
                        con.resultado.getString("t.precio")});*/

                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(cobros.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    
    private void traeFila_reserva(String id) {
    
        try {
            String sql = "SELECT * FROM reservas "
                    + "WHERE id = " + id + " ";
            con.traeQuery(sql);
            String estado="";
            if (con.resultado.next()) {
               // idhabitacion = con.resultado.getInt("id");
              //  txt_comentarios.setText(con.resultado.getString("comentarios"));
                
                estado= con.resultado.getString("estado");
                
                if(estado.equals("A")){
                        combo_estado.setSelectedItem("ACTIVA");
                    }else if(estado.equals("I")){
                        combo_estado.setSelectedItem("INACTIVA");
                    }else if(estado.equals("C")){
                        combo_estado.setSelectedItem("CANCELADA");
                    }

                txt_precio.setText(num.format(con.resultado.getInt("precio")));

                //jDateChooser.setDate(con.resultado.getDate("fecha"));
                //combo_tipo_reserva.setSelectedItem(con.BuscaCol("SELECT descripcion FROM tipo_ WHERE id = " + con.resultado.getString("tipo_reserva_id")));
              //  combo_operador.setSelectedItem(con.BuscaCol("SELECT descripcion FROM operador_turistico WHERE id = " + con.resultado.getString("id_operador")));
              //  combo_tipo_cliente.setSelectedItem(con.BuscaCol("SELECT descripcion FROM tipo_cliente WHERE id = " + con.resultado.getString("tipo_cliente_id")));
                
                //combo_estado.setSelectedItem(con.BuscaCol("SELECT descripcion FROM habitacion_estado WHERE id = " + con.resultado.getString("estado_id")));
                sql = "SELECT t.id, tn.descripcion, t.precio\n" +
                        "FROM tarifas t\n" +
                        "LEFT JOIN tarifas_nombres tn ON t.tarifas_nombres_id = tn.id\n" +
                        "LEFT JOIN reserva_tarifas r ON r.id_tarifa = t.id\n" +
                        "WHERE r.id_reserva = " + con.resultado.getInt("id") + " ";

               // t.setRowCount(0);
                con.sentencia = con.conexion.createStatement();
                con.resultado = con.sentencia.executeQuery(sql);
                while (con.resultado.next()) {
                   /* t.addRow(new Object[]{con.resultado.getInt("t.id"),
                        con.resultado.getString("tn.descripcion"),
                        con.resultado.getString("t.precio")});
                    */
                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(reserva.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void guardar(String estado) {
        try {
            String sql = "INSERT INTO cobros "
                    + "(fecha,cuentas_a_cobrar_id,apertura_cierre_id,usuario_id,estado) "
                    + "VALUES ('" + con.fechaymd(jDateChooser.getDate()) + "'," + txt_cuenta_a_cobrar.getText() + ", "
                    + " "+txt_apertura.getText()+" , 1 ,'" + estado + "' ) ";
            System.out.println(sql);
            con.actualiza(sql);

            sql = "SELECT LAST_INSERT_ID()";
            con.traeQuery(sql);
            String id = "";
            if (con.resultado.next()) {
                id = con.resultado.getString(1);
            }
            
            if(!txt_efectivo.getText().replace(".","").trim().isEmpty() && 
                    Long.parseLong(txt_efectivo.getText().replace(".","").trim())>0){
                
                long pre_efec = Long.parseLong(txt_efectivo.getText().replace(".", "")) - 
                        Integer.parseInt(txt_diferencia.getText().replace(".", ""));
                
                sql = " Insert into cobro_efectivo (monto, cobrosid) "
                        + "values ("+ pre_efec +", "
                        + " " + id + ")";
                System.out.println(sql);
                con.actualiza2(sql);
                
                
            }
            
            sql = "UPDATE cuentas_a_cobrar "
                    + "SET estado='P'"
                    + "where id = "+txt_cuenta_a_cobrar.getText()+" ";
                System.out.println(sql);
                con.actualiza2(sql);
            
            
           
           
               if(tabla!=null){
                   
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into cobro_cheque (cobrosid,identidad,numero,emision,vencimiento,monto,titular) "
                            + "values ( " + id + ", "
                            + " " + tabla[f1][0] + ", " + tabla[f1][3] + ", '" + tabla[f1][4] + "', "
                            + "'" + tabla[f1][5] + "', " + tabla[f1][2] + ", '" + tabla[f1][1] + "')";

                    System.out.println(sql);
                    con.actualiza2(sql);

                
                }
               }
               
               if(tabla1!=null){
                   
                  for (int f1 = 0; f1 < this.f1; f1++) {

                    sql = " Insert into cobro_tarjeta (cobrosid,monto,ticket,entidad_id,tipo_tarjeta_id,marca_tarjeta_id,serie,procesadora_id) "
                            + "values (" + id + ", " + tabla1[f1][5] + ", " + tabla1[f1][7] + ","
                            + " " + tabla1[f1][2] + ", " + tabla1[f1][1] + ", " + tabla1[f1][0] + ", "
                            + " " + tabla1[f1][6] + ", " + tabla1[f1][3] + " )";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            
               }
                
            
            

            tabla = null;

            f = -1;
            c = -1;
            
            tabla1 = null;

            f1 = -1;
            c1 = -1;

        } catch (SQLException ex) {
            Logger.getLogger(cobros.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /*
    private void editar(String idoperador, String idtipocliente, String tiporeserva, String estado) {
            String sql = "UPDATE estadia  "
                    + "SET id_operador=" + idoperador + ", comentarios='" + txt_comentarios.getText() + "' ,precio='" + txt_precio.getText().replace(".", "") + "',"
                    + "estado='" + estado + "',tipo_cliente_id= " + idtipocliente + ""
                    + " , usuario_id=" + 1 + ", Tipo_estadia_id=" + tiporeserva + ", fecha='" + con.fechaymd(jDateChooser.getDate()) + "'"
                    + "where id = "+txt_codigo.getText()+" ";
            
            System.out.println(sql);
            con.actualiza(sql);
            
            sql="DELETE FROM estadia_tarifas WHERE estadia_id= "+ txt_codigo.getText() +" ";
            
            con.actualiza2(sql);
            
            String id="";
            
            id= txt_codigo.getText();
            
            int cf = t.getRowCount();

            for (int i = 0; i < cf; i++) {

                //if (!tablaCheque.getValueAt(i, 5).toString().trim().equals("")) {
                sql = " Insert into estadia_tarifas (estadia_id, tarifa_id) "
                        + "values (" + id + ", "
                        + " " + tabla_tarifas.getValueAt(i, 0).toString().trim() + ")";
                System.out.println(sql);
                con.actualiza2(sql);
                //}
            }
            
            if(tabla!=null || tabla1!=null){
                
                sql="DELETE FROM estadia_habitaciones WHERE id_estadia = "+ txt_codigo.getText() +" ";
            
                con.actualiza2(sql);
                
                for (int f1 = 0; f1 < f; f1++) {

                    sql = " Insert into estadia_habitaciones (id_estadia,id_habitacion,entrada,salida,hora_entrada,hora_salida) "
                            + "values ( " + id + ", "
                            + " " + tabla[f1][0] + ", '" + tabla[f1][1] + "', '" + tabla[f1][2] + "', '" + tabla[f1][3] + "', '" + tabla[f1][4] + "')";

                    System.out.println(sql);
                    con.actualiza2(sql);

                
                }
                
                sql="DELETE FROM estadia_huespedes WHERE id_estadia = "+ txt_codigo.getText() +" ";
            
                con.actualiza2(sql);
               
               sql="DELETE FROM huespedes WHERE estadia_id = "+ txt_codigo.getText() +" ";
            
                con.actualiza2(sql);
               
                
                for (int f1 = 0; f1 < this.f1; f1++) {

                    sql = " Insert into huespedes (profesion,persona_id,estadia_id) "
                            + "values ('', " + tabla1[f1][0] + "," + id + " )";

                    System.out.println(sql);
                    con.actualiza2(sql);

                
                sql = "SELECT LAST_INSERT_ID()";
                con.traeQuery(sql);
                String id_hues = "";
                try {
                    if (con.resultado.next()) {
                        id_hues = con.resultado.getString(1);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(cobros.class.getName()).log(Level.SEVERE, null, ex);
                }
                

                    sql = " Insert into estadia_huespedes (id_estadia,huespedes_id,habitacion_id) "
                            + "values (" + id + ", " + id_hues + ", " + tabla1[f1][1] + " )";

                    System.out.println(sql);
                    con.actualiza2(sql);

                }

            
               }
                
            
            

            tabla = null;

            f = -1;
            c = -1;
            
            tabla1 = null;

            f1 = -1;
            c1 = -1;
             
    }*/
    
    
    
    private void visible(boolean b) {
        
        combo_estado.setEnabled(b);
       

    }

    private boolean vacio() {

        boolean vacio = false;
        String nombre = "";

        
        if (combo_estado.getSelectedIndex() == -1) {
            nombre = "combo";
            vacio = true;
        }
        
        
        
        

        if (txt_precio.getText().trim().isEmpty() || txt_precio.getText().equals("0")) {
            nombre = "precio";
            vacio = true;
        }
        
        
        if (txt_apertura.getText().trim().isEmpty()) {
            nombre = "apertura";
            vacio = true;
        }

        

        if (jDateChooser.getDate() == null) {
            nombre = "fecha";
            vacio = true;
        }

        if (vacio == true) {

            JOptionPane.showMessageDialog(null, "Debe ingresar " + nombre);

        }

        return vacio;

    }

    long numero;

    private void formato_numeros(JTextField campo) {
        if (!campo.getText().trim().isEmpty()) {
            // System.out.println(campo.getText().length());
            // System.out.println(numero);
            numero = Long.parseLong(campo.getText().replace(".", ""));
            campo.setText(num.format(numero));
            // }
        }
    }

   

  


    static String id_cuenta = "";
    static int precio_cuenta = 0;
    public static void buscador_cuentas(String id, int precio11) {
        if (!id.equals("")) {
            //System.out.println(id);
            id_cuenta = id;
            precio_cuenta = precio11;
            if (!id.equals("nada")) {
                txt_cuenta_a_cobrar.setText(id);
                txt_precio.setText(num.format(precio11));
            }
            txt_efectivo.requestFocus();
        }
    }

    static String tabla[][]=null;
    static int f=-1, c=-1;
    static int precio = 0;

    public static void detalle_cobros(String tabla1[][], int f1, int c1, int precio1) {
            //System.out.println(id);
            f = f1;
            c = c1;
            tabla = tabla1;
            precio= precio1;
               // txt_precio.setText("0");
               // txt_precio.requestFocus();
            
            txt_entregado.requestFocus();
            
            
            /*for (int f2 = 0; f2 < f; f2++) {

                System.out.println(""+tabla[f1][0] + ", " + tabla[f1][2] + ", " + tabla[f1][3] );
           }*/

        

    }
    
    static String tabla1[][];
    static int f1=-1, c1=-1;
    static int precio1 = 0;
    
    public static void detalle_cobros1(String tabla11[][], int f11, int c11, int precio11) {
            //System.out.println(id);
            f1 = f11;
            c1 = c11;
            tabla1 = tabla11;
            precio1=precio11;
            txt_entregado.requestFocus();
           // System.out.println(""+tabla+ precio);
           /* if (txt_precio.getText().equals("")) {
                txt_precio.setText("0");
            }

            if (!txt_precio.getText().equals("")) {

                // precio = Integer.parseInt(txt_precio.getText().replace(".", ""));
                precio = precio + precio1;

                txt_precio.setText(num.format(precio));

                precio = 0;
            }*/
            
            /*for (int f2 = 0; f2 < f; f2++) {

                System.out.println(""+tabla[f1][0] + ", " + tabla[f1][2] + ", " + tabla[f1][3] );
           }*/

        

    }
    
    
    private void calculaTotales() {
        long total = precio + precio1 + Long.parseLong('0' + txt_efectivo.getText().replace(".", ""));
        txt_entregado.setText(num.format(total));
        long diferencia = Long.parseLong(txt_entregado.getText().replace(".", "")) - Integer.parseInt(txt_precio.getText().replace(".", ""));
        txt_diferencia.setText(num.format(diferencia));
    }

    private void mostrar(javax.swing.JInternalFrame j) {
        if (j != null) {
            j.setVisible(true);
            j.moveToFront();
        }
    }

    private void ocultar(javax.swing.JInternalFrame j) {
        if (j != null) {
            j.setVisible(false);
            j.moveToBack();
        }
    }

    private void cerrar(javax.swing.JInternalFrame j) {
        if (j != null) {
            j.dispose();

        }
    }
    
    
    
    static String id_reserva = "";
    public static void buscador_reserva(String id) {
        if (!id.equals("")) {
            //System.out.println(id);
            id_reserva = id;
            if (!id.equals("nada")) {
                txt_cuenta_a_cobrar.setText(id);
            }
            txt_cuenta_a_cobrar.requestFocus();
        }
    }
    
    static String id_apertura = "";
    public static void buscador_apertura(String id) {
        if (!id.equals("")) {
            //System.out.println(id);
            id_apertura = id;
            if (!id.equals("nada")) {
                txt_apertura.setText(id);
            }
            //txt_codigo.requestFocus();
        }
    }

}
