/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package movimientos.cobros;

import movimientos.recepcion.*;
import movimientos.servicios.*;
import referenciales.*;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import menu.menu;

/**
 *
 * @author hpnotebook
 */
public class apertura_cierre extends javax.swing.JInternalFrame {

    conexion.conexion con = new conexion.conexion();
    int banPais, banDepartamento, banNuevo, baneditarnuevo = 0;
    String idPais = "", idDepartamento = "";
    static DecimalFormat num = new DecimalFormat("#,##0");
    SimpleDateFormat fec = new SimpleDateFormat("dd/MM/yyyy");

    movimientos.cobros.detalle_cobros detalle;

    public apertura_cierre() {
        initComponents();
        ((BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        combos();
        visible(false);
        Botones(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        btn_editar = new javax.swing.JButton();
        btn_grabar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();
        btn_salir = new javax.swing.JButton();
        btn_nuevo = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        txt_hora_apertura = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel32 = new javax.swing.JLabel();
        txt_saldo_inicial = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        txt_efectivo = new javax.swing.JTextField();
        txt_hora_cierre = new javax.swing.JTextField();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jLabel33 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        txt_cheque = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        txt_saldo_final = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        txt_tarjeta = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        txt_diferencia = new javax.swing.JTextField();
        txt_saldo_estimado = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txt_codigo = new javax.swing.JTextField();
        btn_estadia = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        combo_cajas = new javax.swing.JComboBox<>();
        btn_tarifas = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(950, 577));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btn_editar.setBackground(new java.awt.Color(255, 255, 255));
        btn_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/editar.png"))); // NOI18N
        btn_editar.setText("Editar");
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });

        btn_grabar.setBackground(new java.awt.Color(255, 255, 255));
        btn_grabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/grabar.png"))); // NOI18N
        btn_grabar.setText("Grabar");
        btn_grabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_grabarActionPerformed(evt);
            }
        });

        btn_cancelar.setBackground(new java.awt.Color(255, 255, 255));
        btn_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/cancelar.png"))); // NOI18N
        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        btn_salir.setBackground(new java.awt.Color(255, 255, 255));
        btn_salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/atras5.png"))); // NOI18N
        btn_salir.setText("Salir");
        btn_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salirActionPerformed(evt);
            }
        });

        btn_nuevo.setBackground(new java.awt.Color(255, 255, 255));
        btn_nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/agregar.png"))); // NOI18N
        btn_nuevo.setText("Nuevo");
        btn_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_nuevo)
                .addGap(5, 5, 5)
                .addComponent(btn_editar)
                .addGap(5, 5, 5)
                .addComponent(btn_grabar)
                .addGap(5, 5, 5)
                .addComponent(btn_cancelar)
                .addGap(5, 5, 5)
                .addComponent(btn_salir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btn_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_editar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_grabar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Apertura", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(8, 175, 178))); // NOI18N

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setPreferredSize(new java.awt.Dimension(100, 130));

        txt_hora_apertura.setEditable(false);
        txt_hora_apertura.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_hora_aperturaFocusLost(evt);
            }
        });
        txt_hora_apertura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_hora_aperturaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_hora_aperturaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_hora_aperturaKeyTyped(evt);
            }
        });

        jLabel23.setText("Hora :");

        jLabel31.setText("Fecha :");

        jDateChooser.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser.setEnabled(false);

        jLabel32.setText("Saldo Inicial :");

        txt_saldo_inicial.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_saldo_inicialFocusLost(evt);
            }
        });
        txt_saldo_inicial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_saldo_inicialKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_saldo_inicialKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_saldo_inicialKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(jLabel31)
                    .addComponent(jLabel32))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_saldo_inicial, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txt_hora_apertura, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(43, 43, 43))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31)
                    .addComponent(jDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_hora_apertura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addGap(15, 15, 15)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_saldo_inicial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/atras.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(8, 175, 178));
        jLabel3.setText("Apertura y cierre de caja");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cierre", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(8, 175, 178))); // NOI18N
        jPanel5.setPreferredSize(new java.awt.Dimension(337, 174));

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setPreferredSize(new java.awt.Dimension(100, 130));

        txt_efectivo.setEditable(false);
        txt_efectivo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_efectivoFocusLost(evt);
            }
        });
        txt_efectivo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_efectivoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_efectivoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_efectivoKeyTyped(evt);
            }
        });

        txt_hora_cierre.setEditable(false);
        txt_hora_cierre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_hora_cierreFocusLost(evt);
            }
        });
        txt_hora_cierre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_hora_cierreKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_hora_cierreKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_hora_cierreKeyTyped(evt);
            }
        });

        jDateChooser1.setBackground(new java.awt.Color(255, 255, 255));
        jDateChooser1.setEnabled(false);

        jLabel33.setText("Fecha :");

        jLabel24.setText("Hora :");

        jLabel34.setText("Total Efectivo :");

        txt_cheque.setEditable(false);
        txt_cheque.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_chequeFocusLost(evt);
            }
        });
        txt_cheque.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_chequeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_chequeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_chequeKeyTyped(evt);
            }
        });

        jLabel35.setText("Total Cheque :");

        txt_saldo_final.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_saldo_finalFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_saldo_finalFocusLost(evt);
            }
        });
        txt_saldo_final.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_saldo_finalKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_saldo_finalKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_saldo_finalKeyTyped(evt);
            }
        });

        jLabel36.setText("Saldo Final :");

        txt_tarjeta.setEditable(false);
        txt_tarjeta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_tarjetaFocusLost(evt);
            }
        });
        txt_tarjeta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_tarjetaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_tarjetaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_tarjetaKeyTyped(evt);
            }
        });

        jLabel37.setText("Total Tarjeta :");

        txt_diferencia.setEditable(false);
        txt_diferencia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_diferenciaFocusLost(evt);
            }
        });
        txt_diferencia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_diferenciaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_diferenciaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_diferenciaKeyTyped(evt);
            }
        });

        txt_saldo_estimado.setEditable(false);
        txt_saldo_estimado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_saldo_estimadoFocusLost(evt);
            }
        });
        txt_saldo_estimado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_saldo_estimadoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_saldo_estimadoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_saldo_estimadoKeyTyped(evt);
            }
        });

        jLabel38.setText("Saldo Estimado :");

        jLabel39.setText("Diferencia :");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel24)
                    .addComponent(jLabel33)
                    .addComponent(jLabel34)
                    .addComponent(jLabel35)
                    .addComponent(jLabel37)
                    .addComponent(jLabel36)
                    .addComponent(jLabel38)
                    .addComponent(jLabel39))
                .addGap(22, 22, 22)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txt_hora_cierre, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_efectivo, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_cheque, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_tarjeta, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_saldo_final, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_saldo_estimado, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_diferencia, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel33)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_hora_cierre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addGap(15, 15, 15)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_efectivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34))
                .addGap(15, 15, 15)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_cheque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35))
                .addGap(15, 15, 15)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_tarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37))
                .addGap(15, 15, 15)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_saldo_final, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel36))
                .addGap(15, 15, 15)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_saldo_estimado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38))
                .addGap(15, 15, 15)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_diferencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel39))
                .addGap(34, 34, 34))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));
        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Caja", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(8, 175, 178))); // NOI18N

        jPanel14.setBackground(new java.awt.Color(255, 255, 255));
        jPanel14.setPreferredSize(new java.awt.Dimension(100, 130));

        jLabel4.setText("Codigo :");

        txt_codigo.setEditable(false);
        txt_codigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_codigoFocusGained(evt);
            }
        });
        txt_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_codigoActionPerformed(evt);
            }
        });
        txt_codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_codigoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_codigoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_codigoKeyTyped(evt);
            }
        });

        btn_estadia.setBackground(new java.awt.Color(255, 255, 255));
        btn_estadia.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/buscar3.png"))); // NOI18N
        btn_estadia.setEnabled(false);
        btn_estadia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_estadiaesActionPerformed(evt);
            }
        });

        jLabel19.setText("Caja :");

        combo_cajas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_cajas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_cajasFocusGained(evt);
            }
        });
        combo_cajas.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_cajasPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_cajas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_cajasActionPerformed(evt);
            }
        });
        combo_cajas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_cajasKeyPressed(evt);
            }
        });

        btn_tarifas.setBackground(new java.awt.Color(255, 255, 255));
        btn_tarifas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/buscar3.png"))); // NOI18N
        btn_tarifas.setEnabled(false);
        btn_tarifas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tarifasesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_codigo)
                    .addComponent(combo_cajas, 0, 190, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btn_estadia, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel14Layout.createSequentialGroup()
                    .addGap(292, 292, 292)
                    .addComponent(btn_tarifas, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(35, Short.MAX_VALUE)))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addComponent(btn_estadia, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_cajas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addContainerGap(37, Short.MAX_VALUE))
            .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel14Layout.createSequentialGroup()
                    .addGap(62, 62, 62)
                    .addComponent(btn_tarifas, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(24, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(108, 108, 108))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 370, Short.MAX_VALUE)
                .addGap(93, 93, 93))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(10, 10, 10)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 382, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 935, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 786, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        cerrar(detalle);
        dispose();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
      //  if (txt_codigo.getText().equals("")) {
            
      //     JOptionPane.showMessageDialog(null, "Debe ingresar codigo ");
            
      // }else{
         
        banNuevo = 2;
        Botones(true);
        visible(true);
        btn_estadia.setEnabled(true);
        txt_saldo_inicial.setEnabled(false);
        jDateChooser1.setDate(new java.util.Date());
        txt_hora_cierre.setText(con.horahms(new java.util.Date()));
//        carga_totales();
        combo_cajas.setEnabled(false);
     //   }
    }//GEN-LAST:event_btn_editarActionPerformed

    private void btn_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salirActionPerformed
        cerrar(detalle);
        dispose();
    }//GEN-LAST:event_btn_salirActionPerformed

    private void btn_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nuevoActionPerformed
        banNuevo = 1;
        limpiaTxt();
        Botones(true);
        visible(true);
        btn_editar.setEnabled(false);
        baneditarnuevo = 1;
        btn_estadia.setEnabled(false);
        jDateChooser.setDate(new java.util.Date());
        
       txt_hora_apertura.setText(con.horahms(new java.util.Date()));
    }//GEN-LAST:event_btn_nuevoActionPerformed

    private void btn_grabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_grabarActionPerformed

        if (vacio() == false) {

            String idcaja = con.capturavalorcombo(combo_cajas);
           // String idtipocliente = con.BuscaCol("SELECT id FROM tipo_cliente WHERE descripcion= '" + combo_tipo_cliente.getSelectedItem() + "'");
           // String tipoestadia = con.BuscaCol("SELECT id FROM tipo_estadia WHERE descripcion='" + combo_tipo_estadia.getSelectedItem() + "'");

            
           String var="";

            if (banNuevo == 1) {
                
                var = con.BuscaCol("SELECT a.id\n" +
                                    "FROM apertura_cierre a\n" +
                                    "LEFT JOIN caja c ON c.id = a.caja_id\n" +
                                    "WHERE a.fecha_cierre = '0001-01-01' AND c.id = "+con.capturavalorcombo(combo_cajas)+" ");
                
                if(var.equals("")){
                    
                    guardar(idcaja);
                    btn_cancelar.doClick();
                    
                }else{
                    
                    JOptionPane.showMessageDialog(null, "La caja ya tiene una apertura ");
                    
                }
                
                
                
            }
            if (banNuevo == 2) {
                
                
                if (txt_saldo_final.getText().trim().isEmpty() || txt_saldo_final.getText().equals("0")) {
                    JOptionPane.showMessageDialog(null, "Debe cargar saldo final ");
                }else{
                    
                    editar(idcaja);
                    btn_cancelar.doClick();
                    
                }
                
                
            }
            

        }
    }//GEN-LAST:event_btn_grabarActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        limpiaTxt();
        banNuevo = 0;
        Botones(false);
        cerrar(detalle);
        visible(false);
       // tabla_tarifas.setEnabled(false);
        //cargar_tabla("nombre","");
        baneditarnuevo = 0;
        combos();
        btn_estadia.setEnabled(true);
        //btn_estadia1.setEnabled(false);
        f = -1;
        c = -1;
        tabla = null;
        detalle = null;
        combo_cajas.setEnabled(true);
        btn_editar.setEnabled(true);
        txt_saldo_inicial.setEnabled(true);
        txt_codigo.setEnabled(true);
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void txt_codigoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_codigoFocusGained
        if (banNuevo == 2) {
            
            if (!id_apertura.equals("") && !id_apertura.equals("nada")) {
                Botones(true);
                btn_cancelar.setEnabled(true);
                //traeFila(id_apertura);
                carga_totales();
                id_apertura = "";

            } else if (id_apertura.equals("nada")) {
                //si es combo que se actualize aca
                id_apertura = "";
                Botones(false);
                btn_cancelar.setEnabled(true);
            }
        }
    }//GEN-LAST:event_txt_codigoFocusGained

    private void txt_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_codigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoActionPerformed
String traefil="";
    private void txt_codigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoKeyPressed
       
    }//GEN-LAST:event_txt_codigoKeyPressed

    private void txt_codigoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoKeyReleased

    private void txt_codigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoKeyTyped
        con.validar_campos("numeros", evt);
    }//GEN-LAST:event_txt_codigoKeyTyped

    private void btn_estadiaesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_estadiaesActionPerformed
        menu.llamar_internal(new buscadores.buscador_apertura("apertura_cierre"));
    }//GEN-LAST:event_btn_estadiaesActionPerformed

    private void txt_hora_aperturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_hora_aperturaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //mensaje si esta vacio el txt if else
       //     calculaTotales();

        }
    }//GEN-LAST:event_txt_hora_aperturaKeyPressed

    private void txt_hora_aperturaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_hora_aperturaFocusLost
            //mensaje si esta vacio el txt if else
       //     calculaTotales();

        
    }//GEN-LAST:event_txt_hora_aperturaFocusLost

    private void txt_hora_aperturaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_hora_aperturaKeyTyped
  
    }//GEN-LAST:event_txt_hora_aperturaKeyTyped

    private void txt_hora_aperturaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_hora_aperturaKeyReleased
//       calculaTotales();
  //     formato_numeros(txt_hora_apertura);
    }//GEN-LAST:event_txt_hora_aperturaKeyReleased

    private void combo_cajasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_cajasFocusGained
        combo_cajas.showPopup();
    }//GEN-LAST:event_combo_cajasFocusGained

    private void combo_cajasPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_cajasPopupMenuWillBecomeInvisible

    }//GEN-LAST:event_combo_cajasPopupMenuWillBecomeInvisible

    private void combo_cajasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_cajasActionPerformed
     /*   if (!id_tarifas.equals("") && !id_tarifas.equals("nada")) {

            cargaCombo(combo_tarifas, "SELECT CONCAT(f.id,'-',tn.descripcion)\n" +
                "FROM tarifas f\n" +
                "LEFT JOIN tarifas_nombres tn ON f.tarifas_nombres_id = tn.id\n" +
                "LEFT JOIN habitaciones h ON f.habitacion_id = h.id\n" +
                "ORDER BY tn.descripcion", "CONCAT(f.id,'-',tn.descripcion)");

            combo_tarifas.setSelectedItem(con.BuscaCol("SELECT CONCAT(f.id,'-',tn.descripcion)\n" +
                "FROM tarifas f\n" +
                "LEFT JOIN tarifas_nombres tn ON f.tarifas_nombres_id = tn.id\n" +
                "LEFT JOIN habitaciones h ON f.habitacion_id = h.id\n" +
                "WHERE f.id = " + id_tarifas));

        id_tarifas="";

        }else if(id_tarifas.equals("nada")){

            cargaCombo(combo_tarifas, "SELECT CONCAT(f.id,'-',tn.descripcion)\n" +
                "FROM tarifas f\n" +
                "LEFT JOIN tarifas_nombres tn ON f.tarifas_nombres_id = tn.id\n" +
                "LEFT JOIN habitaciones h ON f.habitacion_id = h.id\n" +
                "ORDER BY tn.descripcion", "CONCAT(f.id,'-',tn.descripcion)");

            id_tarifas="";
        }*/
    }//GEN-LAST:event_combo_cajasActionPerformed

    private void combo_cajasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_cajasKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
           // btn_agregar_tarifas.requestFocus();
            //btn_agregar_tarifas.doClick();
        }
    }//GEN-LAST:event_combo_cajasKeyPressed

    private void btn_tarifasesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tarifasesActionPerformed
        menu.llamar_internal(new buscadores.buscador_tarifas("estadia"));
    }//GEN-LAST:event_btn_tarifasesActionPerformed

    private void txt_saldo_inicialFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_saldo_inicialFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_saldo_inicialFocusLost

    private void txt_saldo_inicialKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_saldo_inicialKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_saldo_inicialKeyPressed

    private void txt_saldo_inicialKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_saldo_inicialKeyReleased
       formato_numeros(txt_saldo_inicial);
    }//GEN-LAST:event_txt_saldo_inicialKeyReleased

    private void txt_saldo_inicialKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_saldo_inicialKeyTyped
         if(txt_saldo_inicial.getText().length()>=18){
           evt.consume();
           //txt_efectivo.setText(txt_efectivo.getText());
        }
    con.validar_campos("numeros", evt);
    }//GEN-LAST:event_txt_saldo_inicialKeyTyped

    private void txt_efectivoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_efectivoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_efectivoFocusLost

    private void txt_efectivoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_efectivoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_efectivoKeyPressed

    private void txt_efectivoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_efectivoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_efectivoKeyReleased

    private void txt_efectivoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_efectivoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_efectivoKeyTyped

    private void txt_hora_cierreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_hora_cierreFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_hora_cierreFocusLost

    private void txt_hora_cierreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_hora_cierreKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_hora_cierreKeyPressed

    private void txt_hora_cierreKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_hora_cierreKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_hora_cierreKeyReleased

    private void txt_hora_cierreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_hora_cierreKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_hora_cierreKeyTyped

    private void txt_chequeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_chequeFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_chequeFocusLost

    private void txt_chequeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_chequeKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_chequeKeyPressed

    private void txt_chequeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_chequeKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_chequeKeyReleased

    private void txt_chequeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_chequeKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_chequeKeyTyped

    private void txt_saldo_finalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_saldo_finalFocusLost
            //mensaje si esta vacio el txt if else
            calculaTotales();

        
    }//GEN-LAST:event_txt_saldo_finalFocusLost

    private void txt_saldo_finalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_saldo_finalKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            //mensaje si esta vacio el txt if else
            calculaTotales();

        }
    }//GEN-LAST:event_txt_saldo_finalKeyPressed

    private void txt_saldo_finalKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_saldo_finalKeyReleased
         calculaTotales();
       formato_numeros(txt_saldo_final);
    }//GEN-LAST:event_txt_saldo_finalKeyReleased

    private void txt_saldo_finalKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_saldo_finalKeyTyped
       if(txt_saldo_final.getText().length()>=18){
           evt.consume();
           //txt_efectivo.setText(txt_efectivo.getText());
        }
    con.validar_campos("numeros", evt);
    }//GEN-LAST:event_txt_saldo_finalKeyTyped

    private void txt_tarjetaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_tarjetaFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_tarjetaFocusLost

    private void txt_tarjetaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_tarjetaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_tarjetaKeyPressed

    private void txt_tarjetaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_tarjetaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_tarjetaKeyReleased

    private void txt_tarjetaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_tarjetaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_tarjetaKeyTyped

    private void txt_diferenciaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_diferenciaFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_diferenciaFocusLost

    private void txt_diferenciaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_diferenciaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_diferenciaKeyPressed

    private void txt_diferenciaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_diferenciaKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_diferenciaKeyReleased

    private void txt_diferenciaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_diferenciaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_diferenciaKeyTyped

    private void txt_saldo_estimadoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_saldo_estimadoFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_saldo_estimadoFocusLost

    private void txt_saldo_estimadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_saldo_estimadoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_saldo_estimadoKeyPressed

    private void txt_saldo_estimadoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_saldo_estimadoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_saldo_estimadoKeyReleased

    private void txt_saldo_estimadoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_saldo_estimadoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_saldo_estimadoKeyTyped

    private void txt_saldo_finalFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_saldo_finalFocusGained
            //mensaje si esta vacio el txt if else
            calculaTotales();

        
    }//GEN-LAST:event_txt_saldo_finalFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_estadia;
    private javax.swing.JButton btn_grabar;
    private javax.swing.JButton btn_nuevo;
    private javax.swing.JButton btn_salir;
    private javax.swing.JButton btn_tarifas;
    private javax.swing.ButtonGroup buttonGroup1;
    private static javax.swing.JComboBox<String> combo_cajas;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txt_cheque;
    private static javax.swing.JTextField txt_codigo;
    private javax.swing.JTextField txt_diferencia;
    private javax.swing.JTextField txt_efectivo;
    private javax.swing.JTextField txt_hora_apertura;
    private javax.swing.JTextField txt_hora_cierre;
    private javax.swing.JTextField txt_saldo_estimado;
    private javax.swing.JTextField txt_saldo_final;
    private javax.swing.JTextField txt_saldo_inicial;
    private javax.swing.JTextField txt_tarjeta;
    // End of variables declaration//GEN-END:variables

    private void combos() {
        
      //  combo_estado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"ACTIVA", "INACTIVA", "PAGADA"}));
        banPais = 1;
        //combo_estado.setSelectedIndex(-1);
        cargaCombo(combo_cajas,"select concat(id,'-',descripcion) from caja","concat(id,'-',descripcion)");
    }
    
    

    private void cargaCombo(JComboBox cbo, String sql, String columna) {
        try {
            cbo.removeAllItems();
            con.sentencia = con.conexion.createStatement();
            con.resultado = con.sentencia.executeQuery(sql);
            while (con.resultado.next()) {
                if (columna.equals("concat(id,'-',descripcion)")) {
                    cbo.addItem(con.resultado.getString("concat(id,'-',descripcion)"));
                } else if (columna.equals("nombre")) {
                    cbo.addItem(con.resultado.getString("nombre"));
                }else if (columna.equals("descripcion")) {
                    cbo.addItem(con.resultado.getString("descripcion"));
                }else if (columna.equals("CONCAT(f.id,'-',tn.descripcion)")) {
                    cbo.addItem(con.resultado.getString("CONCAT(f.id,'-',tn.descripcion)"));
                }


            }
            cbo.setSelectedIndex(-1);
        } catch (SQLException ex) {
            Logger.getLogger(apertura_cierre.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void limpiaTxt() {


       // txt_precio.setText("");

        txt_codigo.setText("");
        txt_cheque.setText("");
        txt_diferencia.setText("");
        txt_efectivo.setText("");
        txt_hora_apertura.setText("");
        txt_hora_cierre.setText("");
        txt_saldo_estimado.setText("");
        txt_saldo_final.setText("");
        txt_saldo_inicial.setText("");
        txt_tarjeta.setText("");
       // txt_cuenta_a_cobrar.setText("");
        jDateChooser.setDate(null);
        jDateChooser1.setDate(null);

       
        combo_cajas.setSelectedIndex(-1);
      
        

    }

    private void Botones(boolean b) {
        if (b == true) {
            btn_grabar.setEnabled(true);
            btn_nuevo.setEnabled(false);
            btn_salir.setEnabled(false);
            btn_cancelar.setEnabled(true);
           // btn_editar.setEnabled(true);
        } else {
            btn_grabar.setEnabled(false);
            btn_nuevo.setEnabled(true);
            btn_salir.setEnabled(true);
            btn_cancelar.setEnabled(false);
           // btn_editar.setEnabled(false);
        }
    }

    private void traeFila(String id) {
    
        try {
            String sql = "SELECT * FROM estadia "
                    + "WHERE id = " + id + " ";
            con.traeQuery(sql);
            String estado="";
            if (con.resultado.next()) {
                traefil = "datos";
               // idhabitacion = con.resultado.getInt("id");
                //txt_comentarios.setText(con.resultado.getString("comentarios"));
                
                

               // txt_precio.setText(num.format(con.resultado.getInt("precio")));

               // jDateChooser.setDate(con.resultado.getDate("fecha"));
               // combo_tipo_estadia.setSelectedItem(con.BuscaCol("SELECT descripcion FROM tipo_estadia WHERE id = " + con.resultado.getString("tipo_estadia_id")));
                //combo_operador.setSelectedItem(con.BuscaCol("SELECT descripcion FROM operador_turistico WHERE id = " + con.resultado.getString("id_operador")));
                //combo_tipo_cliente.setSelectedItem(con.BuscaCol("SELECT descripcion FROM tipo_cliente WHERE id = " + con.resultado.getString("tipo_cliente_id")));
                
                //combo_estado.setSelectedItem(con.BuscaCol("SELECT descripcion FROM habitacion_estado WHERE id = " + con.resultado.getString("estado_id")));
                sql = "SELECT t.id, tn.descripcion, t.precio\n" +
                        "FROM tarifas t\n" +
                        "LEFT JOIN tarifas_nombres tn ON t.tarifas_nombres_id = tn.id\n" +
                        "LEFT JOIN estadia_tarifas r ON r.tarifa_id = t.id\n" +
                        "WHERE r.estadia_id = " + con.resultado.getInt("id") + " ";

             //   t.setRowCount(0);
                con.sentencia = con.conexion.createStatement();
                con.resultado = con.sentencia.executeQuery(sql);
                while (con.resultado.next()) {
                   /* t.addRow(new Object[]{con.resultado.getInt("t.id"),
                        con.resultado.getString("tn.descripcion"),
                        con.resultado.getString("t.precio")});*/

                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(apertura_cierre.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    
    private void traeFila_reserva(String id) {
    
        try {
            String sql = "SELECT * FROM reservas "
                    + "WHERE id = " + id + " ";
            con.traeQuery(sql);
            String estado="";
            if (con.resultado.next()) {
               // idhabitacion = con.resultado.getInt("id");
              //  txt_comentarios.setText(con.resultado.getString("comentarios"));
                
              

              //  txt_precio.setText(num.format(con.resultado.getInt("precio")));

                //jDateChooser.setDate(con.resultado.getDate("fecha"));
                //combo_tipo_reserva.setSelectedItem(con.BuscaCol("SELECT descripcion FROM tipo_ WHERE id = " + con.resultado.getString("tipo_reserva_id")));
              //  combo_operador.setSelectedItem(con.BuscaCol("SELECT descripcion FROM operador_turistico WHERE id = " + con.resultado.getString("id_operador")));
              //  combo_tipo_cliente.setSelectedItem(con.BuscaCol("SELECT descripcion FROM tipo_cliente WHERE id = " + con.resultado.getString("tipo_cliente_id")));
                
                //combo_estado.setSelectedItem(con.BuscaCol("SELECT descripcion FROM habitacion_estado WHERE id = " + con.resultado.getString("estado_id")));
                sql = "SELECT t.id, tn.descripcion, t.precio\n" +
                        "FROM tarifas t\n" +
                        "LEFT JOIN tarifas_nombres tn ON t.tarifas_nombres_id = tn.id\n" +
                        "LEFT JOIN reserva_tarifas r ON r.id_tarifa = t.id\n" +
                        "WHERE r.id_reserva = " + con.resultado.getInt("id") + " ";

               // t.setRowCount(0);
                con.sentencia = con.conexion.createStatement();
                con.resultado = con.sentencia.executeQuery(sql);
                while (con.resultado.next()) {
                   /* t.addRow(new Object[]{con.resultado.getInt("t.id"),
                        con.resultado.getString("tn.descripcion"),
                        con.resultado.getString("t.precio")});
                    */
                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(reserva.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void guardar(String caja) {
        
        
            String sql = "INSERT INTO apertura_cierre "
                    + "(caja_id,fecha_apertura,hora_apertura,fecha_cierre,saldo_inicial,usuario_id) "
                    + "VALUES ("+caja+",'" + con.fechaymd(jDateChooser.getDate()) + "','" + txt_hora_apertura.getText() + "', "
                    + " '0001-01-01' ,"+txt_saldo_inicial.getText().replace(".","")+" , 1  ) ";
            System.out.println(sql);
            con.actualiza(sql);

        

    }

    
    private void editar(String caja) {
            String sql = "UPDATE apertura_cierre  "
                    + "SET fecha_cierre='" + con.fechaymd(jDateChooser1.getDate()) + "', "
                    + "hora_cierre='" + txt_hora_cierre.getText() + "' , "
                    + "saldo_final="+txt_saldo_final.getText().replace(".","")+" "
                    + "where id = "+txt_codigo.getText()+" ";
            
            System.out.println(sql);
            con.actualiza(sql);
            
            
             
    }
    
    
    
    private void visible(boolean b) {
        
      //  combo_estado.setEnabled(b);
       

    }

    private boolean vacio() {

        boolean vacio = false;
        String nombre = "";

        
        if (combo_cajas.getSelectedIndex() == -1) {
            nombre = "cajas";
            vacio = true;
        }
        
        
        
        

        if (txt_saldo_inicial.getText().trim().isEmpty() || txt_saldo_inicial.getText().equals("0")) {
            nombre = "saldo inicial";
            vacio = true;
        }

        
        

        if (vacio == true) {

            JOptionPane.showMessageDialog(null, "Debe ingresar " + nombre);

        }

        return vacio;

    }

    long numero;

    private void formato_numeros(JTextField campo) {
        if (!campo.getText().trim().isEmpty()) {
            // System.out.println(campo.getText().length());
            // System.out.println(numero);
            numero = Long.parseLong(campo.getText().replace(".", ""));
            campo.setText(num.format(numero));
            // }
        }
    }

   

  


    static String id_cuenta = "";
    static int precio_cuenta = 0;
   /* public static void buscador_cuentas(String id, int precio11) {
        if (!id.equals("")) {
            //System.out.println(id);
            id_cuenta = id;
            precio_cuenta = precio11;
            if (!id.equals("nada")) {
                txt_cuenta_a_cobrar.setText(id);
                txt_precio.setText(num.format(precio11));
            }
            txt_precio.requestFocus();
        }
    }*/

    static String tabla[][]=null;
    static int f=-1, c=-1;
    static int precio = 0;

    public static void detalle_cobros(String tabla1[][], int f1, int c1, int precio1) {
            //System.out.println(id);
            f = f1;
            c = c1;
            tabla = tabla1;
            precio= precio1;
               // txt_precio.setText("0");
               // txt_precio.requestFocus();
            
       //     txt_entregado.requestFocus();
            
            
            /*for (int f2 = 0; f2 < f; f2++) {

                System.out.println(""+tabla[f1][0] + ", " + tabla[f1][2] + ", " + tabla[f1][3] );
           }*/

        

    }
    
    static String tabla1[][];
    static int f1=-1, c1=-1;
    static int precio1 = 0;
    
    public static void detalle_cobros1(String tabla11[][], int f11, int c11, int precio11) {
            //System.out.println(id);
            f1 = f11;
            c1 = c11;
            tabla1 = tabla11;
            precio1=precio11;
          //  txt_entregado.requestFocus();
           // System.out.println(""+tabla+ precio);
           /* if (txt_precio.getText().equals("")) {
                txt_precio.setText("0");
            }

            if (!txt_precio.getText().equals("")) {

                // precio = Integer.parseInt(txt_precio.getText().replace(".", ""));
                precio = precio + precio1;

                txt_precio.setText(num.format(precio));

                precio = 0;
            }*/
            
            /*for (int f2 = 0; f2 < f; f2++) {

                System.out.println(""+tabla[f1][0] + ", " + tabla[f1][2] + ", " + tabla[f1][3] );
           }*/

        

    }
    
    
    private void calculaTotales() {
        long total = Long.parseLong('0' + txt_efectivo.getText().replace(".", "")) + 
                Long.parseLong('0' + txt_cheque.getText().replace(".", "")) + 
                Long.parseLong('0' + txt_saldo_inicial.getText().replace(".", "")) + 
                Long.parseLong('0' + txt_tarjeta.getText().replace(".", ""));
        txt_saldo_estimado.setText(num.format(total));
        long diferencia = Long.parseLong('0'+txt_saldo_final.getText().replace(".", "")) - 
                Integer.parseInt('0'+txt_saldo_estimado.getText().replace(".", ""));
        txt_diferencia.setText(num.format(diferencia));
    }

    private void mostrar(javax.swing.JInternalFrame j) {
        if (j != null) {
            j.setVisible(true);
            j.moveToFront();
        }
    }

    private void ocultar(javax.swing.JInternalFrame j) {
        if (j != null) {
            j.setVisible(false);
            j.moveToBack();
        }
    }

    private void cerrar(javax.swing.JInternalFrame j) {
        if (j != null) {
            j.dispose();

        }
    }
    
    
    
    static String id_apertura = "";
    public static void buscador_apertura(String id) {
        if (!id.equals("")) {
            //System.out.println(id);
            id_apertura = id;
            if (!id.equals("nada")) {
                txt_codigo.setText(id);
            }
            txt_codigo.requestFocus();
        }
    }

    private void carga_totales() {
        
        try {
           
            
            String sql="";   
        
        sql = "SELECT SUM(ct.monto)\n" +
                                                "FROM cobro_tarjeta ct\n" +
                                                "LEFT JOIN cobros c ON c.id = ct.cobrosid\n" +
                                                "LEFT JOIN apertura_cierre ac ON ac.id = c.apertura_cierre_id\n" +
                                                "LEFT JOIN caja ca ON ca.id = ac.caja_id\n" +
                                                "WHERE ac.id = "+txt_codigo.getText()+" ";
            con.traeQuery(sql);
            if (con.resultado.next()) {
                txt_tarjeta.setText(num.format(con.resultado.getLong("SUM(ct.monto)")));
            }
        
                
        sql= "SELECT SUM(cc.monto)\n" +
                                                "FROM cobro_cheque cc\n" +
                                                "LEFT JOIN cobros c ON c.id = cc.cobrosid\n" +
                                                "LEFT JOIN apertura_cierre ac ON ac.id = c.apertura_cierre_id\n" +
                                                "LEFT JOIN caja ca ON ca.id = ac.caja_id\n" +
                                                "WHERE ac.id = "+txt_codigo.getText()+" ";
        
        con.traeQuery(sql);
            if (con.resultado.next()) {
                txt_cheque.setText(num.format(con.resultado.getLong("SUM(cc.monto)")));
            }
        
        sql= "SELECT SUM(ce.monto)\n" +
                                                "FROM cobro_efectivo ce\n" +
                                                "LEFT JOIN cobros c ON c.id = ce.cobrosid\n" +
                                                "LEFT JOIN apertura_cierre ac ON ac.id = c.apertura_cierre_id\n" +
                                                "LEFT JOIN caja ca ON ca.id = ac.caja_id\n" +
                                                "WHERE ac.id = "+txt_codigo.getText()+" ";
        
        con.traeQuery(sql);
            if (con.resultado.next()) {
                txt_efectivo.setText(num.format(con.resultado.getLong("SUM(ce.monto)")));
            }
        
        
             sql = "SELECT a.fecha_apertura, a.hora_apertura, a.saldo_inicial,\n" +
                        "CONCAT(a.caja_id,'-',c.descripcion)\n" +
                        "FROM apertura_cierre a\n" +
                        "LEFT JOIN caja c ON c.id = a.caja_id\n" +
                        "WHERE a.id = " + txt_codigo.getText() + " ";
            con.traeQuery(sql);
            String estado="";
            if (con.resultado.next()) {
               // idhabitacion = con.resultado.getInt("id");
                txt_hora_apertura.setText(con.resultado.getString("a.hora_apertura"));
                
                combo_cajas.setSelectedItem(con.resultado.getString("CONCAT(a.caja_id,'-',c.descripcion)"));
                
               txt_saldo_inicial.setText(num.format(con.resultado.getInt("a.saldo_inicial")));

                jDateChooser.setDate(con.resultado.getDate("a.fecha_apertura"));
                //combo_tipo_reserva.setSelectedItem(con.BuscaCol("SELECT descripcion FROM tipo_ WHERE id = " + con.resultado.getString("tipo_reserva_id")));
              //  combo_operador.setSelectedItem(con.BuscaCol("SELECT descripcion FROM operador_turistico WHERE id = " + con.resultado.getString("id_operador")));
              //  combo_tipo_cliente.setSelectedItem(con.BuscaCol("SELECT descripcion FROM tipo_cliente WHERE id = " + con.resultado.getString("tipo_cliente_id")));
                
                //combo_estado.setSelectedItem(con.BuscaCol("SELECT descripcion FROM habitacion_estado WHERE id = " + con.resultado.getString("estado_id")));
               

            }
        } catch (SQLException ex) {
            Logger.getLogger(reserva.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }

}
