/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package referenciales;

import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import menu.menu;

/**
 *
 * @author hpnotebook
 */
public class usuarios extends javax.swing.JInternalFrame {

    conexion.conexion con = new conexion.conexion();
    javax.swing.table.DefaultTableModel t;
    int banPais, banDepartamento, banNuevo , baneditarnuevo= 0;
    String idPais = "", idDepartamento= "";
    DecimalFormat num = new DecimalFormat("#,##0");
    SimpleDateFormat fec = new SimpleDateFormat("dd/MM/yyyy");
    
    public usuarios() {
        initComponents();
        ((BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        t= (javax.swing.table.DefaultTableModel) tabla_usuarios.getModel();
        cargar_tabla("nombre","persona");
        combos();
        visible(false);
        tabla_usuarios.getTableHeader().setReorderingAllowed(false);
        Botones(false);
        jRadioButton1.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_usuarios = new javax.swing.JTable();
        txt_buscar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jRadioButton7 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        btn_editar = new javax.swing.JButton();
        btn_borrar = new javax.swing.JButton();
        btn_grabar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();
        btn_salir = new javax.swing.JButton();
        btn_nuevo = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        combo_empleado = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        txt_usuario = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        txt_contrase√±a = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        combo_nivel_usuario = new javax.swing.JComboBox<>();
        combo_estado = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(950, 539));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tabla_usuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Nombre y Apellido", "Cargo", "C. Empleado", "Usuario", "Nivel", "Estado"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_usuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabla_usuariosMousePressed(evt);
            }
        });
        tabla_usuarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabla_usuariosKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tabla_usuarios);

        txt_buscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_buscarKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_buscarKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_buscarKeyTyped(evt);
            }
        });

        jLabel1.setText("Buscar");

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setText("Nombres");

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Apellidos");

        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setText("Cargo");

        buttonGroup1.add(jRadioButton5);
        jRadioButton5.setText("C. Empleado");

        buttonGroup1.add(jRadioButton6);
        jRadioButton6.setText("Usuario");

        buttonGroup1.add(jRadioButton7);
        jRadioButton7.setText("Nivel");

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Estado");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRadioButton1)
                        .addGap(8, 8, 8)
                        .addComponent(jRadioButton2)
                        .addGap(8, 8, 8)
                        .addComponent(jRadioButton4)
                        .addGap(8, 8, 8)
                        .addComponent(jRadioButton5)
                        .addGap(8, 8, 8)
                        .addComponent(jRadioButton6)
                        .addGap(8, 8, 8)
                        .addComponent(jRadioButton7)
                        .addGap(8, 8, 8)
                        .addComponent(jRadioButton3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_buscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton4)
                    .addComponent(jRadioButton5)
                    .addComponent(jRadioButton6)
                    .addComponent(jRadioButton7)
                    .addComponent(jRadioButton3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btn_editar.setBackground(new java.awt.Color(255, 255, 255));
        btn_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/editar.png"))); // NOI18N
        btn_editar.setText("Editar");
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });

        btn_borrar.setBackground(new java.awt.Color(255, 255, 255));
        btn_borrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/borrar.png"))); // NOI18N
        btn_borrar.setText("Borrar");
        btn_borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_borrarActionPerformed(evt);
            }
        });

        btn_grabar.setBackground(new java.awt.Color(255, 255, 255));
        btn_grabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/grabar.png"))); // NOI18N
        btn_grabar.setText("Grabar");
        btn_grabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_grabarActionPerformed(evt);
            }
        });

        btn_cancelar.setBackground(new java.awt.Color(255, 255, 255));
        btn_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/cancelar.png"))); // NOI18N
        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        btn_salir.setBackground(new java.awt.Color(255, 255, 255));
        btn_salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/atras5.png"))); // NOI18N
        btn_salir.setText("Salir");
        btn_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salirActionPerformed(evt);
            }
        });

        btn_nuevo.setBackground(new java.awt.Color(255, 255, 255));
        btn_nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/agregar.png"))); // NOI18N
        btn_nuevo.setText("Nuevo");
        btn_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_nuevo)
                .addGap(5, 5, 5)
                .addComponent(btn_editar)
                .addGap(5, 5, 5)
                .addComponent(btn_borrar)
                .addGap(5, 5, 5)
                .addComponent(btn_grabar)
                .addGap(5, 5, 5)
                .addComponent(btn_cancelar)
                .addGap(5, 5, 5)
                .addComponent(btn_salir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btn_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_borrar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_editar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_grabar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setPreferredSize(new java.awt.Dimension(100, 130));

        jLabel2.setText("Empleado :");

        combo_empleado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_empleado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_empleadoFocusGained(evt);
            }
        });
        combo_empleado.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_empleadoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_empleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_empleadoActionPerformed(evt);
            }
        });
        combo_empleado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_empleadoKeyPressed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(255, 255, 255));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/buscar3.png"))); // NOI18N
        jButton2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButton2FocusGained(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        txt_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_usuarioActionPerformed(evt);
            }
        });
        txt_usuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_usuarioKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_usuarioKeyTyped(evt);
            }
        });

        jLabel18.setText("Usuario :");

        txt_contrase√±a.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_contrase√±aKeyPressed(evt);
            }
        });

        jLabel5.setText("Contrase√±a :");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(1, 1, 1)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(combo_empleado, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_contrase√±a)
                            .addComponent(txt_usuario, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(combo_empleado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(14, 14, 14)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(14, 14, 14)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_contrase√±a, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap())
        );

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setPreferredSize(new java.awt.Dimension(100, 130));

        jLabel17.setText("N. de Usuario :");

        combo_nivel_usuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_nivel_usuario.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_nivel_usuarioFocusGained(evt);
            }
        });
        combo_nivel_usuario.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_nivel_usuarioPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_nivel_usuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_nivel_usuarioActionPerformed(evt);
            }
        });
        combo_nivel_usuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_nivel_usuarioKeyPressed(evt);
            }
        });

        combo_estado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_estado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_estadoFocusGained(evt);
            }
        });
        combo_estado.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_estadoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_estado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_estadoActionPerformed(evt);
            }
        });
        combo_estado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_estadoKeyPressed(evt);
            }
        });

        jLabel4.setText("Estado :");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(combo_nivel_usuario, 0, 200, Short.MAX_VALUE)
                    .addComponent(combo_estado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(combo_nivel_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/atras.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(8, 175, 178));
        jLabel3.setText("Usuarios");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(108, 108, 108))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(10, 10, 10)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(9, 9, 9)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 935, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 786, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
       banNuevo = 2;
        Botones(true);
        visible(true);
        tabla_usuarios.setEnabled(false);
        baneditarnuevo=1;
        txt_buscar.setEnabled(false); 
    }//GEN-LAST:event_btn_editarActionPerformed

    private void btn_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salirActionPerformed
        dispose(); 
    }//GEN-LAST:event_btn_salirActionPerformed

    private void btn_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nuevoActionPerformed
        banNuevo = 1;
        limpiaTxt();
        Botones(true);
        visible(true);
        btn_editar.setEnabled(false);
        btn_borrar.setEnabled(false);
        baneditarnuevo=1;
        txt_buscar.setEnabled(false);
        combo_empleado.requestFocus();
        jButton2.setEnabled(true);
    }//GEN-LAST:event_btn_nuevoActionPerformed

    private void txt_buscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_buscarKeyReleased
        if(jRadioButton1.isSelected()){
            cargar_tabla("nombre","persona");
        }else if(jRadioButton2.isSelected()){
            cargar_tabla("apellido","persona");
        } else if(jRadioButton4.isSelected()){
            cargar_tabla("descripcion","cargo");
        } else if(jRadioButton5.isSelected()){
            cargar_tabla("codigo_empleado","empleado");
        }else if(jRadioButton6.isSelected()){
            cargar_tabla("usuario","");
        }else if(jRadioButton7.isSelected()){
            cargar_tabla("nivel_usuario","");
        }else if(jRadioButton3.isSelected()){
            cargar_tabla("estado","");
        }
        
    }//GEN-LAST:event_txt_buscarKeyReleased

    private void tabla_usuariosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabla_usuariosKeyReleased
       if(baneditarnuevo==0){
        traeFila();
        Botones(true);
       }
    }//GEN-LAST:event_tabla_usuariosKeyReleased

    private void btn_borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_borrarActionPerformed
        int mensaje = JOptionPane.showConfirmDialog(null, "Desea eliminar el registro", "Atencion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (mensaje == 0) {
            try {
                if (tabla_usuarios.getRowCount() >= 0) {
                    String sql = "DELETE FROM usuarios WHERE id=" + tabla_usuarios.getValueAt(tabla_usuarios.getSelectedRow(), 0).toString() + "";
                    System.out.println(sql);
                    con.actualiza2(sql);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al eliminar" + e);
            }
        }
        btn_cancelar.doClick();
    }//GEN-LAST:event_btn_borrarActionPerformed

    private void btn_grabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_grabarActionPerformed

        if(vacio()==false){
        
        String idEmpleado = con.BuscaCol("SELECT e.id FROM empleado e \n" +
                                         "LEFT JOIN persona p ON e.persona_id = p.id\n" +
                                         "WHERE CONCAT(p.nombre, ' ',p.apellido) = '" + combo_empleado.getSelectedItem() + "'");
        String estado =  combo_estado.getSelectedItem().toString();
        if(estado.equals("Activo")){
            estado="A";
        }else if(estado.equals("Inactivo")){
            estado="I";
        }
        String nivel =  combo_nivel_usuario.getSelectedItem().toString();
        
        if (banNuevo == 1) {
            guardar(idEmpleado, estado, nivel);
        }
        if (banNuevo == 2) {
            editar(idEmpleado, estado, nivel);
        }
        btn_cancelar.doClick();
        
        }
    }//GEN-LAST:event_btn_grabarActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
       limpiaTxt();
        banNuevo = 0;
        Botones(false);
        visible(false);
        tabla_usuarios.setEnabled(true);
        cargar_tabla("nombre","persona");
        baneditarnuevo=0;
        combos();
        txt_buscar.setEnabled(true);
        jRadioButton1.setSelected(true);
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void tabla_usuariosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_usuariosMousePressed
        if(baneditarnuevo==0){
        traeFila();
        Botones(true);
        }
    }//GEN-LAST:event_tabla_usuariosMousePressed

    private void combo_empleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_empleadoActionPerformed
            if (!id_empleados_buscador.equals("") && !id_empleados_buscador.equals("nada")) {
                
                cargaCombo(combo_empleado, "SELECT CONCAT(p.nombre, ' ',p.apellido) FROM persona p\n" +
                                   "RIGHT JOIN empleado e ON e.persona_id = p.id", "empleado");
       
               combo_empleado.setSelectedItem(con.BuscaCol("SELECT CONCAT(p.nombre, ' ',p.apellido) FROM persona p\n" +
                                   "RIGHT JOIN empleado e ON e.persona_id = p.id WHERE e.id = " + id_empleados_buscador));
                
               id_empleados_buscador="";
               
               jButton2.requestFocus();
            }else if(id_empleados_buscador.equals("nada")){
                cargaCombo(combo_empleado, "SELECT CONCAT(p.nombre, ' ',p.apellido) FROM persona p\n" +
                                   "RIGHT JOIN empleado e ON e.persona_id = p.id", "empleado");
                id_empleados_buscador="";
            }
    }//GEN-LAST:event_combo_empleadoActionPerformed

    private void txt_buscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_buscarKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (tabla_usuarios.getRowCount() == 0) {
                JOptionPane.showMessageDialog(null, "No existe ningun registro", "Error", JOptionPane.ERROR_MESSAGE);
                txt_buscar.setText("");
                jRadioButton1.setSelected(true);
            } else {
                
                //comando para seleccionar la primera fila 
                //de la tabla
                tabla_usuarios.getSelectionModel().setSelectionInterval(0, 0);
                //para enviar el cursor a la tabla
                tabla_usuarios.requestFocus();
            }
        }
    }//GEN-LAST:event_txt_buscarKeyPressed

    private void txt_buscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_buscarKeyTyped
        
        
        if(jRadioButton1.isSelected()){
            con.validar_campos(new int[]{39, 126},"letras_y_numeros", evt, new int[]{47, 164, 165, 209, 241});
           // cargar_tabla("nombre","");
        }else if(jRadioButton2.isSelected()){
           // cargar_tabla("apellido","");
           con.validar_campos(new int[]{39, 126},"letras_y_numeros", evt, new int[]{47, 164, 165, 209, 241});
        } else if(jRadioButton3.isSelected()){
            //cargar_tabla("nro_cedula","");
            con.validar_campos(new int[]{39, 126},"letras_y_numeros", evt, new int[]{47, 164, 165, 209, 241});
        } else if(jRadioButton4.isSelected()){
            //cargar_tabla("fecha_nacimiento","fecha");
             con.validar_campos(new int[]{39, 126},"letras_y_numeros", evt, new int[]{47, 164, 165, 209, 241});
        } else if(jRadioButton5.isSelected()){
            //cargar_tabla("fecha_nacimiento","fecha");
             con.validar_campos(new int[]{39, 126},"letras_y_numeros", evt, new int[]{47, 164, 165, 209, 241});
        }else if(jRadioButton6.isSelected()){
            //cargar_tabla("fecha_nacimiento","fecha");
             con.validar_campos(new int[]{39, 126},"letras_y_numeros", evt, new int[]{47, 164, 165, 209, 241});
        }else if(jRadioButton7.isSelected()){
            //cargar_tabla("fecha_nacimiento","fecha");
             con.validar_campos(new int[]{39, 126},"letras_y_numeros", evt, new int[]{47, 164, 165, 209, 241});
        }
        
       
    }//GEN-LAST:event_txt_buscarKeyTyped
    
    private void combo_empleadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_empleadoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            combo_empleado.transferFocus();
        }
    }//GEN-LAST:event_combo_empleadoKeyPressed

    private void combo_empleadoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_empleadoPopupMenuWillBecomeInvisible
        if (combo_empleado.getSelectedIndex()!=-1){
             combo_empleado.transferFocus();
            }
    }//GEN-LAST:event_combo_empleadoPopupMenuWillBecomeInvisible

    private void combo_empleadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_empleadoFocusGained
        combo_empleado.showPopup(); 
    }//GEN-LAST:event_combo_empleadoFocusGained

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        menu.llamar_internal(new buscadores.buscador_empleado("usuario"));
    }//GEN-LAST:event_jButton2ActionPerformed

    private void combo_estadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_estadoFocusGained
       combo_estado.showPopup(); 
    }//GEN-LAST:event_combo_estadoFocusGained

    private void combo_estadoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_estadoPopupMenuWillBecomeInvisible
       if (combo_estado.getSelectedIndex()!=-1){
          
           
            }
    }//GEN-LAST:event_combo_estadoPopupMenuWillBecomeInvisible

    private void combo_estadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_estadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_estadoActionPerformed

    private void combo_estadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_estadoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
          //btn_grabar.requestFocus();
          btn_grabar.doClick();
         //combo_estado.firePopupMenuWillBecomeInvisible();
        }
    }//GEN-LAST:event_combo_estadoKeyPressed

    private void jButton2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButton2FocusGained
        jButton2.transferFocus();
    }//GEN-LAST:event_jButton2FocusGained

    private void txt_usuarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_usuarioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
          txt_contrase√±a.requestFocus();
        }
    }//GEN-LAST:event_txt_usuarioKeyPressed

    private void txt_usuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_usuarioKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_usuarioKeyTyped

    private void txt_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_usuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_usuarioActionPerformed

    private void combo_nivel_usuarioFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_nivel_usuarioFocusGained
        combo_nivel_usuario.showPopup(); 
    }//GEN-LAST:event_combo_nivel_usuarioFocusGained

    private void combo_nivel_usuarioPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_nivel_usuarioPopupMenuWillBecomeInvisible
        if (combo_empleado.getSelectedIndex()!=-1){
             combo_nivel_usuario.transferFocus();
            }
    }//GEN-LAST:event_combo_nivel_usuarioPopupMenuWillBecomeInvisible

    private void combo_nivel_usuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_nivel_usuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_nivel_usuarioActionPerformed

    private void combo_nivel_usuarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_nivel_usuarioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
          combo_estado.requestFocus();
        }
    }//GEN-LAST:event_combo_nivel_usuarioKeyPressed

    private void txt_contrase√±aKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_contrase√±aKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
          combo_nivel_usuario.requestFocus();
        }
    }//GEN-LAST:event_txt_contrase√±aKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_borrar;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_grabar;
    private javax.swing.JButton btn_nuevo;
    private javax.swing.JButton btn_salir;
    private javax.swing.ButtonGroup buttonGroup1;
    private static javax.swing.JComboBox<String> combo_empleado;
    private static javax.swing.JComboBox<String> combo_estado;
    private static javax.swing.JComboBox<String> combo_nivel_usuario;
    private javax.swing.JButton jButton1;
    private static javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabla_usuarios;
    private javax.swing.JTextField txt_buscar;
    private javax.swing.JPasswordField txt_contrase√±a;
    private javax.swing.JTextField txt_usuario;
    // End of variables declaration//GEN-END:variables

    private void cargar_tabla(String buscar, String boton) {
        
        try {
            
            String sql="";
            
            if(boton.equals("")){
            
            sql = "SELECT u.id,p.nombre, p.apellido, e.codigo_empleado, c.descripcion, u.usuario, u.nivel_usuario, u.estado\n" +
                  "FROM usuarios u\n" +
                  "LEFT JOIN empleado e ON u.empleado_id = e.id\n" +
                  "LEFT JOIN persona p ON e.persona_id = p.id\n" +
                  "LEFT JOIN cargo c ON e.cargo_id = c.id\n" +
                   "WHERE u."+buscar+" LIKE '%"+txt_buscar.getText()+"%' ORDER BY id";
            
            }else if(boton.equals("cargo")){
            
            sql = "SELECT u.id,p.nombre, p.apellido, e.codigo_empleado, c.descripcion, u.usuario, u.nivel_usuario, u.estado\n" +
                  "FROM usuarios u\n" +
                  "LEFT JOIN empleado e ON u.empleado_id = e.id\n" +
                  "LEFT JOIN persona p ON e.persona_id = p.id\n" +
                  "LEFT JOIN cargo c ON e.cargo_id = c.id\n" +
                   "WHERE c."+buscar+" LIKE '%"+ txt_buscar.getText()+"%' ORDER BY id";
            }else if(boton.equals("persona")){
            
            sql = "SELECT u.id,p.nombre, p.apellido, e.codigo_empleado, c.descripcion, u.usuario, u.nivel_usuario, u.estado\n" +
                  "FROM usuarios u\n" +
                  "LEFT JOIN empleado e ON u.empleado_id = e.id\n" +
                  "LEFT JOIN persona p ON e.persona_id = p.id\n" +
                  "LEFT JOIN cargo c ON e.cargo_id = c.id\n" +
                   "WHERE p."+buscar+" LIKE '%"+ txt_buscar.getText()+"%' ORDER BY id";
            }else if(boton.equals("empleado")){
            
            sql = "SELECT u.id,p.nombre, p.apellido, e.codigo_empleado, c.descripcion, u.usuario, u.nivel_usuario, u.estado\n" +
                  "FROM usuarios u\n" +
                  "LEFT JOIN empleado e ON u.empleado_id = e.id\n" +
                  "LEFT JOIN persona p ON e.persona_id = p.id\n" +
                  "LEFT JOIN cargo c ON e.cargo_id = c.id\n" +
                   "WHERE e."+buscar+" LIKE '%"+ txt_buscar.getText()+"%' ORDER BY id";
            }
            
            
            
            t.setRowCount(0);
            con.sentencia = con.conexion.createStatement();
            con.resultado = con.sentencia.executeQuery(sql);
            while (con.resultado.next()) {
                t.addRow(new Object[]{con.resultado.getInt("u.id"), 
                    con.resultado.getString("p.nombre")+" "+con.resultado.getString("p.apellido"),
                    //num.format(con.resultado.getInt("p.nro_documento")),
                    con.resultado.getString("c.descripcion")
                    , con.resultado.getString("e.codigo_empleado")
                    , con.resultado.getString("u.usuario")
                    , con.resultado.getString("u.nivel_usuario")
                    , con.resultado.getString("u.estado")});
                
            }  
        
        
        } catch (SQLException ex) {
            Logger.getLogger(usuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
}
    
    
    private void combos() {
        cargaCombo(combo_empleado, "SELECT CONCAT(p.nombre, ' ',p.apellido) FROM persona p\n" +
                                   "RIGHT JOIN empleado e ON e.persona_id = p.id", "empleado");
        combo_estado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activo", "Inactivo" }));
        combo_nivel_usuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ADMIN", "RECEPCION",
            "ENCARGADO DE ALOJAMIENTO", "ENCARGADO DE RESERVA", "GERENTE DE ALOJAMIENTO", 
            "GERENTE DE RESERVA", "ENCARGADO DE FACTURACION", "CAJERO" }));
        banPais = 1;
    }
    
    
    private void cargaCombo(JComboBox cbo, String sql,String tipo) {
        try {
            cbo.removeAllItems();
            con.sentencia = con.conexion.createStatement();
            con.resultado = con.sentencia.executeQuery(sql);
            while (con.resultado.next()) {
                if(tipo.equals("empleado")){
                    cbo.addItem(con.resultado.getString("CONCAT(p.nombre, ' ',p.apellido)"));
                }else if(tipo.equals("")){
                    cbo.addItem(con.resultado.getString("descripcion"));
                }
                
            }
            cbo.setSelectedIndex(-1);
        } catch (SQLException ex) {
            Logger.getLogger(usuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    
    private void limpiaTxt() {
        
        txt_buscar.setText("");
        txt_usuario.setText("");
        txt_contrase√±a.setText("");
        combo_empleado.setSelectedIndex(-1);
        combo_estado.setSelectedIndex(-1);
        combo_nivel_usuario.setSelectedIndex(-1);
        jButton2.setEnabled(false);
        t.setRowCount(0);
    }

    private void Botones(boolean b) {
        if (b == true) {
            btn_grabar.setEnabled(true);
            btn_nuevo.setEnabled(false);
            btn_salir.setEnabled(false);
            btn_cancelar.setEnabled(true);
            btn_editar.setEnabled(true);
            btn_borrar.setEnabled(true);
        } else {
            btn_grabar.setEnabled(false);
            btn_nuevo.setEnabled(true);
            btn_salir.setEnabled(true);
            btn_cancelar.setEnabled(false);
            btn_editar.setEnabled(false);
            btn_borrar.setEnabled(false);
        }
    }

    private void traeFila() {
       
        if (tabla_usuarios.getSelectedRow() >= 0) {
            try {
                String sql = "SELECT * FROM usuarios "
                        + "WHERE id ='" + tabla_usuarios.getValueAt(tabla_usuarios.getSelectedRow(), 0).toString() + "'";
                con.traeQuery(sql);
                String estado="";
                if (con.resultado.next()) {
                   
                    combo_empleado.setSelectedItem(con.BuscaCol("SELECT CONCAT(p.nombre, ' ',p.apellido) FROM persona p\n" +
                                   "RIGHT JOIN empleado e ON e.persona_id = p.id WHERE e.id = " + con.resultado.getString("empleado_id")));
                    combo_nivel_usuario.setSelectedItem(con.resultado.getString("nivel_usuario"));
                    
                    estado= con.resultado.getString("estado");
                    
                    if(estado.equals("A")){
                        combo_estado.setSelectedItem("Activo");
                    }else if(estado.equals("I")){
                        combo_estado.setSelectedItem("Inactivo");
                    }
                    
                    txt_usuario.setText(con.resultado.getString("usuario"));
                    
                }
            } catch (SQLException ex) {
                Logger.getLogger(usuarios.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    

    private void guardar(String idEmpleado,String estado, String nivel) {
        String sql = "INSERT INTO usuarios "
                + "(usuario,pass, estado, nivel_usuario, empleado_id) "
                + "VALUES ('" + txt_usuario.getText() + "',SHA1('" + new String(txt_contrase√±a.getPassword()) + "'), "
                + "'"+estado+"', '"+nivel+"', "+idEmpleado+" ) ";
        System.out.println(sql);
        con.actualiza(sql);
    }

    private void editar(String idEmpleado,String estado, String nivel) {
        String sql = "UPDATE usuarios "
                + "SET usuario='" + txt_usuario.getText() + "',pass=SHA1('" + new String(txt_contrase√±a.getPassword()) + "'), "
                + "estado='" + estado + "', nivel_usuario= '"+nivel+"', empleado_id= "+idEmpleado+" "
                + "WHERE id='" + tabla_usuarios.getValueAt(tabla_usuarios.getSelectedRow(), 0).toString() + "' ";
        System.out.println(sql);
        con.actualiza(sql);
    }
    
    
    

    private void visible(boolean b) {

       
        combo_empleado.setEnabled(b);
        combo_estado.setEnabled(b);
        combo_nivel_usuario.setEnabled(b);
        txt_contrase√±a.setEditable(b);
        txt_usuario.setEditable(b);
        jButton2.setEnabled(b);
    }



    private boolean vacio() {
        
        boolean vacio = false;
        String nombre="";
        
        
        
        if (combo_empleado.getSelectedIndex() == -1) {
                nombre="combo";
                vacio=true;
            }
        
        
        if (combo_estado.getSelectedIndex() == -1) {
                nombre="combo";
                vacio=true;
            }
        
       
        if (combo_nivel_usuario.getSelectedIndex() == -1) {
                nombre="combo";
                vacio=true;
            }
        
        if (txt_usuario.getText().trim().isEmpty()) {
                nombre="usuario";
                vacio=true;
            }
        
        
      
        if (txt_contrase√±a.getPassword().length==0) {
                nombre="contrase√±a";
                vacio=true;
            }
       
        
        if(vacio==true){
        
         JOptionPane.showMessageDialog(null, "Debe ingresar "+nombre);
         
        }
        
        return vacio;
        
    }

    
    
    
    
    
    
    static String id_empleados_buscador="";
    public static void buscador_empleados(String id){
        if (!id.equals("")) {
            //System.out.println(id);
            id_empleados_buscador = id; 
            combo_empleado.setSelectedIndex(-1);
        }
    }
    
   
    

}
