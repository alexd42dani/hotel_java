/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package referenciales;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import menu.menu;

/**
 *
 * @author hpnotebook
 */
public class habitaciones extends javax.swing.JInternalFrame {

    conexion.conexion con = new conexion.conexion();
    javax.swing.table.DefaultTableModel t, t1;
    int banPais, banDepartamento, banNuevo, baneditarnuevo = 0;
    String idPais = "", idDepartamento = "";
    DecimalFormat num = new DecimalFormat("#,##0");
    SimpleDateFormat fec = new SimpleDateFormat("dd/MM/yyyy");

    public habitaciones() {
        initComponents();
        ((BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        t = (javax.swing.table.DefaultTableModel) tabla_caract.getModel();
        t1 = (javax.swing.table.DefaultTableModel) tabla_camas.getModel();
        combos();
        visible(false);
        tabla_caract.getTableHeader().setReorderingAllowed(false);
        tabla_camas.getTableHeader().setReorderingAllowed(false);
        Botones(false);
        t.setRowCount(0);
        t1.setRowCount(0);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_caract = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        combo_caract = new javax.swing.JComboBox<>();
        btn_agregar_carac = new javax.swing.JButton();
        btn_quitar_carac = new javax.swing.JButton();
        txt_cant = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btn_editar = new javax.swing.JButton();
        btn_borrar = new javax.swing.JButton();
        btn_grabar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();
        btn_salir = new javax.swing.JButton();
        btn_nuevo = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        combo_tipo = new javax.swing.JComboBox<>();
        combo_nombre = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        combo_ubicacion = new javax.swing.JComboBox<>();
        txt_codigo = new javax.swing.JTextField();
        btn_habitaciones = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txt_descripcion = new javax.swing.JTextField();
        txt_precio = new javax.swing.JTextField();
        txt_capacidad = new javax.swing.JTextField();
        combo_estado = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tabla_camas = new javax.swing.JTable();
        jLabel20 = new javax.swing.JLabel();
        combo_camas = new javax.swing.JComboBox<>();
        btn_agregar_cama = new javax.swing.JButton();
        btn_quitar_cama = new javax.swing.JButton();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(950, 577));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tabla_caract.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Codigo", "Caracteristica", "Cantidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_caract.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabla_caractMousePressed(evt);
            }
        });
        tabla_caract.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabla_caractKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tabla_caract);

        jLabel19.setText("Caracteristicas :");

        combo_caract.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_caract.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_caractFocusGained(evt);
            }
        });
        combo_caract.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_caractPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_caract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_caractActionPerformed(evt);
            }
        });
        combo_caract.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_caractKeyPressed(evt);
            }
        });

        btn_agregar_carac.setBackground(new java.awt.Color(255, 255, 255));
        btn_agregar_carac.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/mas2.png"))); // NOI18N
        btn_agregar_carac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregar_caracActionPerformed(evt);
            }
        });

        btn_quitar_carac.setBackground(new java.awt.Color(255, 255, 255));
        btn_quitar_carac.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/menos.png"))); // NOI18N
        btn_quitar_carac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_quitar_caracActionPerformed(evt);
            }
        });

        txt_cant.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_cantKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_cantKeyTyped(evt);
            }
        });

        jLabel1.setText("Cant. :");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(combo_caract, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_cant, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_agregar_carac, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_quitar_carac, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(combo_caract, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)
                            .addComponent(txt_cant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_quitar_carac, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_agregar_carac, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btn_editar.setBackground(new java.awt.Color(255, 255, 255));
        btn_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/editar.png"))); // NOI18N
        btn_editar.setText("Editar");
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });

        btn_borrar.setBackground(new java.awt.Color(255, 255, 255));
        btn_borrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/borrar.png"))); // NOI18N
        btn_borrar.setText("Borrar");
        btn_borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_borrarActionPerformed(evt);
            }
        });

        btn_grabar.setBackground(new java.awt.Color(255, 255, 255));
        btn_grabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/grabar.png"))); // NOI18N
        btn_grabar.setText("Grabar");
        btn_grabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_grabarActionPerformed(evt);
            }
        });

        btn_cancelar.setBackground(new java.awt.Color(255, 255, 255));
        btn_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/cancelar.png"))); // NOI18N
        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        btn_salir.setBackground(new java.awt.Color(255, 255, 255));
        btn_salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/atras5.png"))); // NOI18N
        btn_salir.setText("Salir");
        btn_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salirActionPerformed(evt);
            }
        });

        btn_nuevo.setBackground(new java.awt.Color(255, 255, 255));
        btn_nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/agregar.png"))); // NOI18N
        btn_nuevo.setText("Nuevo");
        btn_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_nuevo)
                .addGap(5, 5, 5)
                .addComponent(btn_editar)
                .addGap(5, 5, 5)
                .addComponent(btn_borrar)
                .addGap(5, 5, 5)
                .addComponent(btn_grabar)
                .addGap(5, 5, 5)
                .addComponent(btn_cancelar)
                .addGap(5, 5, 5)
                .addComponent(btn_salir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btn_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_borrar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_editar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_grabar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setPreferredSize(new java.awt.Dimension(100, 130));

        jLabel12.setText("Tipo :");

        jLabel13.setText("Nombre :");

        combo_tipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_tipo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_tipoFocusGained(evt);
            }
        });
        combo_tipo.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_tipoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_tipo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_tipoKeyPressed(evt);
            }
        });

        combo_nombre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_nombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_nombreFocusGained(evt);
            }
        });
        combo_nombre.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_nombrePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_nombreActionPerformed(evt);
            }
        });
        combo_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_nombreKeyPressed(evt);
            }
        });

        jLabel2.setText("Codigo :");

        jLabel18.setText("Ubicacion :");

        combo_ubicacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_ubicacion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_ubicacionFocusGained(evt);
            }
        });
        combo_ubicacion.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_ubicacionPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_ubicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_ubicacionActionPerformed(evt);
            }
        });
        combo_ubicacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_ubicacionKeyPressed(evt);
            }
        });

        txt_codigo.setEditable(false);
        txt_codigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_codigoFocusGained(evt);
            }
        });
        txt_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_codigoActionPerformed(evt);
            }
        });
        txt_codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_codigoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_codigoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_codigoKeyTyped(evt);
            }
        });

        btn_habitaciones.setBackground(new java.awt.Color(255, 255, 255));
        btn_habitaciones.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/buscar3.png"))); // NOI18N
        btn_habitaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_habitacionesesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel2)
                    .addComponent(jLabel18)
                    .addComponent(jLabel12))
                .addGap(9, 9, 9)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(combo_ubicacion, 0, 221, Short.MAX_VALUE)
                    .addComponent(combo_tipo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(combo_nombre, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_codigo))
                .addGap(12, 12, 12)
                .addComponent(btn_habitaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(combo_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(combo_tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12)))
                    .addComponent(btn_habitaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_ubicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setPreferredSize(new java.awt.Dimension(100, 130));

        jLabel15.setText("Precio :");

        jLabel16.setText("Capacidad :");

        jLabel17.setText("Descripcion :");

        txt_descripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_descripcionKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_descripcionKeyTyped(evt);
            }
        });

        txt_precio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_precioActionPerformed(evt);
            }
        });
        txt_precio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_precioKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_precioKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_precioKeyTyped(evt);
            }
        });

        txt_capacidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_capacidadKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_capacidadKeyTyped(evt);
            }
        });

        combo_estado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_estado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_estadoFocusGained(evt);
            }
        });
        combo_estado.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_estadoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_estado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_estadoActionPerformed(evt);
            }
        });
        combo_estado.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_estadoKeyPressed(evt);
            }
        });

        jLabel21.setText("Estado :");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel15)
                    .addComponent(jLabel21))
                .addGap(51, 51, 51)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(combo_estado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txt_descripcion, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(txt_precio)
                    .addComponent(txt_capacidad, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_descripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(10, 10, 10)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txt_capacidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txt_precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/atras.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(8, 175, 178));
        jLabel3.setText("Habitaciones");

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tabla_camas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Codigo", "Cama", "Capacidad"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_camas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabla_camasMousePressed(evt);
            }
        });
        tabla_camas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabla_camasKeyReleased(evt);
            }
        });
        jScrollPane3.setViewportView(tabla_camas);

        jLabel20.setText("Camas :");

        combo_camas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_camas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_camasFocusGained(evt);
            }
        });
        combo_camas.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_camasPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_camas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_camasActionPerformed(evt);
            }
        });
        combo_camas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_camasKeyPressed(evt);
            }
        });

        btn_agregar_cama.setBackground(new java.awt.Color(255, 255, 255));
        btn_agregar_cama.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/mas2.png"))); // NOI18N
        btn_agregar_cama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregar_camaActionPerformed(evt);
            }
        });

        btn_quitar_cama.setBackground(new java.awt.Color(255, 255, 255));
        btn_quitar_cama.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/menos.png"))); // NOI18N
        btn_quitar_cama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_quitar_camaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel20)
                .addGap(18, 18, 18)
                .addComponent(combo_camas, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(btn_agregar_cama, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_quitar_cama, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(combo_camas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel20)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_quitar_cama, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_agregar_cama, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(108, 108, 108))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(93, 93, 93))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 935, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 786, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
        banNuevo = 2;
        Botones(true);
        visible(true);
        btn_habitaciones.setEnabled(false);

    }//GEN-LAST:event_btn_editarActionPerformed

    private void btn_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salirActionPerformed
        dispose();
    }//GEN-LAST:event_btn_salirActionPerformed

    private void btn_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nuevoActionPerformed
        banNuevo = 1;
        limpiaTxt();
        Botones(true);
        visible(true);
        btn_editar.setEnabled(false);
        btn_borrar.setEnabled(false);
        baneditarnuevo = 1;
        combo_nombre.requestFocus();
        btn_habitaciones.setEnabled(false);

    }//GEN-LAST:event_btn_nuevoActionPerformed

    private void tabla_caractKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabla_caractKeyReleased

    }//GEN-LAST:event_tabla_caractKeyReleased

    private void btn_borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_borrarActionPerformed
        int mensaje = JOptionPane.showConfirmDialog(null, "Desea eliminar el registro", "Atencion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (mensaje == 0) {
            try {

                String sql = "DELETE FROM habitacion_camas WHERE habitacion_id=" + txt_codigo.getText() + "";
                con.actualiza2(sql);
                sql = "DELETE FROM habitacion_caracteristicas WHERE id_habitacion=" + txt_codigo.getText() + "";
                con.actualiza2(sql);
                sql = "DELETE FROM habitaciones WHERE id=" + txt_codigo.getText() + "";
                System.out.println(sql);
                con.actualiza2(sql);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al eliminar" + e);
            }
        }
        btn_cancelar.doClick();
    }//GEN-LAST:event_btn_borrarActionPerformed

    private void btn_grabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_grabarActionPerformed

        if (vacio() == false) {

            String idnombre = con.BuscaCol("SELECT id FROM habitacion_nombres WHERE nombre = '" + combo_nombre.getSelectedItem() + "'");
            String idtipo = con.BuscaCol("SELECT id FROM tipos_habitacion WHERE descripcion = '" + combo_tipo.getSelectedItem() + "'");
            String idubicacion = con.BuscaCol("SELECT id FROM ubicaciones WHERE descripcion = '" + combo_ubicacion.getSelectedItem() + "'");
            String idestado = con.BuscaCol("SELECT id FROM habitacion_estado WHERE descripcion = '" + combo_estado.getSelectedItem() + "'");

            if (banNuevo == 1) {
                guardar(idnombre, idtipo, idubicacion, idestado);
            }
            if (banNuevo == 2) {
                   editar(idnombre, idtipo, idubicacion, idestado);
            }
            btn_cancelar.doClick();

        }
    }//GEN-LAST:event_btn_grabarActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
        limpiaTxt();
        banNuevo = 0;
        Botones(false);
        visible(false);
        tabla_caract.setEnabled(true);
        //cargar_tabla("nombre","");
        baneditarnuevo = 0;
        combos();
        btn_habitaciones.setEnabled(true);

    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void tabla_caractMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_caractMousePressed

    }//GEN-LAST:event_tabla_caractMousePressed

    private void combo_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_nombreActionPerformed

    }//GEN-LAST:event_combo_nombreActionPerformed

    private void txt_precioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_precioKeyTyped
        con.validar_campos("numeros", evt);
    }//GEN-LAST:event_txt_precioKeyTyped

    private void txt_descripcionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_descripcionKeyTyped
        con.validar_campos(new int[]{39, 126}, "letras_y_numeros", evt, new int[]{47, 164, 165, 209, 241});
    }//GEN-LAST:event_txt_descripcionKeyTyped

    private void txt_precioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_precioKeyReleased
        formato_numeros(txt_precio);
    }//GEN-LAST:event_txt_precioKeyReleased

    private void txt_precioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_precioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            combo_estado.requestFocus();
        }
    }//GEN-LAST:event_txt_precioKeyPressed

    private void txt_descripcionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_descripcionKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_capacidad.requestFocus();
        }
    }//GEN-LAST:event_txt_descripcionKeyPressed

    private void combo_nombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_nombreKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            combo_nombre.transferFocus();
        }
    }//GEN-LAST:event_combo_nombreKeyPressed

    private void combo_tipoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_tipoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            combo_tipo.transferFocus();
        }
    }//GEN-LAST:event_combo_tipoKeyPressed

    private void combo_nombreFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_nombreFocusGained
        combo_nombre.showPopup();
    }//GEN-LAST:event_combo_nombreFocusGained

    private void combo_tipoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_tipoFocusGained
        combo_tipo.showPopup();
    }//GEN-LAST:event_combo_tipoFocusGained

    private void combo_nombrePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_nombrePopupMenuWillBecomeInvisible
        if (combo_nombre.getSelectedIndex() != -1) {
            combo_nombre.transferFocus();
        }
    }//GEN-LAST:event_combo_nombrePopupMenuWillBecomeInvisible

    private void combo_tipoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_tipoPopupMenuWillBecomeInvisible
        if (combo_tipo.getSelectedIndex() != -1) {
            combo_tipo.transferFocus();
        }
    }//GEN-LAST:event_combo_tipoPopupMenuWillBecomeInvisible

    private void combo_ubicacionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_ubicacionFocusGained
        combo_ubicacion.showPopup();
    }//GEN-LAST:event_combo_ubicacionFocusGained

    private void combo_ubicacionPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_ubicacionPopupMenuWillBecomeInvisible
        if (combo_ubicacion.getSelectedIndex() != -1) {
            txt_descripcion.requestFocus();
        }
    }//GEN-LAST:event_combo_ubicacionPopupMenuWillBecomeInvisible

    private void combo_ubicacionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_ubicacionKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_descripcion.requestFocus();
        }
    }//GEN-LAST:event_combo_ubicacionKeyPressed

    private void txt_codigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoKeyPressed

    private void txt_codigoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoKeyReleased

    private void txt_codigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoKeyTyped

    private void btn_habitacionesesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_habitacionesesActionPerformed
        menu.llamar_internal(new buscadores.buscador_habitaciones("habitaciones"));
    }//GEN-LAST:event_btn_habitacionesesActionPerformed

    private void combo_caractFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_caractFocusGained
        combo_caract.showPopup();
    }//GEN-LAST:event_combo_caractFocusGained

    private void combo_caractPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_caractPopupMenuWillBecomeInvisible

    }//GEN-LAST:event_combo_caractPopupMenuWillBecomeInvisible

    private void combo_caractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_caractActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_caractActionPerformed

    private void combo_caractKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_caractKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            
           txt_cant.requestFocus();
        }
    }//GEN-LAST:event_combo_caractKeyPressed

    private void btn_agregar_caracActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregar_caracActionPerformed
        if (combo_caract.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una caracteristica");
            combo_caract.requestFocus();
        } else if(txt_cant.getText().trim().isEmpty()){
            JOptionPane.showMessageDialog(null, "Cargar cantidad");
            txt_cant.requestFocus();
        } else {
            cargar_caracteristicas();
            combo_caract.requestFocus();
        }


    }//GEN-LAST:event_btn_agregar_caracActionPerformed

    private void txt_precioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_precioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_precioActionPerformed

    private void btn_quitar_caracActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_quitar_caracActionPerformed
        if (tabla_caract.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar por lo menos una fila", "Atencion",
                    JOptionPane.WARNING_MESSAGE);

        } else {
            int mensaje = JOptionPane.showConfirmDialog(null, "Desea eliminar la fila seleccionada", "Atencion",
                    JOptionPane.WARNING_MESSAGE, JOptionPane.QUESTION_MESSAGE);
            if (mensaje == 0) {
                javax.swing.table.DefaultTableModel tab = (javax.swing.table.DefaultTableModel) tabla_caract.getModel();
                tab.removeRow(tabla_caract.getSelectedRow());

            }
            combo_caract.setSelectedIndex(-1);
        }
    }//GEN-LAST:event_btn_quitar_caracActionPerformed

    private void txt_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_codigoActionPerformed

    }//GEN-LAST:event_txt_codigoActionPerformed

    private void txt_codigoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_codigoFocusGained
        if (baneditarnuevo == 0) {
            Botones(true);
            if (!id_habitaciones.equals("") && !id_habitaciones.equals("nada")) {

                traeFila(id_habitaciones);

                id_habitaciones = "";

            } else if (id_habitaciones.equals("nada")) {
                //si es combo que se actualize aca
                id_habitaciones = "";
            }
        }
    }//GEN-LAST:event_txt_codigoFocusGained

    private void combo_ubicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_ubicacionActionPerformed

    }//GEN-LAST:event_combo_ubicacionActionPerformed

    private void tabla_camasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_camasMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_tabla_camasMousePressed

    private void tabla_camasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabla_camasKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_tabla_camasKeyReleased

    private void combo_camasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_camasFocusGained
        combo_camas.showPopup();
    }//GEN-LAST:event_combo_camasFocusGained

    private void combo_camasPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_camasPopupMenuWillBecomeInvisible
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_camasPopupMenuWillBecomeInvisible

    private void combo_camasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_camasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_camasActionPerformed

    private void combo_camasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_camasKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btn_agregar_cama.requestFocus();
            btn_agregar_cama.doClick();
        }
    }//GEN-LAST:event_combo_camasKeyPressed

    private void btn_agregar_camaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregar_camaActionPerformed
         if (combo_camas.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una cama");
            combo_camas.requestFocus();
        } else {
            cargar_camas();
            combo_camas.requestFocus();
        }
    }//GEN-LAST:event_btn_agregar_camaActionPerformed

    private void btn_quitar_camaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_quitar_camaActionPerformed
        if (tabla_camas.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar por lo menos una fila", "Atencion",
                    JOptionPane.WARNING_MESSAGE);

        } else {
            int mensaje = JOptionPane.showConfirmDialog(null, "Desea eliminar la fila seleccionada", "Atencion",
                    JOptionPane.WARNING_MESSAGE, JOptionPane.QUESTION_MESSAGE);
            if (mensaje == 0) {
                javax.swing.table.DefaultTableModel tab = (javax.swing.table.DefaultTableModel) tabla_camas.getModel();
                tab.removeRow(tabla_camas.getSelectedRow());

            }
            combo_camas.setSelectedIndex(-1);
        }
    }//GEN-LAST:event_btn_quitar_camaActionPerformed

    private void txt_capacidadKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_capacidadKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_precio.requestFocus();
        }
    }//GEN-LAST:event_txt_capacidadKeyPressed

    private void txt_capacidadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_capacidadKeyTyped
        con.validar_campos("numeros", evt);
    }//GEN-LAST:event_txt_capacidadKeyTyped

    private void combo_estadoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_estadoFocusGained
        combo_estado.showPopup();
    }//GEN-LAST:event_combo_estadoFocusGained

    private void combo_estadoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_estadoPopupMenuWillBecomeInvisible
        if (combo_estado.getSelectedIndex() != -1) {
            combo_caract.requestFocus();
        }
    }//GEN-LAST:event_combo_estadoPopupMenuWillBecomeInvisible

    private void combo_estadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_estadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_estadoActionPerformed

    private void combo_estadoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_estadoKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            combo_caract.requestFocus();
        }
    }//GEN-LAST:event_combo_estadoKeyPressed

    private void txt_cantKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cantKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btn_agregar_carac.doClick();
        }
    }//GEN-LAST:event_txt_cantKeyPressed

    private void txt_cantKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cantKeyTyped
        con.validar_campos("numeros", evt);
    }//GEN-LAST:event_txt_cantKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_agregar_cama;
    private javax.swing.JButton btn_agregar_carac;
    private javax.swing.JButton btn_borrar;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_grabar;
    private javax.swing.JButton btn_habitaciones;
    private javax.swing.JButton btn_nuevo;
    private javax.swing.JButton btn_quitar_cama;
    private javax.swing.JButton btn_quitar_carac;
    private javax.swing.JButton btn_salir;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> combo_camas;
    private javax.swing.JComboBox<String> combo_caract;
    private javax.swing.JComboBox<String> combo_estado;
    private javax.swing.JComboBox<String> combo_nombre;
    private javax.swing.JComboBox<String> combo_tipo;
    private static javax.swing.JComboBox<String> combo_ubicacion;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable tabla_camas;
    private javax.swing.JTable tabla_caract;
    private javax.swing.JTextField txt_cant;
    private javax.swing.JTextField txt_capacidad;
    private static javax.swing.JTextField txt_codigo;
    private javax.swing.JTextField txt_descripcion;
    private javax.swing.JTextField txt_precio;
    // End of variables declaration//GEN-END:variables

    private void combos() {
        cargaCombo(combo_nombre, "SELECT nombre FROM habitacion_nombres ORDER BY nombre", "nombre");
        // cargaCombo(combo_pais, "SELECT descripcion FROM pais ORDER BY descripcion");
        cargaCombo(combo_tipo, "SELECT descripcion FROM tipos_habitacion ORDER BY descripcion", "descripcion");
        cargaCombo(combo_ubicacion, "SELECT descripcion FROM ubicaciones ORDER BY descripcion", "descripcion");
        cargaCombo(combo_estado, "SELECT descripcion FROM habitacion_estado ORDER BY descripcion", "descripcion");
        cargaCombo(combo_camas, "SELECT descripcion FROM cama ORDER BY descripcion", "descripcion");
        cargaCombo(combo_caract, "SELECT descripcion FROM caracteristicas ORDER BY descripcion", "descripcion");
        banPais = 1;
    }

    private void cargaCombo(JComboBox cbo, String sql, String columna) {
        try {
            cbo.removeAllItems();
            con.sentencia = con.conexion.createStatement();
            con.resultado = con.sentencia.executeQuery(sql);
            while (con.resultado.next()) {
                if (columna.equals("descripcion")) {
                    cbo.addItem(con.resultado.getString("descripcion"));
                } else if (columna.equals("nombre")) {
                    cbo.addItem(con.resultado.getString("nombre"));
                }

            }
            cbo.setSelectedIndex(-1);
        } catch (SQLException ex) {
            Logger.getLogger(habitaciones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void limpiaTxt() {
        txt_capacidad.setText("");
        txt_descripcion.setText("");

        txt_precio.setText("");

        txt_codigo.setText("");
        combo_tipo.setSelectedIndex(-1);
        combo_nombre.setSelectedIndex(-1);
        combo_caract.setSelectedIndex(-1);

        combo_ubicacion.setSelectedIndex(-1);
        combo_estado.setSelectedIndex(-1);
        combo_camas.setSelectedIndex(-1);

        t.setRowCount(0);
        t1.setRowCount(0);
    }

    private void Botones(boolean b) {
        if (b == true) {
            btn_grabar.setEnabled(true);
            btn_nuevo.setEnabled(false);
            btn_salir.setEnabled(false);
            btn_cancelar.setEnabled(true);
            btn_editar.setEnabled(true);
            btn_borrar.setEnabled(true);
        } else {
            btn_grabar.setEnabled(false);
            btn_nuevo.setEnabled(true);
            btn_salir.setEnabled(true);
            btn_cancelar.setEnabled(false);
            btn_editar.setEnabled(false);
            btn_borrar.setEnabled(false);
        }
    }

    private void traeFila(String id) {
        int idhabitacion;

        try {
            String sql = "SELECT * FROM habitaciones "
                    + "WHERE id = " + id + " ";
            con.traeQuery(sql);
            if (con.resultado.next()) {
                idhabitacion = con.resultado.getInt("id");
                txt_descripcion.setText(con.resultado.getString("descripcion"));
                txt_capacidad.setText(con.resultado.getString("capacidad"));

                txt_precio.setText(num.format(con.resultado.getInt("precio")));

                combo_ubicacion.setSelectedItem(con.BuscaCol("SELECT descripcion FROM ubicaciones WHERE id = " + con.resultado.getString("id_ubicacion")));
                combo_tipo.setSelectedItem(con.BuscaCol("SELECT descripcion FROM tipos_habitacion WHERE id = " + con.resultado.getString("id_tipo_hab")));
                combo_nombre.setSelectedItem(con.BuscaCol("SELECT nombre FROM habitacion_nombres WHERE id = " + con.resultado.getString("nombre_id")));
                combo_estado.setSelectedItem(con.BuscaCol("SELECT descripcion FROM habitacion_estado WHERE id = " + con.resultado.getString("estado_id")));

                sql = "SELECT c.id, c.descripcion, h.cantidad\n" +
                        "FROM habitacion_caracteristicas h\n" +
                        "LEFT JOIN caracteristicas c ON h.id_caracteristicas = c.id \n"
                        + "WHERE h.id_habitacion = " + con.resultado.getInt("id") + " ";

                t.setRowCount(0);
                con.sentencia = con.conexion.createStatement();
                con.resultado = con.sentencia.executeQuery(sql);
                while (con.resultado.next()) {
                    t.addRow(new Object[]{con.resultado.getInt("c.id"),
                        con.resultado.getString("c.descripcion"),
                        con.resultado.getString("h.cantidad")});

                }
                
                sql = "SELECT c.id, c.descripcion, c.capacidad\n" +
                        "FROM habitacion_camas h\n" +
                        "LEFT JOIN cama c ON h.cama_id = c.id \n"
                        + "WHERE h.habitacion_id = " + idhabitacion + " ";

                t1.setRowCount(0);
                con.sentencia = con.conexion.createStatement();
                con.resultado = con.sentencia.executeQuery(sql);
                while (con.resultado.next()) {
                    t1.addRow(new Object[]{con.resultado.getInt("c.id"),
                        con.resultado.getString("c.descripcion"),
                        con.resultado.getString("c.capacidad")});

                }

            }
        } catch (SQLException ex) {
            Logger.getLogger(habitaciones.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void guardar(String idnombre, String idtipo, String idubicacion, String idestado) {
        try {
            String sql = "INSERT INTO habitaciones "
                    + "(nombre_id,descripcion,capacidad,id_tipo_hab,id_ubicacion,precio,estado_id) "
                    + "VALUES (" + idnombre + ", '" + txt_descripcion.getText() + "' ,'" + txt_capacidad.getText() + "'," + idtipo + ","
                    + "" + idubicacion + ",'" + txt_precio.getText().replace(".", "") + "'," + idestado + " ) ";
            System.out.println(sql);
            con.actualiza(sql);

            sql = "SELECT LAST_INSERT_ID()";
            con.traeQuery(sql);
            String id = "";
            if (con.resultado.next()) {
                id = con.resultado.getString(1);
            }
            int cf = t.getRowCount();

            for (int i = 0; i < cf; i++) {

                //if (!tablaCheque.getValueAt(i, 5).toString().trim().equals("")) {
                sql = " Insert into habitacion_caracteristicas (id_caracteristicas,id_habitacion,cantidad) "
                        + "values ( " + tabla_caract.getValueAt(i, 0).toString().trim() + "," + id + ", "
                        + " "+ tabla_caract.getValueAt(i, 2).toString().trim() +")";
                System.out.println(sql);
                con.actualiza2(sql);
                //}
            }
            
            cf = t1.getRowCount();

            for (int i = 0; i < cf; i++) {

                //if (!tablaCheque.getValueAt(i, 5).toString().trim().equals("")) {
                sql = " Insert into habitacion_camas (habitacion_id,cama_id) "
                        + "values ( " + id + ", "
                        + " "+ tabla_camas.getValueAt(i, 0).toString().trim() +")";
                System.out.println(sql);
                con.actualiza2(sql);
                //}
            }

        } catch (SQLException ex) {
            Logger.getLogger(habitaciones.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    
    private void editar(String idnombre, String idtipo, String idubicacion, String idestado) {
            String sql = "UPDATE habitaciones "
                    + "SET nombre_id=" + idnombre + ", descripcion='" + txt_descripcion.getText() + "' ,capacidad='" + txt_capacidad.getText() + "',"
                    + "id_tipo_hab=" + idtipo + ",id_ubicacion=" + idubicacion + ""
                    + " , precio='" + txt_precio.getText().replace(".", "") + "'"
                    + ",estado_id=" + idestado + " "
                    + "where id = "+txt_codigo.getText()+" ";
            System.out.println(sql);
            con.actualiza(sql);
            
            sql="delete from habitacion_caracteristicas where id_habitacion= "+ txt_codigo.getText() +" ";
            
            con.actualiza2(sql);
            
            sql="delete from habitacion_camas where habitacion_id= "+ txt_codigo.getText() +" ";
            
            con.actualiza2(sql);
            
            String id="";
            
            id= txt_codigo.getText();
            
            int cf = t.getRowCount();
            
            for (int i = 0; i < cf; i++) {
                
                //if (!tablaCheque.getValueAt(i, 5).toString().trim().equals("")) { 
                 sql = " Insert into habitacion_caracteristicas (id_caracteristicas,id_habitacion,cantidad) "
                        + "values ( " + tabla_caract.getValueAt(i, 0).toString().trim() + "," + id + ", "
                        + " "+ tabla_caract.getValueAt(i, 2).toString().trim() +")";
                System.out.println(sql);
                con.actualiza2(sql);
                //}
            }
            
            cf = t1.getRowCount();

            for (int i = 0; i < cf; i++) {

                //if (!tablaCheque.getValueAt(i, 5).toString().trim().equals("")) {
                sql = " Insert into habitacion_camas (habitacion_id,cama_id) "
                        + "values ( " + id + ", "
                        + " "+ tabla_camas.getValueAt(i, 0).toString().trim() +")";
                System.out.println(sql);
                con.actualiza2(sql);
                //}
            }
        
        
    }

    private void visible(boolean b) {
        txt_capacidad.setEditable(b);
        txt_descripcion.setEditable(b);

        txt_precio.setEditable(b);

        combo_tipo.setEnabled(b);
        combo_nombre.setEnabled(b);
        combo_caract.setEnabled(b);

        combo_ubicacion.setEnabled(b);
        combo_estado.setEnabled(b);
        combo_camas.setEnabled(b);

    }

    private boolean vacio() {

        boolean vacio = false;
        String nombre = "";

        if (combo_tipo.getSelectedIndex() == -1) {
            nombre = "combo";
            vacio = true;
        }

        if (combo_nombre.getSelectedIndex() == -1) {
            nombre = "combo";
            vacio = true;
        }

        if (combo_estado.getSelectedIndex() == -1) {
            nombre = "combo";
            vacio = true;
        }

        if (combo_ubicacion.getSelectedIndex() == -1) {
            nombre = "combo";
            vacio = true;
        }

        if (txt_precio.getText().trim().isEmpty()) {
            nombre = "precio";
            vacio = true;
        }

        if (txt_descripcion.getText().trim().isEmpty()) {
            nombre = "descripcion";
            vacio = true;
        }

        if (txt_capacidad.getText().trim().replace("%", "").isEmpty()) {
            nombre = "capacidad";
            vacio = true;
        }

        if (vacio == true) {

            JOptionPane.showMessageDialog(null, "Debe ingresar " + nombre);

        }

        return vacio;

    }

    long numero;

    private void formato_numeros(JTextField campo) {
        if (!campo.getText().trim().isEmpty()) {
            // System.out.println(campo.getText().length());
            // System.out.println(numero);
            numero = Long.parseLong(campo.getText().replace(".", ""));
            campo.setText(num.format(numero));
            // }
        }
    }

    private void cargar_caracteristicas() {
        
        

        String idcaract = con.BuscaCol("SELECT id FROM caracteristicas WHERE descripcion = '" + combo_caract.getSelectedItem() + "'");
        if (cuentaid(idcaract, tabla_caract)) {
            t.addRow(new Object[]{idcaract, combo_caract.getSelectedItem().toString(), txt_cant.getText()});
            txt_cant.setText("");
        }
        
    }
    
    private void cargar_camas() {
        
        

        String idcama = con.BuscaCol("SELECT id FROM cama WHERE descripcion = '" + combo_camas.getSelectedItem() + "'");
        String idcapaci = con.BuscaCol("SELECT capacidad FROM cama WHERE descripcion = '" + combo_camas.getSelectedItem() + "'");
        if (cuentaid(idcama, tabla_camas)) {
            t1.addRow(new Object[]{idcama, combo_camas.getSelectedItem().toString(), idcapaci});
        }
        
    }

    private boolean cuentaid(String id,javax.swing.JTable tabla) {
        for (int i = 0; i < tabla.getRowCount(); i++) {
            String vcod = tabla.getValueAt(i, 0).toString();
            if (id.equals(vcod)) {
                JOptionPane.showMessageDialog(null, "Codigo ingresado ya existe en el detalle");
                return false;
            }
        }
        return true;
    }

    static String id_habitaciones = "";

    public static void buscador_habitaciones(String id) {
        if (!id.equals("")) {
            //System.out.println(id);
            id_habitaciones = id; 
            if(!id.equals("nada")){
            txt_codigo.setText(id);
            }
            txt_codigo.requestFocus();
        }
    }

}
