/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package referenciales;

import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import menu.menu;

/**
 *
 * @author hpnotebook
 */
public class tarifas extends javax.swing.JInternalFrame {

    conexion.conexion con = new conexion.conexion();
    javax.swing.table.DefaultTableModel t;
    int banPais, banDepartamento, banNuevo , baneditarnuevo= 0;
    String idPais = "", idDepartamento= "";
    static DecimalFormat num = new DecimalFormat("#,##0");
    SimpleDateFormat fec = new SimpleDateFormat("dd/MM/yyyy");
    
    public tarifas() {
        initComponents();
        ((BasicInternalFrameUI) this.getUI()).setNorthPane(null);
        t= (javax.swing.table.DefaultTableModel) tabla_servicios.getModel();
        combos();
        visible(false);
        tabla_servicios.getTableHeader().setReorderingAllowed(false);
        Botones(false);
        t.setRowCount(0);
        btn_habitacion.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_servicios = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        combo_servicios = new javax.swing.JComboBox<>();
        btn_agregar_servicio = new javax.swing.JButton();
        btn_quitar_servicio = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btn_editar = new javax.swing.JButton();
        btn_borrar = new javax.swing.JButton();
        btn_grabar = new javax.swing.JButton();
        btn_cancelar = new javax.swing.JButton();
        btn_salir = new javax.swing.JButton();
        btn_nuevo = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        combo_temporada = new javax.swing.JComboBox<>();
        combo_nombre = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        combo_habitacion = new javax.swing.JComboBox<>();
        txt_codigo = new javax.swing.JTextField();
        btn_tarifas = new javax.swing.JButton();
        btn_habitacion = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        txt_hora = new javax.swing.JTextField();
        txt_cant_personas = new javax.swing.JTextField();
        txt_porcentaje = new javax.swing.JFormattedTextField();
        txt_desc_personas = new javax.swing.JFormattedTextField();
        jPanel10 = new javax.swing.JPanel();
        txt_precio = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(950, 577));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tabla_servicios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Codigo", "Nombre"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla_servicios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tabla_serviciosMousePressed(evt);
            }
        });
        tabla_servicios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tabla_serviciosKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(tabla_servicios);

        jLabel19.setText("Servicios :");

        combo_servicios.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_servicios.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_serviciosFocusGained(evt);
            }
        });
        combo_servicios.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_serviciosPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_servicios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_serviciosActionPerformed(evt);
            }
        });
        combo_servicios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_serviciosKeyPressed(evt);
            }
        });

        btn_agregar_servicio.setBackground(new java.awt.Color(255, 255, 255));
        btn_agregar_servicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/mas2.png"))); // NOI18N
        btn_agregar_servicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_agregar_servicioActionPerformed(evt);
            }
        });

        btn_quitar_servicio.setBackground(new java.awt.Color(255, 255, 255));
        btn_quitar_servicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/menos.png"))); // NOI18N
        btn_quitar_servicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_quitar_servicioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 734, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jLabel19)
                        .addGap(30, 30, 30)
                        .addComponent(combo_servicios, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_agregar_servicio, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_quitar_servicio, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(combo_servicios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_quitar_servicio, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_agregar_servicio, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        btn_editar.setBackground(new java.awt.Color(255, 255, 255));
        btn_editar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/editar.png"))); // NOI18N
        btn_editar.setText("Editar");
        btn_editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editarActionPerformed(evt);
            }
        });

        btn_borrar.setBackground(new java.awt.Color(255, 255, 255));
        btn_borrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/borrar.png"))); // NOI18N
        btn_borrar.setText("Borrar");
        btn_borrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_borrarActionPerformed(evt);
            }
        });

        btn_grabar.setBackground(new java.awt.Color(255, 255, 255));
        btn_grabar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/grabar.png"))); // NOI18N
        btn_grabar.setText("Grabar");
        btn_grabar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_grabarActionPerformed(evt);
            }
        });

        btn_cancelar.setBackground(new java.awt.Color(255, 255, 255));
        btn_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/cancelar.png"))); // NOI18N
        btn_cancelar.setText("Cancelar");
        btn_cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelarActionPerformed(evt);
            }
        });

        btn_salir.setBackground(new java.awt.Color(255, 255, 255));
        btn_salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/atras5.png"))); // NOI18N
        btn_salir.setText("Salir");
        btn_salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salirActionPerformed(evt);
            }
        });

        btn_nuevo.setBackground(new java.awt.Color(255, 255, 255));
        btn_nuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/agregar.png"))); // NOI18N
        btn_nuevo.setText("Nuevo");
        btn_nuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_nuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(btn_nuevo)
                .addGap(5, 5, 5)
                .addComponent(btn_editar)
                .addGap(5, 5, 5)
                .addComponent(btn_borrar)
                .addGap(5, 5, 5)
                .addComponent(btn_grabar)
                .addGap(5, 5, 5)
                .addComponent(btn_cancelar)
                .addGap(5, 5, 5)
                .addComponent(btn_salir)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btn_salir, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_borrar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_editar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btn_nuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_grabar, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setPreferredSize(new java.awt.Dimension(100, 130));

        jLabel12.setText("Temporada :");

        jLabel13.setText("Nombre :");

        combo_temporada.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_temporada.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_temporadaFocusGained(evt);
            }
        });
        combo_temporada.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_temporadaPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_temporada.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_temporadaKeyPressed(evt);
            }
        });

        combo_nombre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_nombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_nombreFocusGained(evt);
            }
        });
        combo_nombre.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_nombrePopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_nombreActionPerformed(evt);
            }
        });
        combo_nombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_nombreKeyPressed(evt);
            }
        });

        jLabel2.setText("Codigo :");

        jLabel18.setText("Habitacion :");

        combo_habitacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        combo_habitacion.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                combo_habitacionFocusGained(evt);
            }
        });
        combo_habitacion.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                combo_habitacionPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        combo_habitacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_habitacionActionPerformed(evt);
            }
        });
        combo_habitacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                combo_habitacionKeyPressed(evt);
            }
        });

        txt_codigo.setEditable(false);
        txt_codigo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txt_codigoFocusGained(evt);
            }
        });
        txt_codigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_codigoActionPerformed(evt);
            }
        });
        txt_codigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_codigoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_codigoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_codigoKeyTyped(evt);
            }
        });

        btn_tarifas.setBackground(new java.awt.Color(255, 255, 255));
        btn_tarifas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/buscar3.png"))); // NOI18N
        btn_tarifas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_tarifasActionPerformed(evt);
            }
        });

        btn_habitacion.setBackground(new java.awt.Color(255, 255, 255));
        btn_habitacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/buscar3.png"))); // NOI18N
        btn_habitacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_habitacionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel2)
                    .addComponent(jLabel18)
                    .addComponent(jLabel12))
                .addGap(9, 9, 9)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(combo_nombre, javax.swing.GroupLayout.Alignment.TRAILING, 0, 153, Short.MAX_VALUE)
                    .addComponent(txt_codigo, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(combo_temporada, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(combo_habitacion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_tarifas, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_habitacion, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_codigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(combo_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)))
                    .addComponent(btn_tarifas, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(combo_temporada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(10, 10, 10)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(combo_habitacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel18))
                    .addComponent(btn_habitacion, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));
        jPanel9.setPreferredSize(new java.awt.Dimension(100, 130));

        jLabel14.setText("Hora limite :");

        jLabel15.setText("Porcentaje Pago :");

        jLabel16.setText("Desc Personas :");

        jLabel17.setText("Cantidad Personas :");

        txt_hora.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_horaFocusLost(evt);
            }
        });
        txt_hora.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_horaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_horaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_horaKeyTyped(evt);
            }
        });

        txt_cant_personas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_cant_personasKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_cant_personasKeyTyped(evt);
            }
        });

        try {
            txt_porcentaje.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###%")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_porcentaje.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_porcentajeFocusLost(evt);
            }
        });
        txt_porcentaje.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_porcentajeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_porcentajeKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_porcentajeKeyTyped(evt);
            }
        });

        try {
            txt_desc_personas.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###%")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txt_desc_personas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_desc_personasFocusLost(evt);
            }
        });
        txt_desc_personas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_desc_personasKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_desc_personasKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_desc_personasKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(jLabel15)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txt_cant_personas, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(txt_hora, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)
                    .addComponent(txt_porcentaje)
                    .addComponent(txt_desc_personas))
                .addGap(12, 12, 12))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_cant_personas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(10, 10, 10)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txt_desc_personas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txt_porcentaje, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_hora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(38, 38, 38))
        );

        jPanel10.setBackground(new java.awt.Color(255, 255, 255));
        jPanel10.setPreferredSize(new java.awt.Dimension(100, 130));

        txt_precio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_precioActionPerformed(evt);
            }
        });
        txt_precio.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_precioKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_precioKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_precioKeyTyped(evt);
            }
        });

        jLabel11.setText("Precio :");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(txt_precio, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txt_precio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(128, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())))
        );

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos_formularios/atras.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(8, 175, 178));
        jLabel3.setText("Tarifas");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(108, 108, 108))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(93, 93, 93))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        jScrollPane1.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 935, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 786, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btn_editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editarActionPerformed
       banNuevo = 2;
        Botones(true);
        visible(true);
        btn_tarifas.setEnabled(false);
        btn_habitacion.setEnabled(true);
    }//GEN-LAST:event_btn_editarActionPerformed

    private void btn_salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salirActionPerformed
        dispose(); 
    }//GEN-LAST:event_btn_salirActionPerformed

    private void btn_nuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_nuevoActionPerformed
        banNuevo = 1;
        limpiaTxt();
        Botones(true);
        visible(true);
        btn_editar.setEnabled(false);
        btn_borrar.setEnabled(false);
        baneditarnuevo=1;
        combo_nombre.requestFocus();
        btn_tarifas.setEnabled(false);
        btn_habitacion.setEnabled(true);
    }//GEN-LAST:event_btn_nuevoActionPerformed

    private void tabla_serviciosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tabla_serviciosKeyReleased
       
    }//GEN-LAST:event_tabla_serviciosKeyReleased

    private void btn_borrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_borrarActionPerformed
        int mensaje = JOptionPane.showConfirmDialog(null, "Desea eliminar el registro", "Atencion", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (mensaje == 0) {
            try {
                
                    String sql = "DELETE FROM tarifas_servicios WHERE tarifa_id=" + txt_codigo.getText() + "";
                    con.actualiza2(sql);
                    sql = "DELETE FROM tarifas WHERE id=" + txt_codigo.getText() + "";
                    System.out.println(sql);
                    con.actualiza2(sql);
                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al eliminar" + e);
            }
        }
        btn_cancelar.doClick();
    }//GEN-LAST:event_btn_borrarActionPerformed

    private void btn_grabarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_grabarActionPerformed

        if(vacio()==false){
        
        String idnombre = con.BuscaCol("SELECT id FROM tarifas_nombres WHERE descripcion = '" + combo_nombre.getSelectedItem() + "'");
        String idtemporada = con.BuscaCol("SELECT id FROM temporadas WHERE descripcion = '" + combo_temporada.getSelectedItem() + "'");
        String idhabitacion = con.BuscaCol("SELECT id FROM habitaciones WHERE descripcion = '" + combo_habitacion.getSelectedItem() + "'");

        if (banNuevo == 1) {
            guardar(idnombre, idtemporada, idhabitacion);
        }
        if (banNuevo == 2) {
            editar(idnombre, idtemporada, idhabitacion);
        }
        btn_cancelar.doClick();
        
        }
    }//GEN-LAST:event_btn_grabarActionPerformed

    private void btn_cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelarActionPerformed
       // combo_habitacion.setSelectedIndex(-1);
       // banPais=0;
        limpiaTxt();
        banNuevo = 0;
        Botones(false);
        visible(false);
        tabla_servicios.setEnabled(true);
        //cargar_tabla("nombre","");
        baneditarnuevo=0;
        
        combos();
       btn_tarifas.setEnabled(true);
        btn_habitacion.setEnabled(false);
        txt_precio.setText("");
    }//GEN-LAST:event_btn_cancelarActionPerformed

    private void tabla_serviciosMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabla_serviciosMousePressed
      
    }//GEN-LAST:event_tabla_serviciosMousePressed

    private void combo_nombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_nombreActionPerformed
      
    }//GEN-LAST:event_combo_nombreActionPerformed

    private void txt_precioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_precioKeyTyped
        con.validar_campos("numeros", evt);
    }//GEN-LAST:event_txt_precioKeyTyped

    private void txt_cant_personasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cant_personasKeyTyped
        con.validar_campos("numeros", evt);
    }//GEN-LAST:event_txt_cant_personasKeyTyped

    private void txt_horaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_horaKeyTyped
        if(txt_hora.getText().length()==5){
            evt.consume();
        }
        con.validar_campos("numeros", evt);
        formato_hora(txt_hora, evt);
       // validar_campos("letras_y_numeros", evt, new int[]{64});
    }//GEN-LAST:event_txt_horaKeyTyped
    
    private void txt_precioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_precioKeyReleased
         formato_numeros(txt_precio);
    }//GEN-LAST:event_txt_precioKeyReleased

    private void txt_precioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_precioKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            combo_servicios.requestFocus();
        }
    }//GEN-LAST:event_txt_precioKeyPressed

    private void txt_cant_personasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cant_personasKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_desc_personas.requestFocus();
        }
    }//GEN-LAST:event_txt_cant_personasKeyPressed

    private void txt_horaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_horaKeyPressed

       if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_precio.requestFocus();
        }
    }//GEN-LAST:event_txt_horaKeyPressed

    private void combo_nombreKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_nombreKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
           combo_nombre.transferFocus();
        }
    }//GEN-LAST:event_combo_nombreKeyPressed

    private void combo_temporadaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_temporadaKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            combo_temporada.transferFocus();
        }
    }//GEN-LAST:event_combo_temporadaKeyPressed

    private void combo_nombreFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_nombreFocusGained
        combo_nombre.showPopup();  
    }//GEN-LAST:event_combo_nombreFocusGained

    private void combo_temporadaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_temporadaFocusGained
        combo_temporada.showPopup(); 
    }//GEN-LAST:event_combo_temporadaFocusGained

    private void combo_nombrePopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_nombrePopupMenuWillBecomeInvisible
        if (combo_nombre.getSelectedIndex()!=-1){
             combo_nombre.transferFocus();
            }
    }//GEN-LAST:event_combo_nombrePopupMenuWillBecomeInvisible

    private void combo_temporadaPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_temporadaPopupMenuWillBecomeInvisible
        if (combo_temporada.getSelectedIndex()!=-1){
             combo_temporada.transferFocus();
            }
    }//GEN-LAST:event_combo_temporadaPopupMenuWillBecomeInvisible

    private void combo_habitacionFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_habitacionFocusGained
       combo_habitacion.showPopup(); 
    }//GEN-LAST:event_combo_habitacionFocusGained

    private void combo_habitacionPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_habitacionPopupMenuWillBecomeInvisible
         if (combo_habitacion.getSelectedIndex()!=-1){
             txt_cant_personas.requestFocus();
            }
    }//GEN-LAST:event_combo_habitacionPopupMenuWillBecomeInvisible

    private void combo_habitacionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_habitacionKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_cant_personas.requestFocus();
        }
    }//GEN-LAST:event_combo_habitacionKeyPressed

    private void txt_codigoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoKeyPressed

    private void txt_codigoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoKeyReleased

    private void txt_codigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_codigoKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_codigoKeyTyped

    private void btn_tarifasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_tarifasActionPerformed
         menu.llamar_internal(new buscadores.buscador_tarifas("tarifas"));
    }//GEN-LAST:event_btn_tarifasActionPerformed

    private void combo_serviciosFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_combo_serviciosFocusGained
        combo_servicios.showPopup();
    }//GEN-LAST:event_combo_serviciosFocusGained

    private void combo_serviciosPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_combo_serviciosPopupMenuWillBecomeInvisible

        
    }//GEN-LAST:event_combo_serviciosPopupMenuWillBecomeInvisible

    private void combo_serviciosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_serviciosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_serviciosActionPerformed

    private void combo_serviciosKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_combo_serviciosKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btn_agregar_servicio.requestFocus();
            btn_agregar_servicio.doClick();
        }
    }//GEN-LAST:event_combo_serviciosKeyPressed

    private void btn_agregar_servicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_agregar_servicioActionPerformed
         if (combo_servicios.getSelectedIndex()<0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un servicio");
            combo_servicios.requestFocus();
        }else{
            cargar_servicios();
            combo_servicios.requestFocus();
        }
        

    }//GEN-LAST:event_btn_agregar_servicioActionPerformed

    private void btn_habitacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_habitacionActionPerformed
        menu.llamar_internal(new buscadores.buscador_habitaciones("tarifas"));
    }//GEN-LAST:event_btn_habitacionActionPerformed

    private void txt_precioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_precioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_precioActionPerformed

    private void btn_quitar_servicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_quitar_servicioActionPerformed
        if (tabla_servicios.getSelectedRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar por lo menos una fila", "Atencion",
                    JOptionPane.WARNING_MESSAGE);

        } else {
            int mensaje = JOptionPane.showConfirmDialog(null, "Desea eliminar la fila seleccionada", "Atencion",
                    JOptionPane.WARNING_MESSAGE, JOptionPane.QUESTION_MESSAGE);
            if (mensaje == 0) {
                javax.swing.table.DefaultTableModel tab = (javax.swing.table.DefaultTableModel) tabla_servicios.getModel();
                tab.removeRow(tabla_servicios.getSelectedRow());
                
            }
            combo_servicios.setSelectedIndex(-1);
        }
    }//GEN-LAST:event_btn_quitar_servicioActionPerformed

    private void txt_horaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_horaKeyReleased
        
    }//GEN-LAST:event_txt_horaKeyReleased

    private void txt_horaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_horaFocusLost
        if(con.validarHora(txt_hora.getText())==false){
            txt_hora.setText("");
        }
        if(txt_hora.getText().trim().replace(":", "").length()==3){
            txt_hora.setText("");
        }
    }//GEN-LAST:event_txt_horaFocusLost

    private void txt_desc_personasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_desc_personasKeyTyped
        
    }//GEN-LAST:event_txt_desc_personasKeyTyped

    private void txt_desc_personasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_desc_personasKeyReleased
        formato_porcentaje(txt_desc_personas);
    }//GEN-LAST:event_txt_desc_personasKeyReleased

    private void txt_desc_personasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_desc_personasFocusLost
        
    }//GEN-LAST:event_txt_desc_personasFocusLost

    private void txt_desc_personasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_desc_personasKeyPressed
        formato_porcentaje(txt_desc_personas);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_porcentaje.requestFocus();
        }
    }//GEN-LAST:event_txt_desc_personasKeyPressed

    private void txt_porcentajeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_porcentajeKeyPressed
        formato_porcentaje(txt_porcentaje);
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            txt_hora.requestFocus();
        }
    }//GEN-LAST:event_txt_porcentajeKeyPressed

    private void txt_porcentajeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_porcentajeKeyTyped
    }//GEN-LAST:event_txt_porcentajeKeyTyped

    private void txt_porcentajeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_porcentajeFocusLost
    }//GEN-LAST:event_txt_porcentajeFocusLost

    private void txt_porcentajeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_porcentajeKeyReleased
       formato_porcentaje(txt_porcentaje);
    }//GEN-LAST:event_txt_porcentajeKeyReleased

    private void txt_codigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_codigoActionPerformed
        
    }//GEN-LAST:event_txt_codigoActionPerformed

    private void txt_codigoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_codigoFocusGained
        if(baneditarnuevo==0){
        Botones(true);
        if (!id_tarifas.equals("") && !id_tarifas.equals("nada")) {
                
                traeFila(id_tarifas);
                
                id_tarifas="";
                
            }else if(id_tarifas.equals("nada")){
                //si es combo que se actualize aca
                id_tarifas="";
            }
        }
    }//GEN-LAST:event_txt_codigoFocusGained

    private void combo_habitacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_habitacionActionPerformed
       if (!id_habitaciones.equals("") && !id_habitaciones.equals("nada")) {
                banPais =0;
                cargaCombo(combo_habitacion, "SELECT descripcion FROM habitaciones ORDER BY descripcion","descripcion");
                banPais = 1;
                combo_habitacion.setSelectedItem(con.BuscaCol("SELECT descripcion FROM habitaciones WHERE id = " + id_habitaciones));
                
                
               id_habitaciones="";
               
               
            }else if(id_habitaciones.equals("nada")){
                banPais =0;
                cargaCombo(combo_habitacion, "SELECT descripcion FROM habitaciones ORDER BY descripcion","descripcion");
               id_habitaciones="";
               banPais = 1;
            }
       
       if(combo_habitacion.getSelectedIndex()>=0 && banPais==1){
       
       int precioh = Integer.parseInt(con.BuscaCol("SELECT precio FROM habitaciones WHERE descripcion = '" + combo_habitacion.getSelectedItem() +"' "));
       
       
       if (txt_precio.getText().equals("")) {
                txt_precio.setText("0");
            }

            if (!txt_precio.getText().equals("")) {

                // precio = Integer.parseInt(txt_precio.getText().replace(".", ""));
                precio = precio + precioh;

                txt_precio.setText(num.format(precio));

                precio = 0;
                precioh = 0;
            }
       }
    }//GEN-LAST:event_combo_habitacionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_agregar_servicio;
    private javax.swing.JButton btn_borrar;
    private javax.swing.JButton btn_cancelar;
    private javax.swing.JButton btn_editar;
    private javax.swing.JButton btn_grabar;
    private javax.swing.JButton btn_habitacion;
    private javax.swing.JButton btn_nuevo;
    private javax.swing.JButton btn_quitar_servicio;
    private javax.swing.JButton btn_salir;
    private javax.swing.JButton btn_tarifas;
    private javax.swing.ButtonGroup buttonGroup1;
    private static javax.swing.JComboBox<String> combo_habitacion;
    private javax.swing.JComboBox<String> combo_nombre;
    private javax.swing.JComboBox<String> combo_servicios;
    private javax.swing.JComboBox<String> combo_temporada;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabla_servicios;
    private javax.swing.JTextField txt_cant_personas;
    private static javax.swing.JTextField txt_codigo;
    private javax.swing.JFormattedTextField txt_desc_personas;
    private javax.swing.JTextField txt_hora;
    private javax.swing.JFormattedTextField txt_porcentaje;
    private static javax.swing.JTextField txt_precio;
    // End of variables declaration//GEN-END:variables

  
    
    private void combos() {
        cargaCombo(combo_temporada, "SELECT descripcion FROM temporadas ORDER BY descripcion","descripcion");
       // cargaCombo(combo_pais, "SELECT descripcion FROM pais ORDER BY descripcion");
        cargaCombo(combo_nombre, "SELECT descripcion FROM tarifas_nombres ORDER BY descripcion","descripcion");
        
        cargaCombo(combo_servicios, "SELECT nombre FROM servicios_nombres ORDER BY nombre","nombre");
        cargaCombo(combo_habitacion, "SELECT descripcion FROM habitaciones ORDER BY descripcion","descripcion");
        banPais = 1;
    }
    
    
    private void cargaCombo(JComboBox cbo, String sql, String columna) {
        try {
            cbo.removeAllItems();
            con.sentencia = con.conexion.createStatement();
            con.resultado = con.sentencia.executeQuery(sql);
            while (con.resultado.next()) {
                if(columna.equals("descripcion")){
                    cbo.addItem(con.resultado.getString("descripcion"));
                }else if(columna.equals("nombre")){
                    cbo.addItem(con.resultado.getString("nombre"));
                }
                
            }
            cbo.setSelectedIndex(-1);
        } catch (SQLException ex) {
            Logger.getLogger(tarifas.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    
    private void limpiaTxt() {
        txt_desc_personas.setText("");
        txt_cant_personas.setText("");
        
        txt_precio.setText("");
        txt_hora.setText("");
        txt_porcentaje.setText("");
        txt_codigo.setText("");
        combo_temporada.setSelectedIndex(-1);
        combo_nombre.setSelectedIndex(-1);
        combo_servicios.setSelectedIndex(-1);
       
        combo_habitacion.setSelectedIndex(-1);

        t.setRowCount(0);
    }

    private void Botones(boolean b) {
        if (b == true) {
            btn_grabar.setEnabled(true);
            btn_nuevo.setEnabled(false);
            btn_salir.setEnabled(false);
            btn_cancelar.setEnabled(true);
            btn_editar.setEnabled(true);
            btn_borrar.setEnabled(true);
        } else {
            btn_grabar.setEnabled(false);
            btn_nuevo.setEnabled(true);
            btn_salir.setEnabled(true);
            btn_cancelar.setEnabled(false);
            btn_editar.setEnabled(false);
            btn_borrar.setEnabled(false);
        }
    }

    private void traeFila(String id) {
        int idCiu;
        
            try {
                String sql = "SELECT * FROM tarifas "
                        + "WHERE id = "+id+" ";
                con.traeQuery(sql);
                if (con.resultado.next()) {
                    txt_cant_personas.setText(con.resultado.getString("cantidad_personas"));
                    txt_desc_personas.setText(con.resultado.getString("descuento_personas"));
                 
                    txt_precio.setText(num.format(con.resultado.getInt("precio")));
                    txt_hora.setText(con.resultado.getString("hora_limite"));
                    txt_porcentaje.setText(con.resultado.getString("porcentaje_pago"));
                   
                    combo_habitacion.setSelectedItem(con.BuscaCol("SELECT descripcion FROM habitaciones WHERE id = " + con.resultado.getString("habitacion_id")));
                    combo_temporada.setSelectedItem(con.BuscaCol("SELECT descripcion FROM temporadas WHERE id = " + con.resultado.getString("temporada_id")));
                    combo_nombre.setSelectedItem(con.BuscaCol("SELECT descripcion FROM tarifas_nombres WHERE id = " + con.resultado.getString("tarifas_nombres_id")));
                         
                    
                    sql = "SELECT s.id, s.nombre \n" +
                            "FROM servicios_nombres s\n" +
                            "RIGHT JOIN tarifas_servicios t ON t.servicio_nombres_id = s.id \n" +
                            "WHERE t.tarifa_id = "+con.resultado.getInt("id")+" ";
                    
                    
                        t.setRowCount(0);
                        con.sentencia = con.conexion.createStatement();
                        con.resultado = con.sentencia.executeQuery(sql);
                        while (con.resultado.next()) {
                            t.addRow(new Object[]{con.resultado.getInt("s.id"), 
                                con.resultado.getString("s.nombre")});

                        }  
                    
                }
            } catch (SQLException ex) {
                Logger.getLogger(tarifas.class.getName()).log(Level.SEVERE, null, ex);
            }
        
    }
    
    

    private void guardar(String idnombre, String idtemporada, String idhabitacion) {
        try {
            String sql = "INSERT INTO tarifas "
                    + "(tarifas_nombres_id,temporada_id,habitacion_id,cantidad_personas,descuento_personas,porcentaje_pago,hora_limite,precio) "
                    + "VALUES (" + idnombre + ", "+idtemporada+" ," + idhabitacion + ",'" + txt_cant_personas.getText() + "',"
                    + "'" + txt_desc_personas.getText().replace("%", "") + "','" + txt_porcentaje.getText().replace("%", "") + "','" + txt_hora.getText() + "',"
                    + "'" + txt_precio.getText().replace(".","") + "') ";
            System.out.println(sql);
            con.actualiza(sql);
            
            sql = "SELECT LAST_INSERT_ID()";
            con.traeQuery(sql);
            String id="";
            if (con.resultado.next()) {
                id = con.resultado.getString(1);
            }
            int cf = t.getRowCount();
            
                for (int i = 0; i < cf; i++) {
                    
                    //if (!tablaCheque.getValueAt(i, 5).toString().trim().equals("")) {
                    sql = " Insert into tarifas_servicios (tarifa_id,servicio_nombres_id) "
                            + "values (" + id + ","
                            + "" + tabla_servicios.getValueAt(i, 0).toString().trim() + ")";
                    System.out.println(sql);
                    con.actualiza2(sql);
                    //}
                }
            
        } catch (SQLException ex) {
            Logger.getLogger(tarifas.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
    }

    private void editar(String idnombre, String idtemporada, String idhabitacion) {
            String sql = "UPDATE tarifas "
                    + "SET tarifas_nombres_id=" + idnombre + ", temporada_id="+idtemporada+" ,habitacion_id=" + idhabitacion + ","
                    + "cantidad_personas='" + txt_cant_personas.getText() + "',descuento_personas='" + txt_desc_personas.getText().replace("%", "") + "'"
                    + " , porcentaje_pago='" + txt_porcentaje.getText().replace("%", "") + "'"
                    + ",hora_limite='" + txt_hora.getText() + "',precio='" + txt_precio.getText().replace(".","") + "' "
                    + "where id= "+txt_codigo.getText()+" ";
            System.out.println(sql);
            con.actualiza(sql);
            
            sql="delete from tarifas_servicios where tarifa_id= "+ txt_codigo.getText() +" ";
            
            con.actualiza2(sql);
            
            String id="";
            
            id= txt_codigo.getText();
            
            int cf = t.getRowCount();
            
            for (int i = 0; i < cf; i++) {
                
                //if (!tablaCheque.getValueAt(i, 5).toString().trim().equals("")) {
                sql = " Insert into tarifas_servicios (tarifa_id,servicio_nombres_id) "
                        + "values (" + id + ","
                        + "" + tabla_servicios.getValueAt(i, 0).toString().trim() + ")";
                System.out.println(sql);
                con.actualiza2(sql);
                //}
            }
        
        
    }
    
    
    

    private void visible(boolean b) {
        txt_desc_personas.setEditable(b);
        txt_cant_personas.setEditable(b);
       
        txt_precio.setEditable(b);
        txt_hora.setEditable(b);
        txt_porcentaje.setEditable(b);
        combo_temporada.setEnabled(b);
        combo_nombre.setEnabled(b);
        combo_servicios.setEnabled(b);
        
        combo_habitacion.setEnabled(b);
       
    }



    private boolean vacio() {
        
        boolean vacio = false;
        String nombre="";
 
        
        if (combo_temporada.getSelectedIndex() == -1) {
                nombre="combo";
                vacio=true;
            }
        
        if (combo_nombre.getSelectedIndex() == -1) {
                nombre="combo";
                vacio=true;
            }
        
   
        if (combo_habitacion.getSelectedIndex() == -1) {
                nombre="combo";
                vacio=true;
            }
        
        if (txt_precio.getText().trim().isEmpty()) {
                nombre="precio";
                vacio=true;
            }
        
        if (txt_cant_personas.getText().trim().isEmpty()) {
                nombre="cantidad personas";
                vacio=true;
            }
        
        if (txt_desc_personas.getText().trim().replace("%", "").isEmpty()) {
                nombre="descuento personas";
                vacio=true;
            }
        
        if (txt_porcentaje.getText().trim().replace("%", "").isEmpty()) {
                nombre="porcentaje de pago";
                vacio=true;
            }
        
        if (txt_hora.getText().trim().isEmpty()) {
                nombre="hora limite";
                vacio=true;
            }
        
     
        
        if(vacio==true){
        
         JOptionPane.showMessageDialog(null, "Debe ingresar "+nombre);
         
        }
        
        return vacio;
        
    }

    
    
    
    long numero;

    private void formato_numeros(JTextField campo) {
         if(!campo.getText().trim().isEmpty()){
       // System.out.println(campo.getText().length());
       // System.out.println(numero);
         numero = Long.parseLong(campo.getText().replace(".", ""));
        campo.setText(num.format(numero));
       // }
        }
    }
    
    
     public void formato_hora(JTextField campo, KeyEvent e) { 
        String hora = campo.getText().trim().replace(":", "");
         
        String var, var1;
        
        if(hora.length()<=2){
            campo.setText(hora);
        }else if(hora.length()==3){
            var = hora.substring(0, 2);
            var1 = hora.substring(2, 3);
            campo.setText(var+":"+var1);
        }else if(hora.length()==4){
            var = hora.substring(0, 2);
            var1 = hora.substring(2, 4);
            campo.setText(var+":"+var1);
        }else if(hora.length()>=5){
            var = hora.substring(0, 2);
            var1 = hora.substring(2, 4);
            campo.setText(var+":"+var1);
        }
        
       
    }
     
     
     public void formato_porcentaje(JTextField campo) { 
        String num = campo.getText().trim().replace("%", "");
        int num1=0;
        num=num.replace(" ", "");
        if(!num.equals("")){
        num1 = Integer.parseInt(num);
        }
        if(num1>100){
           // e.consume();
           campo.setText("");
        }
        
    }
    

    private void cargar_servicios() {
        
        String idservicio = con.BuscaCol("SELECT id FROM servicios_nombres WHERE nombre = '" + combo_servicios.getSelectedItem() + "'");
        if(cuentaid(idservicio)){
        t.addRow(new Object[]{idservicio, combo_servicios.getSelectedItem().toString()});
        }
    }
    
    
    
    private boolean cuentaid(String id) {
        for (int i = 0; i < tabla_servicios.getRowCount(); i++) {
            String vcod = tabla_servicios.getValueAt(i, 0).toString();
            if (id.equals(vcod)) {
                JOptionPane.showMessageDialog(null, "Codigo ingresado ya existe en el detalle");
                return false;
            }
        }
        return true;
    }
    
    
      static String id_tarifas="";
    public static void buscador_tarifas(String id){
        if (!id.equals("")) {
            //System.out.println(id);
            id_tarifas = id; 
            if(!id.equals("nada")){
            txt_codigo.setText(id);
            }
            txt_codigo.requestFocus();
        }
    }
    
    static String id_habitaciones="";
    static int precio = 0;
    public static void buscador_habitaciones(String id){
        if (!id.equals("")) {
            
            //System.out.println(id);
            id_habitaciones = id; 
            combo_habitacion.setSelectedIndex(-1);
        }
    }
    

}
